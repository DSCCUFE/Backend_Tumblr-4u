{
  "stats": {
    "suites": 49,
    "tests": 71,
    "passes": 71,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-02T00:14:07.788Z",
    "end": "2022-01-02T00:15:55.964Z",
    "duration": 108176,
    "testsRegistered": 71,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e13fc600-9e2e-4721-850f-510d4c0fae73",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7a803d6-b9cd-45b0-a09e-f5258933b550",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5203b2cf-ead3-4c09-b6d0-ee083ac960f0",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 4842,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7c417f39-c27f-43ac-8efe-a98a71d1e105",
                  "parentUUID": "5203b2cf-ead3-4c09-b6d0-ee083ac960f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c417f39-c27f-43ac-8efe-a98a71d1e105"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4842,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "dc35f4ff-d7f6-4dc2-a128-44cd5264ed07",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  url: '',\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.showPost(req.url,req.params.postId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "cdbeb600-ee13-4309-abda-f84fb92c7605",
                  "parentUUID": "dc35f4ff-d7f6-4dc2-a128-44cd5264ed07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cdbeb600-ee13-4309-abda-f84fb92c7605"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 141,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b3198033-e8f0-434b-90de-d31c172483d8",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 482,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "83a6745f-20ba-46fb-8476-585396221f67",
                  "parentUUID": "b3198033-e8f0-434b-90de-d31c172483d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83a6745f-20ba-46fb-8476-585396221f67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 482,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1ce77024-d42b-4bee-8e35-8a305c55e1ce",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 342,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    commentId: '61d0896fdfed7734fc1afcfe',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "291bece0-f1d7-4ba3-8dae-742ff98afa31",
                  "parentUUID": "1ce77024-d42b-4bee-8e35-8a305c55e1ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "291bece0-f1d7-4ba3-8dae-742ff98afa31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 342,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1ce23c0c-9f04-4c3a-a84f-f6d866cdc70a",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 482,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "fd38ae0a-08fc-4ff7-a91a-03cbf635804c",
                  "parentUUID": "1ce23c0c-9f04-4c3a-a84f-f6d866cdc70a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd38ae0a-08fc-4ff7-a91a-03cbf635804c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 482,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d64c247f-60ee-4543-948b-f7397a584203",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    reblogId: '61d08579d8591f8b72b7b4c9',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "e71b8bac-f95c-4c7b-a2a0-0a1d6b7996eb",
                  "parentUUID": "d64c247f-60ee-4543-948b-f7397a584203",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e71b8bac-f95c-4c7b-a2a0-0a1d6b7996eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8fa4b140-7f7e-4634-b715-0fcdfc4b82e2",
              "title": "Function loopLikeAndCheck",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopLikeAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = '61af36a793d7c3194ff42269';\nconst b = '61ae881aab9ea73f2282b03e';\nconst c = '61ae887d2676ed5d9b5d532f';\nconst arr = [\n  {isDeleted: false, blogId: a},\n  {isDeleted: false, blogId: b},\n  {isDeleted: false, blogId: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopLikeAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopLikeAndCheck(arr, element)[1].should.be.eq(0);\npostFunctions.loopLikeAndCheck(arr, element)[2].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "a0b990f2-143c-4bbc-b711-9a7af1c778a8",
                  "parentUUID": "8fa4b140-7f7e-4634-b715-0fcdfc4b82e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0b990f2-143c-4bbc-b711-9a7af1c778a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5247c2a8-a2c6-4700-91ed-0234df2a9dfd",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {isDeleted: false, _id: a},\n  {isDeleted: false, _id: b},\n  {isDeleted: false, _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "38aa5279-b071-448f-95d9-d5153eb7bceb",
                  "parentUUID": "5247c2a8-a2c6-4700-91ed-0234df2a9dfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38aa5279-b071-448f-95d9-d5153eb7bceb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "507eb274-8ab3-4383-8722-76c2248a69da",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 605,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9111db96-4833-440c-8159-57b08a192c73",
                  "parentUUID": "507eb274-8ab3-4383-8722-76c2248a69da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9111db96-4833-440c-8159-57b08a192c73"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 605,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2ad95558-d7eb-4dbb-9e0f-4e7d7cbf196e",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    notesId: '61ca5d92a8a4556c5b24f1f9',\n  },\n};\npostFunctions.getNotes(req.params.notesId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "30a6dffe-e7c8-4a52-82dc-91a35fe74fe2",
                  "parentUUID": "2ad95558-d7eb-4dbb-9e0f-4e7d7cbf196e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30a6dffe-e7c8-4a52-82dc-91a35fe74fe2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c0a1f2e2-4b25-4902-b8b2-e68bc132daac",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 14804,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  decoded: {\n    email: 'ahmed.ayman.1420@gmail.com'\n  },\n};\npostFunctions.getDashboard(req.decoded.email).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8f0b7321-e9ee-4ce0-b149-528c1134880f",
                  "parentUUID": "c0a1f2e2-4b25-4902-b8b2-e68bc132daac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f0b7321-e9ee-4ce0-b149-528c1134880f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14804,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0028f327-c415-4a64-a6af-53c6bab62486",
              "title": "Function editPost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Edit a Post Post",
                  "fullTitle": "Post APIs Function editPost It Should Edit a Post Post",
                  "timedOut": false,
                  "duration": 146,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n  body: {\n    postHtml: '</>',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.editPost(req.params.postId, req.body.postHtml, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Edited Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a6b614f7-9361-480d-8f2b-46b39e43c7b2",
                  "parentUUID": "0028f327-c415-4a64-a6af-53c6bab62486",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6b614f7-9361-480d-8f2b-46b39e43c7b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "57366285-8dfd-4f65-9675-6494190448ae",
              "title": "Function reportPost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Report a Post",
                  "fullTitle": "Post APIs Function reportPost It Should Report a Post",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n};\npostFunctions.reportPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Reported Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0bee659b-dc1b-4bc3-bcdf-0cb8319a3178",
                  "parentUUID": "57366285-8dfd-4f65-9675-6494190448ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bee659b-dc1b-4bc3-bcdf-0cb8319a3178"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 145,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8ae35498-6d0b-44a2-9986-df64f8d054c0",
              "title": "Function deletePost",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Delete a Post",
                  "fullTitle": "Post APIs Function deletePost It Should Delete a Post",
                  "timedOut": false,
                  "duration": 590,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d94a8a4556c5b24f233',\n  },\n};\npostFunctions.deletePost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Deleted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e9ac8802-7088-48e5-a91b-cbf7e7f31528",
                  "parentUUID": "8ae35498-6d0b-44a2-9986-df64f8d054c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9ac8802-7088-48e5-a91b-cbf7e7f31528"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 590,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d08b75fe-cd1f-4634-8899-2c781033932d",
              "title": "Function getBlogPosts",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get Blog Posts",
                  "fullTitle": "Post APIs Function getBlogPosts It Should get Blog Posts",
                  "timedOut": false,
                  "duration": 11054,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getBlogPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Blog Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "359543b3-08c2-4fc3-8958-3d1955d4a290",
                  "parentUUID": "d08b75fe-cd1f-4634-8899-2c781033932d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "359543b3-08c2-4fc3-8958-3d1955d4a290"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11054,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "720df543-8f42-40eb-b1e9-8f276897604b",
              "title": "Function getLikedPosts",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Liked Posts",
                  "fullTitle": "Post APIs Function getLikedPosts It Should Get Liked Posts",
                  "timedOut": false,
                  "duration": 1734,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getLikedPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Liked Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "66a4d876-b33e-4ac2-b0b3-64501c6c4834",
                  "parentUUID": "720df543-8f42-40eb-b1e9-8f276897604b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66a4d876-b33e-4ac2-b0b3-64501c6c4834"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1734,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e21aca4a-e15e-437e-abc3-ed40117fb76e",
              "title": "Function activityFeed",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Activity Feed",
                  "fullTitle": "Post APIs Function activityFeed It Should Get Activity Feed",
                  "timedOut": false,
                  "duration": 32903,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.activityFeed(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Activity Feed Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f9853a7e-4b53-4fe7-8538-6961163c78a2",
                  "parentUUID": "e21aca4a-e15e-437e-abc3-ed40117fb76e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9853a7e-4b53-4fe7-8538-6961163c78a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32903,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c511a879-0ed8-4a57-a67f-9cd27fd3bb75",
              "title": "Upload media APIs",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests uploading image on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading image on server, gets url",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'image2022-1-1T03-59-05.770Z.jpg';\n    \npostFunctions.uploadAny(blobName, 'image/jpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "d9394c5f-fed6-49df-9018-ed64ebec56d3",
                  "parentUUID": "c511a879-0ed8-4a57-a67f-9cd27fd3bb75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading video on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading video on server, gets url",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'video2022-01-01T15-23-27.384Z.mp4';\n    \npostFunctions.uploadAny(blobName, 'video/mp4')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "a1e7e1c7-7d4a-432b-84a9-ab29fd6b22ff",
                  "parentUUID": "c511a879-0ed8-4a57-a67f-9cd27fd3bb75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading audio on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading audio on server, gets url",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n    \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "aef1a657-713e-416e-bbd7-4cb5bddcf6c0",
                  "parentUUID": "c511a879-0ed8-4a57-a67f-9cd27fd3bb75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9394c5f-fed6-49df-9018-ed64ebec56d3",
                "a1e7e1c7-7d4a-432b-84a9-ab29fd6b22ff",
                "aef1a657-713e-416e-bbd7-4cb5bddcf6c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 36,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a8892fe5-f93e-41d5-8fa9-70dc742fe31e",
              "title": "Random posts APIs",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests radar posts",
                  "fullTitle": "Post APIs Random posts APIs It tests radar posts",
                  "timedOut": false,
                  "duration": 3333,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "postFunctions.retrieveRandomPosts()\n        .then((res)=>{\n          expect(res.length).to.be.equal(10);\n          done();\n        }).catch(done);",
                  "err": {},
                  "uuid": "1c729ee0-e2ba-45dd-bd6b-528f1366758d",
                  "parentUUID": "a8892fe5-f93e-41d5-8fa9-70dc742fe31e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests trending posts",
                  "fullTitle": "Post APIs Random posts APIs It tests trending posts",
                  "timedOut": false,
                  "duration": 3196,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "post=[\n  {\n    \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n    \"blogId\": '61c9d6b82569f9abb33ebe04',\n    \"postHtml\": '<img width=\"100%\" src=\"https://tumblrstorage.blob.core.windows.net/imagess/image2022-1-1T03-59-05.770Z.jpg]\" alt=\"\">',\n    \"type\": 'text',\n    \"state\": 'published',\n    \"tags\": [ 'edit', 'cmp', 'Trending' ],\n    \"notesId\": '61ca5d91a8a4556c5b24f1f3',\n    \"isDeleted\": false,\n    \"isReported\": false,\n    \"postUrl\": '/61ca5d91a8a4556c5b24f1f4/show_post',\n    \"__v\": 1\n  }\n]\npostFunctions.retrieveTrendingPosts()\n    .then((res)=>{\n      expect(res.trendingPostsLim[0].notesId).to.be.equal(post[0].notesId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "84705c1b-c85f-463f-8f96-ef67a01eb53a",
                  "parentUUID": "a8892fe5-f93e-41d5-8fa9-70dc742fe31e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c729ee0-e2ba-45dd-bd6b-528f1366758d",
                "84705c1b-c85f-463f-8f96-ef67a01eb53a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6529,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "b1a1eae7-c37d-4013-80bb-de33c3d32a1a",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 620,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "6fe88893-b679-4e22-bd33-cab1ce5531c2",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 599,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CM',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "f1d7c2ab-04b5-4a71-aceb-55b164d03dbf",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 599,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "71f76fb4-1ce2-4101-85b9-d814287a9ef8",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 588,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CMP',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('CMP-2023');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "487f8cb0-7039-48a1-af56-cff13a42ccfc",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a user",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a user",
                  "timedOut": false,
                  "duration": 1216,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[2]).to.be.equal('Writing');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b83e8c0c-abe0-469c-952f-02fc0b9bc1c8",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get interests when no word is entered",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get interests when no word is entered",
                  "timedOut": false,
                  "duration": 1204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[3]).to.be.equal('Sports');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "5ebf8871-c757-438a-a9f7-d0896fe94fd9",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has interested hashtags",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has interested hashtags",
                  "timedOut": false,
                  "duration": 1768,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      // console.log('res.resultPostHashTag[0].blogId: ', res);\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "7e1bfbd2-5586-4dfd-a86a-d48120f3b48b",
                  "parentUUID": "0328027c-0ca7-4a08-8967-20fc3fe5e460",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6fe88893-b679-4e22-bd33-cab1ce5531c2",
                "f1d7c2ab-04b5-4a71-aceb-55b164d03dbf",
                "71f76fb4-1ce2-4101-85b9-d814287a9ef8",
                "487f8cb0-7039-48a1-af56-cff13a42ccfc",
                "b83e8c0c-abe0-469c-952f-02fc0b9bc1c8",
                "5ebf8871-c757-438a-a9f7-d0896fe94fd9",
                "7e1bfbd2-5586-4dfd-a86a-d48120f3b48b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6594,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "1d174a99-1334-4cf3-9515-fadf293cdee1",
          "title": "UserBlog Methodes Testing",
          "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It gets checkout these blogs",
              "fullTitle": "UserBlog Methodes Testing It gets checkout these blogs",
              "timedOut": false,
              "duration": 2691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blogFunctions.retrieveRandomBlogs()\n    .then((res)=>{\n    expect(res.length).to.be.equal(10);\n    done();\n    }).catch(done);",
              "err": {},
              "uuid": "04471246-dc5e-4f16-b4e4-ce8666df0db9",
              "parentUUID": "1d174a99-1334-4cf3-9515-fadf293cdee1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c5a25c3c-743c-4b8d-ba81-72f33402b6a1",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes Testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 497,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n decoded: {\n    email:email,\n  },\n  body:\n   {\n     title: 'Engineering',\n     name:blogName ,\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(func_params).then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( blogName);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "75b7c979-cbe8-4648-ad52-267c95c260b1",
                  "parentUUID": "c5a25c3c-743c-4b8d-ba81-72f33402b6a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes Testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email: email,\n   },\n   body:\n    {\n      title: 'Engineering',\n      name:blogName,\n      privacy: false,\n    },\n };\nuserFunctions.createBlog(func_params).then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4763cc7f-df4a-44d3-91f5-0faa6ef761fc",
                  "parentUUID": "c5a25c3c-743c-4b8d-ba81-72f33402b6a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75b7c979-cbe8-4648-ad52-267c95c260b1",
                "4763cc7f-df4a-44d3-91f5-0faa6ef761fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 653,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4aa24635-b686-432b-b4c4-7b1eb17b14f6",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61c9e680b47e807b87e3dbe9').then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq('Diana');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0048ffc7-bbae-4bbd-b79c-acfebc92adbe",
                  "parentUUID": "4aa24635-b686-432b-b4c4-7b1eb17b14f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 144,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61b33c94c4bab40beeb82b6f').then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d604d2e3-fa94-4213-96cc-8895f357fdd3",
                  "parentUUID": "4aa24635-b686-432b-b4c4-7b1eb17b14f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0048ffc7-bbae-4bbd-b79c-acfebc92adbe",
                "d604d2e3-fa94-4213-96cc-8895f357fdd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "98f9d896-79a1-4cca-b15e-3ab95ce79b84",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "41dbf1b6-75db-4772-a874-c08ebaa51fd6",
                  "parentUUID": "98f9d896-79a1-4cca-b15e-3ab95ce79b84",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    name: blogName,\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1ca9afd6-c987-4e7a-a320-316a22949fb0",
                  "parentUUID": "98f9d896-79a1-4cca-b15e-3ab95ce79b84",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7c09f649-0342-4236-8af1-c2c8d14e9376",
                  "parentUUID": "98f9d896-79a1-4cca-b15e-3ab95ce79b84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41dbf1b6-75db-4772-a874-c08ebaa51fd6",
                "1ca9afd6-c987-4e7a-a320-316a22949fb0",
                "7c09f649-0342-4236-8af1-c2c8d14e9376"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 596,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3770c894-b7ef-4cb7-8763-25ac051ac2b7",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes Testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 445,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc09'\n    },\n };\nuserFunctions.followBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "18a89088-117c-47d0-a3e7-b8a51c2b5b44",
                  "parentUUID": "3770c894-b7ef-4cb7-8763-25ac051ac2b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 283,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc00'\n    },\n };\nuserFunctions.followBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d51e9c81-d606-4a42-99fa-47a8c702fa9c",
                  "parentUUID": "3770c894-b7ef-4cb7-8763-25ac051ac2b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18a89088-117c-47d0-a3e7-b8a51c2b5b44",
                "d51e9c81-d606-4a42-99fa-47a8c702fa9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 728,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "613726b6-28e7-4a44-81dd-e6a09fb7b560",
              "title": "Does Follow Testing Part 1",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the user if he/she follows this blog",
                  "fullTitle": "UserBlog Methodes Testing Does Follow Testing Part 1 should return object of the user if he/she follows this blog",
                  "timedOut": false,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId='61c9e7b3b47e807b87e3dc09';\n   userFunctions.doesFollow(email,blogId).then((res) => {\n   expect(res).to.be.a('object');\n   done();\n }).catch(done);",
                  "err": {},
                  "uuid": "9566f8c7-909f-415a-ac58-bafe5a6b94a2",
                  "parentUUID": "613726b6-28e7-4a44-81dd-e6a09fb7b560",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9566f8c7-909f-415a-ac58-bafe5a6b94a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a1a3820e-bb42-414f-81f7-7502991ab437",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes Testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 450,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n    email:email,\n  },\n  body: {\n    blogId:'61c9e7b3b47e807b87e3dc09'\n  },\n};\nuserFunctions.unfollowBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a9d48b97-d014-4d99-ac6e-d63a7ce4723e",
                  "parentUUID": "a1a3820e-bb42-414f-81f7-7502991ab437",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 293,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc00'\n    },\n };\nuserFunctions.unfollowBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2f5cddcb-89ba-465d-91d9-c2e3e2a8d505",
                  "parentUUID": "a1a3820e-bb42-414f-81f7-7502991ab437",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9d48b97-d014-4d99-ac6e-d63a7ce4723e",
                "2f5cddcb-89ba-465d-91d9-c2e3e2a8d505"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 743,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c1d4fc0b-4d0c-4d79-9b0b-28ce9ec8cfdf",
              "title": "Does Follow Testing Part 2",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return null because the user does not follow this blog any more",
                  "fullTitle": "UserBlog Methodes Testing Does Follow Testing Part 2 should return null because the user does not follow this blog any more",
                  "timedOut": false,
                  "duration": 147,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId='61c9e7b3b47e807b87e3dc09';\n userFunctions.doesFollow(email,blogId).then((res) => {\n   expect(res).to.be.a('null');\n   done();\n }).catch(done);",
                  "err": {},
                  "uuid": "a0b11882-734a-4558-9ca6-aa3cb3f8f0e2",
                  "parentUUID": "c1d4fc0b-4d0c-4d79-9b0b-28ce9ec8cfdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0b11882-734a-4558-9ca6-aa3cb3f8f0e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 147,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cbd548d1-2a3d-40a8-a5d4-721f4e4ea423",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 284,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b47e807b87e3dbe9';\nblogFunctions.blockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "42e44406-ba4c-4709-a12d-70f239981d8b",
                  "parentUUID": "cbd548d1-2a3d-40a8-a5d4-721f4e4ea423",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b4e807b887e3dbe9';\nblogFunctions.blockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b435a063-fa45-4882-a009-0664a0aad471",
                  "parentUUID": "cbd548d1-2a3d-40a8-a5d4-721f4e4ea423",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42e44406-ba4c-4709-a12d-70f239981d8b",
                "b435a063-fa45-4882-a009-0664a0aad471"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 424,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5d9af655-a778-4a2c-ad65-b6dd50bb8202",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 282,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b47e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7aa7e225-8502-4aaf-b7ba-e552fd65982e",
                  "parentUUID": "5d9af655-a778-4a2c-ad65-b6dd50bb8202",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b00e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ccac20dc-d7ff-4c8c-89c3-f4692fca8d27",
                  "parentUUID": "5d9af655-a778-4a2c-ad65-b6dd50bb8202",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7aa7e225-8502-4aaf-b7ba-e552fd65982e",
                "ccac20dc-d7ff-4c8c-89c3-f4692fca8d27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 423,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ad80f9d1-1a58-4b6a-8993-7bcb3f0417df",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes Testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 913,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteBlog(email, blogId)\n .then((res)=>{\n expect(res).to.be.a('object');\n done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "6467344d-30ff-49f1-9e2a-2c49821c9849",
                  "parentUUID": "ad80f9d1-1a58-4b6a-8993-7bcb3f0417df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes Testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteBlog(email, blogId)\n    .then((res)=>{\n      expect(res).to.be.eq(null);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "c78324af-8903-4bac-953a-90b1255a1cfb",
                  "parentUUID": "ad80f9d1-1a58-4b6a-8993-7bcb3f0417df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6467344d-30ff-49f1-9e2a-2c49821c9849",
                "c78324af-8903-4bac-953a-90b1255a1cfb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1234,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "04471246-dc5e-4f16-b4e4-ce8666df0db9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "5bd51bfe-1011-46c3-bd89-7ecb6fcbce9f",
          "title": "User Functions",
          "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1196d946-92b8-4662-8f71-7ae537907833",
              "title": "Retrieve User Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the user with the given id",
                  "fullTitle": "User Functions Retrieve User Testing should return the user with the given id",
                  "timedOut": false,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId='61c9e0215954b6332bc203f0';\n userFunctions.retrieveUser(userId).then((res) => {\n   expect(res).to.be.a('object');\n   done();\n }).catch(done);",
                  "err": {},
                  "uuid": "c6c5829b-1b72-449d-842b-d2040fdb3367",
                  "parentUUID": "1196d946-92b8-4662-8f71-7ae537907833",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as the user is not found",
                  "fullTitle": "User Functions Retrieve User Testing should return null as the user is not found",
                  "timedOut": false,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userId='61c9e0215994b6332bc203f0';\n userFunctions.retrieveUser(userId).then((res) => {\n   expect(res).to.be.a('null');\n   done();\n }).catch(done);",
                  "err": {},
                  "uuid": "d85a243c-8e88-44d8-aa0b-298f10624fd2",
                  "parentUUID": "1196d946-92b8-4662-8f71-7ae537907833",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6c5829b-1b72-449d-842b-d2040fdb3367",
                "d85a243c-8e88-44d8-aa0b-298f10624fd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 294,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3e26d3fb-204d-46a3-a611-a7d58dd0382b",
              "title": "Delete User Testing",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the user and return its primary Blog after deletion",
                  "fullTitle": "User Functions Delete User Testing should delete the user and return its primary Blog after deletion",
                  "timedOut": false,
                  "duration": 9510,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteUser(userEmail)\n .then((res)=>{\n expect(res).to.be.a('object');\n done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "1b752b24-c2aa-4694-85d9-09259f24d3ac",
                  "parentUUID": "3e26d3fb-204d-46a3-a611-a7d58dd0382b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no user with the requested email",
                  "fullTitle": "User Functions Delete User Testing should return false because there is no user with the requested email",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteUser(userEmail)\n    .then((res)=>{\n      expect(res).to.be.eq(null);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "70198442-19d8-48b2-b797-5c761e1bcadf",
                  "parentUUID": "3e26d3fb-204d-46a3-a611-a7d58dd0382b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b752b24-c2aa-4694-85d9-09259f24d3ac",
                "70198442-19d8-48b2-b797-5c761e1bcadf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9650,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6663256b-9232-4a63-9d54-14a13149bc6b",
              "title": "Update user",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It sets interests of the user",
                  "fullTitle": "User Functions Update user It sets interests of the user",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst interests=[\n  \"flowers\",\n  \"math\",\n  \"nasa\",\n  \"education\"\n]\nuserFunctions.getInterests(email, interests)\n.then((result) => {\n  expect(result.followedTags[0]).to.be.eq(interests[0]);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "97da3faa-c797-405c-be94-507e88b5912d",
                  "parentUUID": "6663256b-9232-4a63-9d54-14a13149bc6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It updates color theme of the user",
                  "fullTitle": "User Functions Update user It updates color theme of the user",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst colorNumb=3;\nuserFunctions.updateColor(email, colorNumb).then((result) => {\n  console.log('result: ', result);\n  expect(result.bodyColor).to.be.eq(colorNumb);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "88489ace-6ff0-43a1-b8be-16c58dc4ac4d",
                  "parentUUID": "6663256b-9232-4a63-9d54-14a13149bc6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97da3faa-c797-405c-be94-507e88b5912d",
                "88489ace-6ff0-43a1-b8be-16c58dc4ac4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 312,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "542de032-c976-4683-a3a8-dcbd129bed8c",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 144,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "bf7f22bd-a74f-4bd9-a564-5a12370e0e5b",
                  "parentUUID": "542de032-c976-4683-a3a8-dcbd129bed8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "55a2b458-ac91-46ff-a6e7-7e240da86054",
                  "parentUUID": "542de032-c976-4683-a3a8-dcbd129bed8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf7f22bd-a74f-4bd9-a564-5a12370e0e5b",
                "55a2b458-ac91-46ff-a6e7-7e240da86054"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 283,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "aa2a4b87-050b-4d89-8a7f-f6ae3c2fa1c2",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 567,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'CMP-2023';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1814a064-1224-44db-841e-5852ac3e6a13",
                  "parentUUID": "aa2a4b87-050b-4d89-8a7f-f6ae3c2fa1c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "80691640-cacc-4693-9ebf-8457fedf530a",
                  "parentUUID": "aa2a4b87-050b-4d89-8a7f-f6ae3c2fa1c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1814a064-1224-44db-841e-5852ac3e6a13",
                "80691640-cacc-4693-9ebf-8457fedf530a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 706,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1d2e8038-5e54-4426-97fa-30e05e83a0d0",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User Functions Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 395,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "49d1d644-74e4-41ea-97f2-a5d3e543dd54",
                  "parentUUID": "1d2e8038-5e54-4426-97fa-30e05e83a0d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49d1d644-74e4-41ea-97f2-a5d3e543dd54"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 395,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c72b1900-b625-441b-a847-18e32e828297",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User Functions Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1526,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "669353aa-c729-4728-b465-e9427cfa5cde",
                  "parentUUID": "c72b1900-b625-441b-a847-18e32e828297",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "669353aa-c729-4728-b465-e9427cfa5cde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1526,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "eeaa2a29-9018-4208-9764-f286126f1446",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ea8d7738-98d8-461a-86c4-7d37d52c6e8b",
                  "parentUUID": "eeaa2a29-9018-4208-9764-f286126f1446",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5cb44519-385a-415d-9480-4a31e973c418",
                  "parentUUID": "eeaa2a29-9018-4208-9764-f286126f1446",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea8d7738-98d8-461a-86c4-7d37d52c6e8b",
                "5cb44519-385a-415d-9480-4a31e973c418"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "39aaf293-d637-4e3a-b7f8-aef8f48285f2",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User Functions Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "46fdc3ab-e331-4f7d-94f1-7d11d85ce86c",
                  "parentUUID": "39aaf293-d637-4e3a-b7f8-aef8f48285f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46fdc3ab-e331-4f7d-94f1-7d11d85ce86c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 166,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "057777d7-c497-4069-ad6b-fe05de9733cc",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User Functions Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 766,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmedatcmp@gmail.com';\nconst name = 'Game-1';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0048d965-9f35-4755-9e0f-428d0becd087",
                  "parentUUID": "057777d7-c497-4069-ad6b-fe05de9733cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0048d965-9f35-4755-9e0f-428d0becd087"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 766,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0206b640-2529-4cba-a1f3-33b62d4100a0",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User Functions Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 1366,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ee3a437b-18fe-4d38-a27a-0b85824ef458",
                  "parentUUID": "0206b640-2529-4cba-a1f3-33b62d4100a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee3a437b-18fe-4d38-a27a-0b85824ef458"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1366,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "35bb9b4c-659b-44d8-84b7-9d9af1e9e936",
              "title": "Check Post Id",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f4';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4124775a-ec2a-4b8a-8db0-f3e216aea208",
                  "parentUUID": "35bb9b4c-659b-44d8-84b7-9d9af1e9e936",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 137,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f0';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "41aadbb6-50a4-4b92-b453-a0025ea7f442",
                  "parentUUID": "35bb9b4c-659b-44d8-84b7-9d9af1e9e936",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4124775a-ec2a-4b8a-8db0-f3e216aea208",
                "41aadbb6-50a4-4b92-b453-a0025ea7f442"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 276,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e8799bbd-1e07-4f86-9a3b-15403a001efc",
              "title": "get UserId From PostId ",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get UserId From PostId ",
                  "fullTitle": "User Functions get UserId From PostId  get UserId From PostId ",
                  "timedOut": false,
                  "duration": 521,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nuserServices.getUserIdFromPostId(postId).then((result) => {\n  expect(result).to.be.eq('61c9d749b33bf76a71baed86');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b9809a7d-c100-4361-a3b9-964841118dcd",
                  "parentUUID": "e8799bbd-1e07-4f86-9a3b-15403a001efc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9809a7d-c100-4361-a3b9-964841118dcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 521,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3370d958-88a5-44a4-8505-55c100e983a5",
              "title": "Create Notification",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Notification",
                  "fullTitle": "User Functions Create Notification It Should Create Notification",
                  "timedOut": false,
                  "duration": 1064,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nconst type = 'like';\nnotificationFunction.addNotification(postId, type).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "86681967-0b4f-4e85-ba19-e020bc69c727",
                  "parentUUID": "3370d958-88a5-44a4-8505-55c100e983a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86681967-0b4f-4e85-ba19-e020bc69c727"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1064,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "090b154e-b1ac-4639-87b3-8cc86e9755bd",
              "title": "Create New Chat",
              "fullFile": "C:\\Users\\EGY\\Desktop\\Backend_Tumblr-4u-main\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Chat Message",
                  "fullTitle": "User Functions Create New Chat It Should Create New Chat Message",
                  "timedOut": false,
                  "duration": 431,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "message = 'Test';\n      sendUserId = '61c9d749b33bf76a71baed86';\n      receiveUserId = '61c9e0215954b6332bc203f0';\n      sendBlogName = 'CMP-2023';\n      recieveBlogName = 'Engineer';\n      notificationFunction.addchat(message, sendUserId, receiveUserId, sendBlogName, recieveBlogName).then((result) => {\n        expect(result).to.be.eq('Created');\n        done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "b574516a-a989-457f-8796-bc6f6492b7fa",
                  "parentUUID": "090b154e-b1ac-4639-87b3-8cc86e9755bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b574516a-a989-457f-8796-bc6f6492b7fa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 431,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}