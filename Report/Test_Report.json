{
  "stats": {
    "suites": 20,
    "tests": 23,
    "passes": 20,
    "pending": 0,
    "failures": 3,
    "start": "2022-01-01T18:08:46.383Z",
    "end": "2022-01-01T18:09:43.767Z",
    "duration": 57384,
    "testsRegistered": 23,
    "passPercent": 86.95652173913044,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2ea18c78-3fff-4971-85d3-1dbde6a282a8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6fbb947-986f-4a55-aa1f-ebe13f9e5104",
          "title": "Post APIs",
          "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It tests uploading audio on server, gets url",
              "fullTitle": "Post APIs It tests uploading audio on server, gets url",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n  \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
              "err": {},
              "uuid": "296a0681-c9d2-473a-ac48-a72925cb52c5",
              "parentUUID": "b6fbb947-986f-4a55-aa1f-ebe13f9e5104",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "ba7d4a5e-cbf4-40ba-a2d5-04ce2fe75087",
              "title": "Function createPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 5150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "053fe23a-4d5e-4380-8a98-106e0c3b4535",
                  "parentUUID": "ba7d4a5e-cbf4-40ba-a2d5-04ce2fe75087",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "053fe23a-4d5e-4380-8a98-106e0c3b4535"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6bd79c58-a110-4f9f-b421-134eba1d44c1",
              "title": "Function showPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  url: '',\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.showPost(req.url,req.params.postId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "15d18a9e-87bb-4c2c-82be-70a34c4a4564",
                  "parentUUID": "6bd79c58-a110-4f9f-b421-134eba1d44c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15d18a9e-87bb-4c2c-82be-70a34c4a4564"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b84b9cdb-c6d9-472b-9827-f056396c285a",
              "title": "Function makeComment",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 493,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "18ff2fef-64fa-48f2-82ff-9299035207eb",
                  "parentUUID": "b84b9cdb-c6d9-472b-9827-f056396c285a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18ff2fef-64fa-48f2-82ff-9299035207eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 493,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9bbddd07-4037-402c-a692-2249afeb6340",
              "title": "Function removeComment",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 329,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    commentId: '61d09371d53d981f8a647ef6',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js:100:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                    "diff": "- Comment Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "f1875728-e67b-4b4b-9dd9-85f65103133f",
                  "parentUUID": "9bbddd07-4037-402c-a692-2249afeb6340",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "f1875728-e67b-4b4b-9dd9-85f65103133f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 329,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1eceaa9d-9dc7-4794-9440-544005cd29bb",
              "title": "Function reblogPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 484,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b870f4d3-a49d-44d6-b70e-024fb0bc2fe3",
                  "parentUUID": "1eceaa9d-9dc7-4794-9440-544005cd29bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b870f4d3-a49d-44d6-b70e-024fb0bc2fe3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 484,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "eb66e03b-853c-4eb8-b889-a3b1f3d08089",
              "title": "Function removeReblog",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 321,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    reblogId: '61d09372d53d981f8a647f43',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js:139:31\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                    "diff": "- Reblog Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "a9d216bc-12b5-468b-bc73-b1aa34f4f178",
                  "parentUUID": "eb66e03b-853c-4eb8-b889-a3b1f3d08089",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "a9d216bc-12b5-468b-bc73-b1aa34f4f178"
              ],
              "pending": [],
              "skipped": [],
              "duration": 321,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b48d1744-1d06-4d20-9882-668dad3319dd",
              "title": "Function loopLikeAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopLikeAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = '61af36a793d7c3194ff42269';\nconst b = '61ae881aab9ea73f2282b03e';\nconst c = '61ae887d2676ed5d9b5d532f';\nconst arr = [\n  {isDeleted: false, blogId: a},\n  {isDeleted: false, blogId: b},\n  {isDeleted: false, blogId: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopLikeAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopLikeAndCheck(arr, element)[1].should.be.eq(0);\npostFunctions.loopLikeAndCheck(arr, element)[2].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "20308927-e7bc-456d-8f52-356f99a19c52",
                  "parentUUID": "b48d1744-1d06-4d20-9882-668dad3319dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20308927-e7bc-456d-8f52-356f99a19c52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "97277550-7a67-4cf2-affd-a8018fb16f40",
              "title": "Function loopObjAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {isDeleted: false, _id: a},\n  {isDeleted: false, _id: b},\n  {isDeleted: false, _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "f71b6842-81cc-4e74-a9f3-7c4fb27ec159",
                  "parentUUID": "97277550-7a67-4cf2-affd-a8018fb16f40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f71b6842-81cc-4e74-a9f3-7c4fb27ec159"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "13a18222-f396-48c1-a7d0-eecd52c890f6",
              "title": "Function likePress",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 664,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6a2a275e-ecfe-4290-98fe-591a44262643",
                  "parentUUID": "13a18222-f396-48c1-a7d0-eecd52c890f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a2a275e-ecfe-4290-98fe-591a44262643"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 664,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9aa6ddd3-1811-472e-8dba-93012ace4479",
              "title": "Function getNotes",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    notesId: '61ca5d92a8a4556c5b24f1f9',\n  },\n};\npostFunctions.getNotes(req.params.notesId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "412a97b6-bf08-4938-a387-ac72c2966dc4",
                  "parentUUID": "9aa6ddd3-1811-472e-8dba-93012ace4479",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "412a97b6-bf08-4938-a387-ac72c2966dc4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4a76cc24-7ccc-4e12-bf3f-dc41e9041e15",
              "title": "Function getDashboard",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 15098,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  decoded: {\n    email: 'ahmed.ayman.1420@gmail.com'\n  },\n};\npostFunctions.getDashboard(req.decoded.email).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1b1562c4-1a4b-4b1c-ade5-5382c842a047",
                  "parentUUID": "4a76cc24-7ccc-4e12-bf3f-dc41e9041e15",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b1562c4-1a4b-4b1c-ade5-5382c842a047"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15098,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1a65ed76-4545-4310-ae68-7474a071af0a",
              "title": "Function editPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Edit a Post Post",
                  "fullTitle": "Post APIs Function editPost It Should Edit a Post Post",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n  body: {\n    postHtml: '</>',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.editPost(req.params.postId, req.body.postHtml, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Edited Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2b971dc8-c769-4098-b371-dcb4d0f6bd96",
                  "parentUUID": "1a65ed76-4545-4310-ae68-7474a071af0a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b971dc8-c769-4098-b371-dcb4d0f6bd96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "705f96b1-913d-4235-8d0f-97c78b9255d9",
              "title": "Function reportPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Report a Post",
                  "fullTitle": "Post APIs Function reportPost It Should Report a Post",
                  "timedOut": false,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n};\npostFunctions.reportPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Reported Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d7ebb80b-6af8-4267-ab50-2b3dbe293d75",
                  "parentUUID": "705f96b1-913d-4235-8d0f-97c78b9255d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7ebb80b-6af8-4267-ab50-2b3dbe293d75"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2b151b8c-b077-4c66-8b29-ff0d9a9dfa45",
              "title": "Function deletePost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Delete a Post",
                  "fullTitle": "Post APIs Function deletePost It Should Delete a Post",
                  "timedOut": false,
                  "duration": 157,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61d09370d53d981f8a647ecc',\n  },\n};\npostFunctions.deletePost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Deleted Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Post Deleted Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Post Deleted Successfully'\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js:275:27\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                    "diff": "- Post Not Found\n+ Post Deleted Successfully\n"
                  },
                  "uuid": "e2e8649a-db0d-4a13-ba6e-18aae9505805",
                  "parentUUID": "2b151b8c-b077-4c66-8b29-ff0d9a9dfa45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "e2e8649a-db0d-4a13-ba6e-18aae9505805"
              ],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "92e9f647-84b5-41df-a205-a84e86d57603",
              "title": "Function getBlogPosts",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Blog Posts",
                  "fullTitle": "Post APIs Function getBlogPosts It Should Blog Posts",
                  "timedOut": false,
                  "duration": 7626,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getBlogPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Blog Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b58b0b1c-c629-4a1f-b8dd-2a2021de0069",
                  "parentUUID": "92e9f647-84b5-41df-a205-a84e86d57603",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b58b0b1c-c629-4a1f-b8dd-2a2021de0069"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7626,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1754b39d-f83e-4d9b-8483-4f5cb9150513",
              "title": "Function getLikedPosts",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Liked Posts",
                  "fullTitle": "Post APIs Function getLikedPosts It Should Get Liked Posts",
                  "timedOut": false,
                  "duration": 1917,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getLikedPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Liked Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "44e43529-098a-42f9-aca6-1bbdc0e01397",
                  "parentUUID": "1754b39d-f83e-4d9b-8483-4f5cb9150513",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44e43529-098a-42f9-aca6-1bbdc0e01397"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1917,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "26e1d31c-7990-475c-a685-a34ad1f2fa27",
              "title": "Function activityFeed",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Activity Feed",
                  "fullTitle": "Post APIs Function activityFeed It Should Get Activity Feed",
                  "timedOut": false,
                  "duration": 22618,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.activityFeed(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Activity Feed Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "93b8e2ab-766c-449b-bfff-7bf74fc957be",
                  "parentUUID": "26e1d31c-7990-475c-a685-a34ad1f2fa27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93b8e2ab-766c-449b-bfff-7bf74fc957be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22618,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "15b12ee3-9000-45e2-af0f-1b85690e3857",
              "title": "Upload media APIs",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests uploading image on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading image on server, gets url",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'image2022-1-1T03-59-05.770Z.jpg';\n    \npostFunctions.uploadAny(blobName, 'image/jpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b2e97e50-7ded-44a3-a593-30916c434b1b",
                  "parentUUID": "15b12ee3-9000-45e2-af0f-1b85690e3857",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading video on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading video on server, gets url",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'video2022-01-01T15-23-27.384Z.mp4';\n    \npostFunctions.uploadAny(blobName, 'video/mp4')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "7a4e00b2-8e97-4e3f-9b39-aecb65c42eaa",
                  "parentUUID": "15b12ee3-9000-45e2-af0f-1b85690e3857",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading audio on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading audio on server, gets url",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n    \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "41810368-be83-4edf-b49a-e2d9f27f4bf4",
                  "parentUUID": "15b12ee3-9000-45e2-af0f-1b85690e3857",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2e97e50-7ded-44a3-a593-30916c434b1b",
                "7a4e00b2-8e97-4e3f-9b39-aecb65c42eaa",
                "41810368-be83-4edf-b49a-e2d9f27f4bf4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ed26d9a3-e1c4-42b9-bf86-219a66885a06",
              "title": "Random posts APIs",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\rawaa\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests radar posts",
                  "fullTitle": "Post APIs Random posts APIs It tests radar posts",
                  "timedOut": false,
                  "duration": 627,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "postFunctions.retrieveRandomPosts()\n        .then((res)=>{\n          expect(res.length).to.be.equal(10);\n          done();\n        }).catch(done);",
                  "err": {},
                  "uuid": "0695ff76-866c-4464-af0f-8bf29147a793",
                  "parentUUID": "ed26d9a3-e1c4-42b9-bf86-219a66885a06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests trending posts",
                  "fullTitle": "Post APIs Random posts APIs It tests trending posts",
                  "timedOut": false,
                  "duration": 1143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "post=[\n  {\n    \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n    \"blogId\": '61c9d6b82569f9abb33ebe04',\n    \"postHtml\": '<img width=\"100%\" src=\"https://tumblrstorage.blob.core.windows.net/imagess/image2022-1-1T03-59-05.770Z.jpg]\" alt=\"\">',\n    \"type\": 'text',\n    \"state\": 'published',\n    \"tags\": [ 'edit', 'cmp', 'Trending' ],\n    \"notesId\": '61ca5d91a8a4556c5b24f1f3',\n    \"isDeleted\": false,\n    \"isReported\": false,\n    \"postUrl\": '/61ca5d91a8a4556c5b24f1f4/show_post',\n    \"__v\": 1\n  }\n]\npostFunctions.retrieveTrendingPosts()\n    .then((res)=>{\n      expect(res.trendingPostsLim[0].notesId).to.be.equal(post[0].notesId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "c1555c6b-6d2f-4606-a910-55947594bd04",
                  "parentUUID": "ed26d9a3-e1c4-42b9-bf86-219a66885a06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0695ff76-866c-4464-af0f-8bf29147a793",
                "c1555c6b-6d2f-4606-a910-55947594bd04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1770,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "296a0681-c9d2-473a-ac48-a72925cb52c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}