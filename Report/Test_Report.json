{
  "stats": {
    "suites": 12,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-11T19:46:51.193Z",
    "end": "2021-12-11T19:46:59.281Z",
    "duration": 8088,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "62bb0307-d2d9-4fbe-a7fc-3bc965397d6c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d14a745a-2d6d-4259-b4a6-a2eae6c10aa5",
          "title": "Post APIs",
          "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8e628162-6093-4479-8bcc-3f54364fb480",
              "title": "Function createPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 3421,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06'\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  }\n};\n\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d5bc0086-0552-4d00-8852-7e853f590125",
                  "parentUUID": "8e628162-6093-4479-8bcc-3f54364fb480",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5bc0086-0552-4d00-8852-7e853f590125"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3421,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d686dda3-2873-4df0-804d-7fdc4cea9311",
              "title": "Function showPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  }, \n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "48b5f955-f321-4a90-a7b4-e31479eb97cf",
                  "parentUUID": "d686dda3-2873-4df0-804d-7fdc4cea9311",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48b5f955-f321-4a90-a7b4-e31479eb97cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 154,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "bf853282-c571-4565-9fcc-ea37610823f6",
              "title": "Function makeComment",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 483,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  }, \n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4c55bb47-14d1-49ce-aab4-2ccdd26a0ccc",
                  "parentUUID": "bf853282-c571-4565-9fcc-ea37610823f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c55bb47-14d1-49ce-aab4-2ccdd26a0ccc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "7831c605-77c2-4fcb-9750-ae0b9cea30c6",
              "title": "Function removeComment",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b3afacf45da667eb828620',\n  }, \n}\n    \npostFunctions.removeComment(req.params.postId, req.params.commentId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Comment Removed Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f92e2bd1-575a-46cc-a5cd-c0aaa028fc5b",
                  "parentUUID": "7831c605-77c2-4fcb-9750-ae0b9cea30c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f92e2bd1-575a-46cc-a5cd-c0aaa028fc5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 318,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "388d7b9e-da98-446e-8d85-d617ecee6b05",
              "title": "Function reblogPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 490,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  }, \n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7c430745-c90b-4428-99a4-a89c4c246758",
                  "parentUUID": "388d7b9e-da98-446e-8d85-d617ecee6b05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c430745-c90b-4428-99a4-a89c4c246758"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 490,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "52962199-abf2-413c-9975-64850068efff",
              "title": "Function removeReblog",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 319,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b4f6002b2f15fd81c25529' ,\n  }, \n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Reblog Removed Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ddee52c9-cfb0-4ac0-827d-1fe2914bd678",
                  "parentUUID": "52962199-abf2-413c-9975-64850068efff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ddee52c9-cfb0-4ac0-827d-1fe2914bd678"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 319,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f0229392-e95e-45b3-b8a7-af0d79aeb978",
              "title": "Function loopAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let arr = [0,1,2];\nlet element = 1;\n//expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\n    done();",
                  "err": {},
                  "uuid": "2f91b726-bcc8-4e6b-8c0e-d83068d8e921",
                  "parentUUID": "f0229392-e95e-45b3-b8a7-af0d79aeb978",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f91b726-bcc8-4e6b-8c0e-d83068d8e921"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3cd911b9-fce9-46c2-8387-229e129b9145",
              "title": "Function loopObjAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let a = mongoose.Types.ObjectId(\"61af36a793d7c3194ff42269\");\nlet b = mongoose.Types.ObjectId(\"61ae881aab9ea73f2282b03e\");\nlet c = mongoose.Types.ObjectId(\"61ae887d2676ed5d9b5d532f\");\nlet arr = [\n  {text: 'a',_id: a},\n  {text: 'shd',_id: b},\n  {text: 'akj',_id: c}\n];\nlet element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\n    done();",
                  "err": {},
                  "uuid": "611a6cc6-ff8a-417a-8a4c-79fea5aa2a59",
                  "parentUUID": "3cd911b9-fce9-46c2-8387-229e129b9145",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "611a6cc6-ff8a-417a-8a4c-79fea5aa2a59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "064e2cd4-15f6-4bad-91e3-d25322a47071",
              "title": "Function likePress",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 479,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  }, \n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  //expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6e86597a-b8fb-46b1-8857-abc387757e30",
                  "parentUUID": "064e2cd4-15f6-4bad-91e3-d25322a47071",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e86597a-b8fb-46b1-8857-abc387757e30"
              ],
              "pending": [],
              "skipped": [],
              "duration": 479,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "95f0fe90-d376-4964-9430-fb8d7d2471ac",
              "title": "Function getNotes",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  }, \n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "41b0bb49-8692-4069-9b8e-69a6cffd7db6",
                  "parentUUID": "95f0fe90-d376-4964-9430-fb8d7d2471ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41b0bb49-8692-4069-9b8e-69a6cffd7db6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3cf5b5bf-2cdf-41c5-89fe-b02bdaef6ab4",
              "title": "Function getDashboard",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Phase2_Integrated\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 2033,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  }, \n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2b6422a7-4acf-4189-832d-3e2afc686f68",
                  "parentUUID": "3cf5b5bf-2cdf-41c5-89fe-b02bdaef6ab4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b6422a7-4acf-4189-832d-3e2afc686f68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2033,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}