{
  "stats": {
    "suites": 20,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-20T21:27:55.110Z",
    "end": "2021-11-20T21:28:13.950Z",
    "duration": 18840,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8565df4d-b620-4ae5-80f0-baaff24f16fa",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2bc4c57-1f49-48b3-bf34-926ba365520d",
          "title": "Post APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "86f1ffe3-44c8-475e-bc6c-280c821007b8",
              "title": "Post Blog Post",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Post Blog Post It Should Create New Post",
                  "timedOut": false,
                  "duration": 5698,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogPost = {\n  postHtml: '</>',\n  type: 'link',\n  state: 'published',\n  tags: 'tumblr',\n};\n//   console.log(blogPost);\nchai\n    .request(server)\n    .post('/61968c974f161173940ea9cb/posts/create_post')\n    .send(blogPost)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.eq('Post Created Successfully (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "3ac05e4d-15d7-410f-aa82-d141224fbc20",
                  "parentUUID": "86f1ffe3-44c8-475e-bc6c-280c821007b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ac05e4d-15d7-410f-aa82-d141224fbc20"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5698,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3ec02f03-7ba6-41d5-bcb0-d2cbd814c092",
              "title": "Don't Post Blog Post",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Not Create New Post Because Blog Doesn't Exist",
                  "fullTitle": "Post APIs Don't Post Blog Post It Should Not Create New Post Because Blog Doesn't Exist",
                  "timedOut": false,
                  "duration": 273,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogPost = {\n  postHtml: '</>',\n  type: 'video',\n  state: 'published',\n  tags: 'engineering',\n};\nchai\n    .request(server)\n    .post('/61968c974f161173940ea9ca/posts/create_post')\n// no blog with this id\n    .send(blogPost)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.eq('Blog Not Found (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "3ac77c15-4a05-4724-8374-ae9fdb4006fe",
                  "parentUUID": "3ec02f03-7ba6-41d5-bcb0-d2cbd814c092",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ac77c15-4a05-4724-8374-ae9fdb4006fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 273,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ac59a447-0338-4453-bd75-abae6d13532c",
              "title": "Create Post Internal Server Error",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Not Create New Post Due To Server Error",
                  "fullTitle": "Post APIs Create Post Internal Server Error It Should Not Create New Post Due To Server Error",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogPost = {\n  postHtml: '</>',\n  type: 'video',\n  state: 'published',\n  tags: 'engineering',\n};\nchai\n    .request(server)\n    .post('/1/posts/create_post') // no blog with this id\n    .send(blogPost)\n    .end((err, res) => {\n      res.should.have.status(500);\n      res.body.should.be.eq('Error In Create Post Function (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "d28388ec-8ac9-4804-8782-f93076a9c44d",
                  "parentUUID": "ac59a447-0338-4453-bd75-abae6d13532c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d28388ec-8ac9-4804-8782-f93076a9c44d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "dd095dd7-0a2a-45f6-907d-39ac5e1453fa",
              "title": "Get Post and Show it",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Get Post and Show it It Should Show Post",
                  "timedOut": false,
                  "duration": 1069,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(server)\n    .get('/posts/6196e0ed3392462ec0ae903f/show_post')\n    .end((err, res) => {\n      console.log(res);\n      res.should.have.status(200);\n      res.body.should.be.eq('</>');\n      done();\n    });",
                  "err": {},
                  "uuid": "dbd3d6d1-34c7-49b9-87ef-f7b1d141bb78",
                  "parentUUID": "dd095dd7-0a2a-45f6-907d-39ac5e1453fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbd3d6d1-34c7-49b9-87ef-f7b1d141bb78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1069,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "b9b69195-a3af-468b-abfe-f872d287046c",
          "title": "Search APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e202b5f7-a60f-4284-b97c-42319ce7296f",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 632,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'dep'};\nchai\n    .request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      console.log(res.body);\n      res.body[0][0].should.be.eq('deposit');\n      done();\n    });",
                  "err": {},
                  "uuid": "6130ccca-918b-4727-a35d-b2c1702e4c34",
                  "parentUUID": "e202b5f7-a60f-4284-b97c-42319ce7296f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6130ccca-918b-4727-a35d-b2c1702e4c34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 632,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8db633c8-44c2-4089-b5e8-b4d087164434",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Search It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 645,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'DEP'};\nchai\n    .request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      console.log(res.body);\n      res.body[0][0].should.be.eq('deposit');\n      done();\n    });",
                  "err": {},
                  "uuid": "3813cc29-98a0-4c93-b6fe-7f86e7269d4d",
                  "parentUUID": "8db633c8-44c2-4089-b5e8-b4d087164434",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3813cc29-98a0-4c93-b6fe-7f86e7269d4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 645,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8772ed12-adb9-4625-a607-c7e6fc12d1f2",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 707,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'hazel'};\nchai\n    .request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      console.log(res.body);\n      res.body[1][0].name.should.be.eq('Mr. Hazel Schamberger');\n      done();\n    });",
                  "err": {},
                  "uuid": "86a261a4-b737-42fd-b527-cb19ead6a22c",
                  "parentUUID": "8772ed12-adb9-4625-a607-c7e6fc12d1f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86a261a4-b737-42fd-b527-cb19ead6a22c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 707,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e2dadff5-d936-40f3-af30-69d402330369",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 595,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'mat'};\nchai\n    .request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      console.log(res.body);\n      res.body[2][0].followedTags[0].should.be.eq('matrix');\n      done();\n    });",
                  "err": {},
                  "uuid": "fc489fcc-fcd5-4bc9-bd42-16c87bfd9b6b",
                  "parentUUID": "e2dadff5-d936-40f3-af30-69d402330369",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc489fcc-fcd5-4bc9-bd42-16c87bfd9b6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 595,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3b3fbfba-ee9a-4514-b9c5-0811532caf42",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get nothing when nothing is entered",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get nothing when nothing is entered",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: ''};\nchai\n    .request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      console.log(res.body);\n      res.body.should.be.eq(',wordName, is not allowed to be empty');\n      done();\n    });",
                  "err": {},
                  "uuid": "bed8ddd9-94b3-4d69-aa8c-48f6424fa621",
                  "parentUUID": "3b3fbfba-ee9a-4514-b9c5-0811532caf42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bed8ddd9-94b3-4d69-aa8c-48f6424fa621"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "e316ca50-3605-48be-bb96-b116e9990f17",
          "title": "User Methods",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "51732e80-f37d-4584-8b6d-86fbbc9c4dfb",
              "title": "User follows a blog",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should put the userId in followers array of blog andput blogId in the following_blogs array of the user",
                  "fullTitle": "User Methods User follows a blog It should put the userId in followers array of blog andput blogId in the following_blogs array of the user",
                  "timedOut": false,
                  "duration": 591,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = {blogId: '619957113df6b45019c42d07'};\nchai\n    .request(server)\n    .post('/user/follow/619695c9bf5e722b10e141c2')\n    .send(blogId)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('message')\n          .eq('Blog Followed Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "b828e71f-491a-4cdd-93c1-b0c192d4ab42",
                  "parentUUID": "51732e80-f37d-4584-8b6d-86fbbc9c4dfb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It doesn't  find the blog in the database and returns blog not found",
                  "fullTitle": "User Methods User follows a blog It doesn't  find the blog in the database and returns blog not found",
                  "timedOut": false,
                  "duration": 539,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// wrong blogId\nconst blogId = {blogId: '619957113df6b45019c42d00'};\nchai\n    .request(server)\n    .post('/user/follow/619695c9bf5e722b10e141c2')\n    .send(blogId)\n    .end((err, res) => {\n      res.should.have.status(404);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('error')\n          .eq('Blog not found');\n      done();\n    });",
                  "err": {},
                  "uuid": "43483d70-436c-41b5-bca5-e4236a13cec0",
                  "parentUUID": "51732e80-f37d-4584-8b6d-86fbbc9c4dfb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b828e71f-491a-4cdd-93c1-b0c192d4ab42",
                "43483d70-436c-41b5-bca5-e4236a13cec0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "48db8a07-7cf3-4757-bcd7-2da29837dfe8",
              "title": "User unfollows a blog",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should remove the userId from followers array of blog and remove blogId from following_blogs of the user",
                  "fullTitle": "User Methods User unfollows a blog It should remove the userId from followers array of blog and remove blogId from following_blogs of the user",
                  "timedOut": false,
                  "duration": 439,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = {blogId: '619957113df6b45019c42d07'};\nchai\n    .request(server)\n    .post('/user/unfollow/619695c9bf5e722b10e141c2')\n    .send(blogId)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('message')\n          .eq('Blog Unfollowed Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "980c3730-f91c-4863-9363-3cb32db08a30",
                  "parentUUID": "48db8a07-7cf3-4757-bcd7-2da29837dfe8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It doesn't find the blog in the database and returns blog not found",
                  "fullTitle": "User Methods User unfollows a blog It doesn't find the blog in the database and returns blog not found",
                  "timedOut": false,
                  "duration": 483,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = {blogId: '619957113df6b45019c42d00'};\nchai\n    .request(server)\n    .post('/user/unfollow/619695c9bf5e722b10e141c2')\n    .send(blogId)\n    .end((err, res) => {\n      res.should.have.status(404);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('error')\n          .eq('Blog not found');\n      done();\n    });",
                  "err": {},
                  "uuid": "1f5d89a2-b9ad-4fc6-8fcd-3be4527ed8c7",
                  "parentUUID": "48db8a07-7cf3-4757-bcd7-2da29837dfe8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "980c3730-f91c-4863-9363-3cb32db08a30",
                "1f5d89a2-b9ad-4fc6-8fcd-3be4527ed8c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "843d78c6-9363-4e04-b205-bb195c38f626",
          "title": "Blog Methods",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "378eaa3a-9338-4619-958e-83e6b4525ae2",
              "title": "Blog blocks a blog",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should put the blockedBlogId in blockedBlogsarray of the blog",
                  "fullTitle": "Blog Methods Blog blocks a blog It should put the blockedBlogId in blockedBlogsarray of the blog",
                  "timedOut": false,
                  "duration": 591,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blockedBlogId = {blockedBlogId: '619957113df6b45019c42d05'};\nchai\n    .request(server)\n    .post('/blog/block/619957113df6b45019c42d07')\n    .send(blockedBlogId)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('message')\n          .eq('Blog blocked Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "c4332475-d6fd-41bc-a2d5-101298d3d26f",
                  "parentUUID": "378eaa3a-9338-4619-958e-83e6b4525ae2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It doesn't  find the blog in the database and returns blog not found",
                  "fullTitle": "Blog Methods Blog blocks a blog It doesn't  find the blog in the database and returns blog not found",
                  "timedOut": false,
                  "duration": 426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blockedBlogId = {blockedBlogId: '619957113dfyb45019c42d09'};\nchai\n    .request(server)\n    .post('/blog/block/619957113df6b45019c42d07')\n    .send(blockedBlogId)\n    .end((err, res) => {\n      res.should.have.status(404);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('error')\n          .eq('Blog NOT FOUND');\n      done();\n    });",
                  "err": {},
                  "uuid": "bd49f1a2-df76-4fe5-8395-c37e0f64557f",
                  "parentUUID": "378eaa3a-9338-4619-958e-83e6b4525ae2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4332475-d6fd-41bc-a2d5-101298d3d26f",
                "bd49f1a2-df76-4fe5-8395-c37e0f64557f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1017,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6d6ce4e8-d492-42d5-b046-e95e80a3f0e4",
              "title": "Blog unblocks a blog",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should remove the blockedBlogId from blockedBlogsarray of the blog",
                  "fullTitle": "Blog Methods Blog unblocks a blog It should remove the blockedBlogId from blockedBlogsarray of the blog",
                  "timedOut": false,
                  "duration": 472,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const unblockedBlogId = {unblockedBlogId: '619957113df6b45019c42d05'};\nchai\n    .request(server)\n    .post('/blog/unblock/619957113df6b45019c42d07')\n    .send(unblockedBlogId)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('message')\n          .eq('Blog unblocked Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "72987429-f88b-47f7-a3d8-223591bf0632",
                  "parentUUID": "6d6ce4e8-d492-42d5-b046-e95e80a3f0e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It doesn't find the blog in the database and returns blog not found",
                  "fullTitle": "Blog Methods Blog unblocks a blog It doesn't find the blog in the database and returns blog not found",
                  "timedOut": false,
                  "duration": 244,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const unblockedBlogId = {unblockedBlogId: '619957113dfyb45019c42d09'};\nchai\n    .request(server)\n    .post('/blog/unblock/619957113df6b45019c42d07')\n    .send(unblockedBlogId)\n    .end((err, res) => {\n      res.should.have.status(404);\n      res.body.should.be.a('object');\n      res.body.should.have.property('res')\n          .have.property('error')\n          .eq('Blog NOT FOUND');\n      done();\n    });",
                  "err": {},
                  "uuid": "2503aa1c-bbb1-42b3-8fe9-50a5712a7f76",
                  "parentUUID": "6d6ce4e8-d492-42d5-b046-e95e80a3f0e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72987429-f88b-47f7-a3d8-223591bf0632",
                "2503aa1c-bbb1-42b3-8fe9-50a5712a7f76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 716,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "f273c420-34d4-4ecf-ae7e-74def8748877",
          "title": "User APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "20b6e0e9-32e9-4916-abf0-75f03c2f3493",
              "title": "User /signup",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs User /signup It Should Create New User",
                  "timedOut": false,
                  "duration": 936,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'Ayman023@gmail.com',\n  password: '123',\n  blogName: 'CMP-023',\n  age: '21',\n  city: 'Giza',\n  country: 'Egypt',\n};\nchai\n    .request(server)\n    .post('/signup')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(201);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('message')\n          .eq('Sign Up Successfully (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "c3462b9a-89d8-4c6c-bf98-18754af33aaf",
                  "parentUUID": "20b6e0e9-32e9-4916-abf0-75f03c2f3493",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return Email is Already Exists",
                  "fullTitle": "User APIs User /signup It Should Return Email is Already Exists",
                  "timedOut": false,
                  "duration": 405,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'ahmed@gmail.com',\n  password: '123',\n  blogName: 'CMP-100',\n  age: '21',\n  city: 'Giza',\n  country: 'Egypt',\n};\nchai\n    .request(server)\n    .post('/SignUp')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('error')\n          .eq('Email is Already Exists (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "d0134c44-d0ef-4274-bcf5-55e716fcd91a",
                  "parentUUID": "20b6e0e9-32e9-4916-abf0-75f03c2f3493",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return Blog Name is Already Exists (<:>)",
                  "fullTitle": "User APIs User /signup It Should Return Blog Name is Already Exists (<:>)",
                  "timedOut": false,
                  "duration": 382,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'Omr@gmail.com',\n  password: '123',\n  blogName: 'CMP-013',\n  age: '21',\n  city: 'Giza',\n  country: 'Egypt',\n};\nchai\n    .request(server)\n    .post('/SignUp')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('error')\n          .eq('Blog Name is Already Exists (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "9df8ebac-f1f9-4460-a136-21d5c240cbd0",
                  "parentUUID": "20b6e0e9-32e9-4916-abf0-75f03c2f3493",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3462b9a-89d8-4c6c-bf98-18754af33aaf",
                "d0134c44-d0ef-4274-bcf5-55e716fcd91a",
                "9df8ebac-f1f9-4460-a136-21d5c240cbd0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1723,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "06b86ef3-f8a3-4923-9c0e-b13c026cded6",
              "title": "User /login",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\merge\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Login User",
                  "fullTitle": "User APIs User /login It Should Login User",
                  "timedOut": false,
                  "duration": 835,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'ahmed@gmail.com',\n  password: '123',\n};\nchai\n    .request(server)\n    .post('/login')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('message')\n          .eq('LogIn Successfully (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "e6eac42c-8d57-4eb5-8d22-73178a3b48a6",
                  "parentUUID": "06b86ef3-f8a3-4923-9c0e-b13c026cded6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Incorrect Password",
                  "fullTitle": "User APIs User /login It Should Incorrect Password",
                  "timedOut": false,
                  "duration": 546,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'ahmed@gmail.com',\n  password: '1234',\n};\nchai\n    .request(server)\n    .post('/login')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('error')\n          .eq('InCorrect Password (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "6a1c30ee-ae49-4b4d-a5b1-299bc0bf0067",
                  "parentUUID": "06b86ef3-f8a3-4923-9c0e-b13c026cded6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get Email Is Not Found",
                  "fullTitle": "User APIs User /login It Should get Email Is Not Found",
                  "timedOut": false,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: 'Omr@gmail.com',\n  password: '123',\n};\nchai\n    .request(server)\n    .post('/login')\n    .send(user)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.a('object');\n      res.body.should.have\n          .property('res')\n          .have.property('error')\n          .eq('Email Is Not Found (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "c03996b2-cfda-49c9-a9c8-f23b7d6947ae",
                  "parentUUID": "06b86ef3-f8a3-4923-9c0e-b13c026cded6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6eac42c-8d57-4eb5-8d22-73178a3b48a6",
                "6a1c30ee-ae49-4b4d-a5b1-299bc0bf0067",
                "c03996b2-cfda-49c9-a9c8-f23b7d6947ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1583,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}