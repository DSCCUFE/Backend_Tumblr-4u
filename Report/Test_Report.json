{
  "stats": {
    "suites": 36,
    "tests": 50,
    "passes": 18,
    "pending": 0,
    "failures": 32,
    "start": "2021-12-30T12:32:14.922Z",
    "end": "2021-12-30T12:32:28.471Z",
    "duration": 13549,
    "testsRegistered": 50,
    "passPercent": 36,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c066fba3-944c-4088-84a8-57b78c191a4e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29d1e9af-50e2-47d6-853b-7452e9c631ac",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ea684319-e16b-47b3-babf-b8368898c0c3",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 3207,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:43:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "3470469f-15f0-44e6-bf5b-dd8fce5a5754",
                  "parentUUID": "ea684319-e16b-47b3-babf-b8368898c0c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "3470469f-15f0-44e6-bf5b-dd8fce5a5754"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f5d2794d-9c8d-4ad0-915e-74b7618d4a96",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 144,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { msg: 'Post Not Found', post: {} } to be an array",
                    "estack": "AssertionError: expected { msg: 'Post Not Found', post: {} } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:59:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "510cde0a-0053-4177-9338-9aa16464cf87",
                  "parentUUID": "f5d2794d-9c8d-4ad0-915e-74b7618d4a96",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "510cde0a-0053-4177-9338-9aa16464cf87"
              ],
              "pending": [],
              "skipped": [],
              "duration": 144,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "30ed7152-ded0-49d4-89f7-453cfe87a771",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 292,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:79:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "39ee311a-b634-4de7-aeec-04fa165e2142",
                  "parentUUID": "30ed7152-ded0-49d4-89f7-453cfe87a771",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "39ee311a-b634-4de7-aeec-04fa165e2142"
              ],
              "pending": [],
              "skipped": [],
              "duration": 292,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "360ae74a-f152-4f71-a273-be1435ebc748",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 142,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b50d9837c346ee39708965',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Comment Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:98:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Post Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "cccc6123-6794-4550-8fc2-0cac1c6bf7b5",
                  "parentUUID": "360ae74a-f152-4f71-a273-be1435ebc748",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "cccc6123-6794-4550-8fc2-0cac1c6bf7b5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "93033d4f-141e-491f-97c0-ce45bb652c46",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 285,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('array');\n      expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:118:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "86d311f2-4e1f-4e12-9616-770d4b8b5d68",
                  "parentUUID": "93033d4f-141e-491f-97c0-ce45bb652c46",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "86d311f2-4e1f-4e12-9616-770d4b8b5d68"
              ],
              "pending": [],
              "skipped": [],
              "duration": 285,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f6871920-8099-4575-8a9f-1e0ebb82ca18",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 142,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b51524807f8f7c61e5c14b',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Reblog Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:137:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Post Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "73dde327-b96f-4751-88f1-c7d741630dd2",
                  "parentUUID": "f6871920-8099-4575-8a9f-1e0ebb82ca18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "73dde327-b96f-4751-88f1-c7d741630dd2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "85a408c7-6081-4c97-9420-03e37e28e375",
              "title": "Function loopAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const arr = [0, 1, 2];\nconst element = 1;\n// expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\ndone();",
                  "err": {
                    "message": "TypeError: postFunctions.loopAndCheck is not a function",
                    "estack": "TypeError: postFunctions.loopAndCheck is not a function\n    at Context.<anonymous> (test\\postTest.js:148:21)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "dc5a36d5-6ff2-4d85-86dc-f5506f8077cf",
                  "parentUUID": "85a408c7-6081-4c97-9420-03e37e28e375",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "dc5a36d5-6ff2-4d85-86dc-f5506f8077cf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cc5708af-a1e1-4e91-aed8-9f0400b3be46",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {text: 'a', _id: a},\n  {text: 'shd', _id: b},\n  {text: 'akj', _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {
                    "message": "AssertionError: expected 0 to equal 1",
                    "estack": "AssertionError: expected 0 to equal 1\n    at Context.<anonymous> (test\\postTest.js:164:64)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": "- 0\n+ 1\n"
                  },
                  "uuid": "30b1beb8-8311-4f38-82f8-cd0bd576bc22",
                  "parentUUID": "cc5708af-a1e1-4e91-aed8-9f0400b3be46",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "30b1beb8-8311-4f38-82f8-cd0bd576bc22"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0e3d023d-ac67-4442-8218-6bf25cb311e2",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 427,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "74773451-de6e-4535-b631-fe58a7a9a503",
                  "parentUUID": "0e3d023d-ac67-4442-8218-6bf25cb311e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74773451-de6e-4535-b631-fe58a7a9a503"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 427,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cd955b1d-f2aa-4819-8d8a-bbfe057b7c84",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 144,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (msg, notes, ...) } to be an array",
                    "estack": "AssertionError: expected { Object (msg, notes, ...) } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:196:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "1a313997-2d3f-4d2c-998d-6f2cc84159e5",
                  "parentUUID": "cd955b1d-f2aa-4819-8d8a-bbfe057b7c84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "1a313997-2d3f-4d2c-998d-6f2cc84159e5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 144,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f16f7d1d-7089-484b-b639-f367b3284546",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 149,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  },\n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (msg, user, ...) } to be an array",
                    "estack": "AssertionError: expected { Object (msg, user, ...) } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:213:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "46b77b1b-b935-4cae-8921-8ac861538b77",
                  "parentUUID": "f16f7d1d-7089-484b-b639-f367b3284546",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "46b77b1b-b935-4cae-8921-8ac861538b77"
              ],
              "pending": [],
              "skipped": [],
              "duration": 149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "c083f184-d662-440b-abfb-eb8a76c471f0",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 142,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "899c7e54-a7e2-4fc2-a625-a8ea02e6e55f",
                  "parentUUID": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 140,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'DEP',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "db1b7963-d8d3-48bb-a51a-68cd8198463c",
                  "parentUUID": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 138,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          _id: '6199531b94c23324c69ea65d',\n          blogId: 'Metal',\n          postHtml: '</>',\n          type: 'text',\n          state: 'published',\n          tags: ['deposit', 'hacking', 'morph'],\n          __v: 0,\n        },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "92543269-c315-4cf9-be14-2238a0d641b0",
                  "parentUUID": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 141,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'hazel',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('Mr. Hazel Schamberger');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "1c74a7a3-a6a6-4227-9954-3bcfbaed8480",
                  "parentUUID": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 136,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '61b4df38206b4252a939a0bc',\n};\nsearch.autoCompleteSearchDash(wordName.userId)\n    .then((res)=>{\n      console.log(res);\n      expect(res.resultFollowedTag[0]).to.be.equal('matrix');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "cf06384a-4835-4e4b-95b0-bff80674f654",
                  "parentUUID": "6ceda9ca-20b8-443e-a7aa-93506932d78b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "899c7e54-a7e2-4fc2-a625-a8ea02e6e55f",
                "db1b7963-d8d3-48bb-a51a-68cd8198463c",
                "92543269-c315-4cf9-be14-2238a0d641b0",
                "1c74a7a3-a6a6-4227-9954-3bcfbaed8480",
                "cf06384a-4835-4e4b-95b0-bff80674f654"
              ],
              "pending": [],
              "skipped": [],
              "duration": 697,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "5abc7c25-116d-4abc-a279-1230b059ab0e",
          "title": "UserBlog Methodes testing",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4f0de5a9-84db-496c-825a-a30f2cc6201e",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'reema2',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title, req.body.name,\n    req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( req.body.name);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:32:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "170fe9b8-00d8-409e-a54f-038a74194753",
                  "parentUUID": "4f0de5a9-84db-496c-825a-a30f2cc6201e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'nour22',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title,\n    req.body.name, req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:52:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "87815438-c486-45db-8ebb-35a8e72e1e40",
                  "parentUUID": "4f0de5a9-84db-496c-825a-a30f2cc6201e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "170fe9b8-00d8-409e-a54f-038a74194753",
                "87815438-c486-45db-8ebb-35a8e72e1e40"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "68dbca2d-1c9e-4ec4-8550-cafe69fe8915",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 282,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n     {\n       blogId: '61b51633be867ae625b47fc1',\n     },\n};\nuserFunctions.deleteBlog(req.params.userId, req.body.blogId).then((res)=>{\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:69:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "d43be218-8a4a-4f85-a646-bd0f545186b0",
                  "parentUUID": "68dbca2d-1c9e-4ec4-8550-cafe69fe8915",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "describe('Delete Blog Testing', ()=>{\n  const req={\n    params: {\n      userId: '6196d197a31552477d437404',\n    },\n    body:\n     {\n       blogId: '61b3b9e9ae2911b440a03a35c',\n     },\n  };\n  userFunctions.deleteBlog(req.params.userId, req.body.blogId)\n      .then((res)=>{\n        expect(res).to.be.eq(null);\n        done();\n      }).catch(done);\n});",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:87:37\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "8e1f1fd0-2665-4a8b-9f6f-35f3ef95e557",
                  "parentUUID": "68dbca2d-1c9e-4ec4-8550-cafe69fe8915",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d43be218-8a4a-4f85-a646-bd0f545186b0",
                "8e1f1fd0-2665-4a8b-9f6f-35f3ef95e557"
              ],
              "pending": [],
              "skipped": [],
              "duration": 285,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "66586f60-137d-4f08-afa1-ffab3e9e5e02",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('nour');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:101:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "fedd4335-44f2-41fa-aa09-f7e909f2fb68",
                  "parentUUID": "66586f60-137d-4f08-afa1-ffab3e9e5e02",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour123',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:113:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "5f873b07-2a41-4247-ae87-0d0b92c8ec9b",
                  "parentUUID": "66586f60-137d-4f08-afa1-ffab3e9e5e02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "fedd4335-44f2-41fa-aa09-f7e909f2fb68",
                "5f873b07-2a41-4247-ae87-0d0b92c8ec9b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e278730a-f8fa-43f2-a138-cfd18b0a1e12",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 138,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:132:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "ddb7dd3e-03a3-41d0-9367-9e285b705d2c",
                  "parentUUID": "e278730a-f8fa-43f2-a138-cfd18b0a1e12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 149,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to equal 'URL is not available'",
                    "estack": "AssertionError: expected null to equal 'URL is not available'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:151:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "4eb8dbe7-96db-4dbf-a7c8-841ac0c7cee8",
                  "parentUUID": "e278730a-f8fa-43f2-a138-cfd18b0a1e12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 136,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9a63fe7b-dd44-49ef-8efa-16734723875a",
                  "parentUUID": "e278730a-f8fa-43f2-a138-cfd18b0a1e12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a63fe7b-dd44-49ef-8efa-16734723875a"
              ],
              "failures": [
                "ddb7dd3e-03a3-41d0-9367-9e285b705d2c",
                "4eb8dbe7-96db-4dbf-a7c8-841ac0c7cee8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 423,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f5a23398-837d-4c58-ba90-17a36fa41eaa",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:182:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "2a63360e-5baf-4355-8b7f-dfdbfe30c8b8",
                  "parentUUID": "f5a23398-837d-4c58-ba90-17a36fa41eaa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:197:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "79c5ccc7-47a8-4ca0-8d85-2181f6031110",
                  "parentUUID": "f5a23398-837d-4c58-ba90-17a36fa41eaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "2a63360e-5baf-4355-8b7f-dfdbfe30c8b8",
                "79c5ccc7-47a8-4ca0-8d85-2181f6031110"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "626b9d21-7931-4e53-b810-03b09cdcadf7",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:214:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "17ddb3c7-95ca-459e-a5c0-e81aca48a2d0",
                  "parentUUID": "626b9d21-7931-4e53-b810-03b09cdcadf7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:229:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "d50c7c22-a0fc-4c2e-8bf5-3c265537cb32",
                  "parentUUID": "626b9d21-7931-4e53-b810-03b09cdcadf7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "17ddb3c7-95ca-459e-a5c0-e81aca48a2d0",
                "d50c7c22-a0fc-4c2e-8bf5-3c265537cb32"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8c248f69-1d54-45a8-89b0-c3cdfe22fe3e",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:246:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "743779d6-5e0c-4000-b526-7cb3b84c4071",
                  "parentUUID": "8c248f69-1d54-45a8-89b0-c3cdfe22fe3e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:261:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "13e6d1a8-a182-493a-b536-53f2bb279c8c",
                  "parentUUID": "8c248f69-1d54-45a8-89b0-c3cdfe22fe3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "743779d6-5e0c-4000-b526-7cb3b84c4071",
                "13e6d1a8-a182-493a-b536-53f2bb279c8c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9fa764e8-4489-4173-a63e-30d2e592c43c",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 138,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:279:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "47f7a853-77bd-4389-ab67-7ce028e1b875",
                  "parentUUID": "9fa764e8-4489-4173-a63e-30d2e592c43c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "655115b9-0177-43a0-9eef-e44c0abaa4e4",
                  "parentUUID": "9fa764e8-4489-4173-a63e-30d2e592c43c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "655115b9-0177-43a0-9eef-e44c0abaa4e4"
              ],
              "failures": [
                "47f7a853-77bd-4389-ab67-7ce028e1b875"
              ],
              "pending": [],
              "skipped": [],
              "duration": 280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0edb5162-b156-4846-9a15-2dec6741eabe",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 141,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:313:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "8c44518d-da56-45d5-8736-f7d44920fa22",
                  "parentUUID": "0edb5162-b156-4846-9a15-2dec6741eabe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ed2c4b85-eee2-437f-8cff-fb333c54f5c8",
                  "parentUUID": "0edb5162-b156-4846-9a15-2dec6741eabe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed2c4b85-eee2-437f-8cff-fb333c54f5c8"
              ],
              "failures": [
                "8c44518d-da56-45d5-8736-f7d44920fa22"
              ],
              "pending": [],
              "skipped": [],
              "duration": 281,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "3ec212ec-6db4-4c6d-9fe6-3b90689a79ec",
          "title": "User APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3c906cff-d692-4729-899e-7360a5be19f2",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1d543347-b33a-4199-85b7-f9f7afee1da9",
                  "parentUUID": "3c906cff-d692-4729-899e-7360a5be19f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2b40513c-40af-43b5-8d2d-4d4bcef0707e",
                  "parentUUID": "3c906cff-d692-4729-899e-7360a5be19f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d543347-b33a-4199-85b7-f9f7afee1da9",
                "2b40513c-40af-43b5-8d2d-4d4bcef0707e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 299,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "bcc78cf2-bdb4-48d2-b723-db185b1c560b",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 139,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'Gail Marks';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected false to equal true",
                    "estack": "AssertionError: expected false to equal true\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js:80:30\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "d5439a8d-016d-4fbe-b2ac-5569be5c1a6f",
                  "parentUUID": "bcc78cf2-bdb4-48d2-b723-db185b1c560b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c55c4924-e474-47b0-88b7-356e874f500d",
                  "parentUUID": "bcc78cf2-bdb4-48d2-b723-db185b1c560b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c55c4924-e474-47b0-88b7-356e874f500d"
              ],
              "failures": [
                "d5439a8d-016d-4fbe-b2ac-5569be5c1a6f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "69a084cc-9498-443a-a97c-c029b432613d",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a39cb5aa-efd2-4acf-9b52-5f3c0721f48a",
                  "parentUUID": "69a084cc-9498-443a-a97c-c029b432613d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a39cb5aa-efd2-4acf-9b52-5f3c0721f48a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "aacc1f65-d834-4df6-b9fd-7aec8d29cada",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User APIs Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1609,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "59d14868-5bce-4923-803e-147f6db2baa1",
                  "parentUUID": "aacc1f65-d834-4df6-b9fd-7aec8d29cada",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59d14868-5bce-4923-803e-147f6db2baa1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1609,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f8684d6b-966c-4c13-bf97-634619ba9960",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7d2a9c69-f464-40b2-83ec-910c6203be83",
                  "parentUUID": "f8684d6b-966c-4c13-bf97-634619ba9960",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6a7951fe-68ca-4888-95d8-108c3c15925f",
                  "parentUUID": "f8684d6b-966c-4c13-bf97-634619ba9960",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d2a9c69-f464-40b2-83ec-910c6203be83",
                "6a7951fe-68ca-4888-95d8-108c3c15925f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4f591edd-0e29-4067-b147-9162b36d1914",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User APIs Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "dc99a533-a895-4c63-b11a-344ec8b15d9e",
                  "parentUUID": "4f591edd-0e29-4067-b147-9162b36d1914",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc99a533-a895-4c63-b11a-344ec8b15d9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 180,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5417465d-81a8-49a5-8cb6-6b0f8361213d",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User APIs Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 687,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst name = 'Game-2023';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "fdbcc290-ba2f-41cc-a6b9-33500620e741",
                  "parentUUID": "5417465d-81a8-49a5-8cb6-6b0f8361213d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdbcc290-ba2f-41cc-a6b9-33500620e741"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 687,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "39962284-8f4e-48b7-b3df-a0fe55f7d315",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User APIs Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 1284,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3904eec4-906e-463b-b9a2-8eda96cdc6a6",
                  "parentUUID": "39962284-8f4e-48b7-b3df-a0fe55f7d315",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3904eec4-906e-463b-b9a2-8eda96cdc6a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1284,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "21da98fe-edca-4609-9bc2-d6199007f6bb",
              "title": "Check Post Id",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User APIs Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 144,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f4';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "33766d74-e6d6-4269-a3b2-6bbe8d0bd717",
                  "parentUUID": "21da98fe-edca-4609-9bc2-d6199007f6bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User APIs Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f0';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b236f812-f21e-4ce5-97a7-92437bf056a6",
                  "parentUUID": "21da98fe-edca-4609-9bc2-d6199007f6bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33766d74-e6d6-4269-a3b2-6bbe8d0bd717",
                "b236f812-f21e-4ce5-97a7-92437bf056a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 284,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b721ce00-9560-4123-a18d-a5371f05438d",
              "title": "get UserId From PostId ",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get UserId From PostId ",
                  "fullTitle": "User APIs get UserId From PostId  get UserId From PostId ",
                  "timedOut": false,
                  "duration": 429,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nuserServices.getUserIdFromPostId(postId).then((result) => {\n  expect(result).to.be.eq('61c9d749b33bf76a71baed86');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b45ca064-2b00-4524-a300-a79196d77264",
                  "parentUUID": "b721ce00-9560-4123-a18d-a5371f05438d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b45ca064-2b00-4524-a300-a79196d77264"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 429,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "456651a1-987e-4ecd-a2e1-dbb6ea7e5e70",
              "title": "Create Notification",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Notification",
                  "fullTitle": "User APIs Create Notification It Should Create Notification",
                  "timedOut": false,
                  "duration": 1124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nconst type = 'like';\nnotificationFunction.addNotification(postId, type).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "960c4317-071f-4c1f-aedd-e06587e226a8",
                  "parentUUID": "456651a1-987e-4ecd-a2e1-dbb6ea7e5e70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "960c4317-071f-4c1f-aedd-e06587e226a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}