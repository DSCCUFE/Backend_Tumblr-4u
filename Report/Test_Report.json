{
  "stats": {
    "suites": 8,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-01T17:47:20.586Z",
    "end": "2022-01-01T17:47:38.246Z",
    "duration": 17660,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "49203da1-af1d-4cdc-bc6f-01a318e97fb9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "701185dc-b8ed-420d-a920-aef26dc3f74d",
          "title": "Post APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It tests uploading audio on server, gets url",
              "fullTitle": "Post APIs It tests uploading audio on server, gets url",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
              "err": {},
              "uuid": "56b6d66c-db39-40af-b38f-1c1105b11b83",
              "parentUUID": "701185dc-b8ed-420d-a920-aef26dc3f74d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "98bf5629-6e60-4dbb-aea3-0eaa4fd1eac1",
              "title": "Upload media APIs",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests uploading image on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading image on server, gets url",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'image2022-1-1T03-59-05.770Z.jpg';\n  \npostFunctions.uploadAny(blobName, 'image/jpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "257468eb-f0a5-4e2f-aa3e-133694b85fd9",
                  "parentUUID": "98bf5629-6e60-4dbb-aea3-0eaa4fd1eac1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading video on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading video on server, gets url",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'video2022-01-01T15-23-27.384Z.mp4';\n  \npostFunctions.uploadAny(blobName, 'video/mp4')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "f0874209-ca1b-4e49-ac21-71fd2fd560b6",
                  "parentUUID": "98bf5629-6e60-4dbb-aea3-0eaa4fd1eac1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading audio on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading audio on server, gets url",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n  \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b10410a7-3844-4a9d-a76b-36b14c8017be",
                  "parentUUID": "98bf5629-6e60-4dbb-aea3-0eaa4fd1eac1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "257468eb-f0a5-4e2f-aa3e-133694b85fd9",
                "f0874209-ca1b-4e49-ac21-71fd2fd560b6",
                "b10410a7-3844-4a9d-a76b-36b14c8017be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "20f922a9-5751-4657-8a8a-31399b5dc769",
              "title": "Random posts APIs",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests radar posts",
                  "fullTitle": "Post APIs Random posts APIs It tests radar posts",
                  "timedOut": false,
                  "duration": 8213,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "postFunctions.retrieveRandomPosts()\n        .then((res)=>{\n          expect(res.length).to.be.equal(10);\n          done();\n        }).catch(done);",
                  "err": {},
                  "uuid": "8b9f8fe0-e6a1-4ba3-91e4-ba5378e5f023",
                  "parentUUID": "20f922a9-5751-4657-8a8a-31399b5dc769",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests trending posts",
                  "fullTitle": "Post APIs Random posts APIs It tests trending posts",
                  "timedOut": false,
                  "duration": 1432,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "post=[\n  {\n    \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n    \"blogId\": '61c9d6b82569f9abb33ebe04',\n    \"postHtml\": '<img width=\"100%\" src=\"https://tumblrstorage.blob.core.windows.net/imagess/image2022-1-1T03-59-05.770Z.jpg]\" alt=\"\">',\n    \"type\": 'text',\n    \"state\": 'published',\n    \"tags\": [ 'edit', 'cmp', 'Trending' ],\n    \"notesId\": '61ca5d91a8a4556c5b24f1f3',\n    \"isDeleted\": false,\n    \"isReported\": false,\n    \"postUrl\": '/61ca5d91a8a4556c5b24f1f4/show_post',\n    \"__v\": 1\n  }\n]\npostFunctions.retrieveTrendingPosts()\n    .then((res)=>{\n      expect(res.trendingPostsLim[0].notesId).to.be.equal(post[0].notesId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "7eb09d01-9a73-4bb1-98e6-af200a2bcabd",
                  "parentUUID": "20f922a9-5751-4657-8a8a-31399b5dc769",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b9f8fe0-e6a1-4ba3-91e4-ba5378e5f023",
                "7eb09d01-9a73-4bb1-98e6-af200a2bcabd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9645,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "56b6d66c-db39-40af-b38f-1c1105b11b83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "04dddc87-599f-4144-bf6d-4417fe1fab48",
          "title": "Search APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "392d4f47-cd52-4790-9fc8-2197b650ba65",
              "title": "Search Dashboard Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 442,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "bffac504-8e2f-4226-bc29-ab610ff8229a",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 557,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CM',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "42be4170-6a58-43c6-b8a5-d3fdf27a86ae",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 445,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "0f4b611e-46b6-40ce-a8c6-64f59e67b183",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 463,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CMP',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('CMP-2023');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "894530e0-58a8-4ad9-925e-bab33917e285",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a user",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a user",
                  "timedOut": false,
                  "duration": 1020,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[2]).to.be.equal('Writing');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "d1dc2d78-aa8a-424f-afad-c36f24db06c1",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get interests when no word is entered",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get interests when no word is entered",
                  "timedOut": false,
                  "duration": 958,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[3]).to.be.equal('Sports');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "aba9f6f0-072b-4ba5-8478-2a9bc466d6ea",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has interested hashtags",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has interested hashtags",
                  "timedOut": false,
                  "duration": 1551,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      // console.log('res.resultPostHashTag[0].blogId: ', res);\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "8fc5ebb6-7600-4733-9a24-3637b974f9e2",
                  "parentUUID": "392d4f47-cd52-4790-9fc8-2197b650ba65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bffac504-8e2f-4226-bc29-ab610ff8229a",
                "42be4170-6a58-43c6-b8a5-d3fdf27a86ae",
                "0f4b611e-46b6-40ce-a8c6-64f59e67b183",
                "894530e0-58a8-4ad9-925e-bab33917e285",
                "d1dc2d78-aa8a-424f-afad-c36f24db06c1",
                "aba9f6f0-072b-4ba5-8478-2a9bc466d6ea",
                "8fc5ebb6-7600-4733-9a24-3637b974f9e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5436,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "e6586650-5c07-4663-b5f2-63b55f50c8de",
          "title": "User Methods",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It gets checkout these blogs",
              "fullTitle": "User Methods It gets checkout these blogs",
              "timedOut": false,
              "duration": 1986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blogFunctions.retrieveRandomBlogs()\n        .then((res)=>{\n        expect(res.length).to.be.equal(10);\n        done();\n        }).catch(done);",
              "err": {},
              "uuid": "abb241d8-d0a1-4edf-8a56-553ebe2f9a14",
              "parentUUID": "e6586650-5c07-4663-b5f2-63b55f50c8de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "abb241d8-d0a1-4edf-8a56-553ebe2f9a14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "81bb60a0-93b6-464d-8b2b-052c24e4504e",
          "title": "User APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6a649ade-aa2c-47ff-b4bf-90ed42ca0de9",
              "title": "Update user",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase4\\final\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It sets interests of the user",
                  "fullTitle": "User APIs Update user It sets interests of the user",
                  "timedOut": false,
                  "duration": 179,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst interests=[\n  \"flowers\",\n  \"math\",\n  \"nasa\",\n  \"education\"\n]\nuserFunc.getInterests(email, interests)\n.then((result) => {\n  expect(result.followedTags[0]).to.be.eq(interests[0]);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4c66d9ee-bf8f-4638-a605-1e207c1c7eca",
                  "parentUUID": "6a649ade-aa2c-47ff-b4bf-90ed42ca0de9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It updates color theme of the user",
                  "fullTitle": "User APIs Update user It updates color theme of the user",
                  "timedOut": false,
                  "duration": 196,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst colorNumb=3;\nuserFunc.updateColor(email, colorNumb).then((result) => {\n  console.log('result: ', result);\n  expect(result.bodyColor).to.be.eq(colorNumb);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5d0a34b3-f599-4f16-9548-e476d66130d3",
                  "parentUUID": "6a649ade-aa2c-47ff-b4bf-90ed42ca0de9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c66d9ee-bf8f-4638-a605-1e207c1c7eca",
                "5d0a34b3-f599-4f16-9548-e476d66130d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 375,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}