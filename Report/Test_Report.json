{
  "stats": {
    "suites": 36,
    "tests": 50,
    "passes": 18,
    "pending": 0,
    "failures": 32,
    "start": "2021-12-30T13:46:05.636Z",
    "end": "2021-12-30T13:46:19.229Z",
    "duration": 13593,
    "testsRegistered": 50,
    "passPercent": 36,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0b6a07fc-bb19-43c4-9309-01045e403130",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68d590cf-9659-4128-bd6e-701298d0d1e1",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8b4a85fe-ff1a-4034-b57c-addaa3af83bf",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 3236,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:43:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "49665302-0876-441f-81ef-1de75223f4ae",
                  "parentUUID": "8b4a85fe-ff1a-4034-b57c-addaa3af83bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "49665302-0876-441f-81ef-1de75223f4ae"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3236,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "09c77e9b-c419-4ceb-abf8-24b6de8a2c8e",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 144,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { msg: 'Post Not Found', post: {} } to be an array",
                    "estack": "AssertionError: expected { msg: 'Post Not Found', post: {} } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:59:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "9fec9ac3-db6a-410f-8533-58e930cfdb78",
                  "parentUUID": "09c77e9b-c419-4ceb-abf8-24b6de8a2c8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "9fec9ac3-db6a-410f-8533-58e930cfdb78"
              ],
              "pending": [],
              "skipped": [],
              "duration": 144,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a86bfe05-83e2-42ae-8dac-9da47764ff16",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 283,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:79:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "dee9f558-ed87-4e2e-b481-a2e7721f337e",
                  "parentUUID": "a86bfe05-83e2-42ae-8dac-9da47764ff16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "dee9f558-ed87-4e2e-b481-a2e7721f337e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 283,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8bc0b9e1-0ea6-4a89-a7b7-99a5527ade25",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 142,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b50d9837c346ee39708965',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Comment Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:98:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Post Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "31b79677-bf4d-4494-9f7c-3f2266bf3b0c",
                  "parentUUID": "8bc0b9e1-0ea6-4a89-a7b7-99a5527ade25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "31b79677-bf4d-4494-9f7c-3f2266bf3b0c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "61bcc61c-d74f-495f-bf09-438f71848f1a",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 281,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('array');\n      expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Blog Not Found' to be an array",
                    "estack": "AssertionError: expected 'Blog Not Found' to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:118:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "fd6490b5-cc80-4236-ab54-37fb3ad9ff69",
                  "parentUUID": "61bcc61c-d74f-495f-bf09-438f71848f1a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "fd6490b5-cc80-4236-ab54-37fb3ad9ff69"
              ],
              "pending": [],
              "skipped": [],
              "duration": 281,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6a92fec2-8d32-445e-a1f7-9e00932d585a",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 147,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b51524807f8f7c61e5c14b',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Reblog Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:137:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Post Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "360fa685-fdc9-4db8-8ae5-6707513a3320",
                  "parentUUID": "6a92fec2-8d32-445e-a1f7-9e00932d585a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "360fa685-fdc9-4db8-8ae5-6707513a3320"
              ],
              "pending": [],
              "skipped": [],
              "duration": 147,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ee87ecad-a555-4fd8-b72f-e70dc90198bc",
              "title": "Function loopAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const arr = [0, 1, 2];\nconst element = 1;\n// expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\ndone();",
                  "err": {
                    "message": "TypeError: postFunctions.loopAndCheck is not a function",
                    "estack": "TypeError: postFunctions.loopAndCheck is not a function\n    at Context.<anonymous> (test\\postTest.js:148:21)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "8393d884-fffa-4267-b338-f5d6d44e7a3e",
                  "parentUUID": "ee87ecad-a555-4fd8-b72f-e70dc90198bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "8393d884-fffa-4267-b338-f5d6d44e7a3e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d52d6428-136f-4809-bf3a-d08b54189b24",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {text: 'a', _id: a},\n  {text: 'shd', _id: b},\n  {text: 'akj', _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {
                    "message": "AssertionError: expected 0 to equal 1",
                    "estack": "AssertionError: expected 0 to equal 1\n    at Context.<anonymous> (test\\postTest.js:164:64)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": "- 0\n+ 1\n"
                  },
                  "uuid": "bda15f83-8a86-4cfa-a417-6ab0c1a40195",
                  "parentUUID": "d52d6428-136f-4809-bf3a-d08b54189b24",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "bda15f83-8a86-4cfa-a417-6ab0c1a40195"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d761a825-868f-4ab0-94fe-ab88f841ca89",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 428,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "278529a8-c59e-402a-a453-31197051f481",
                  "parentUUID": "d761a825-868f-4ab0-94fe-ab88f841ca89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "278529a8-c59e-402a-a453-31197051f481"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 428,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "18f550ca-9eab-43e1-9e36-e9c8037bc0c9",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 143,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (msg, notes, ...) } to be an array",
                    "estack": "AssertionError: expected { Object (msg, notes, ...) } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:196:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "24ed7d4a-e218-439e-8066-ee11fe1b79ad",
                  "parentUUID": "18f550ca-9eab-43e1-9e36-e9c8037bc0c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "24ed7d4a-e218-439e-8066-ee11fe1b79ad"
              ],
              "pending": [],
              "skipped": [],
              "duration": 143,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "80993a44-a4fc-4464-a61d-d531e38a045a",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 144,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  },\n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (msg, user, ...) } to be an array",
                    "estack": "AssertionError: expected { Object (msg, user, ...) } to be an array\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:213:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "dec43b2d-505a-4f26-8656-7459a71bda25",
                  "parentUUID": "80993a44-a4fc-4464-a61d-d531e38a045a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "dec43b2d-505a-4f26-8656-7459a71bda25"
              ],
              "pending": [],
              "skipped": [],
              "duration": 144,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "272ea26d-5262-4b99-a9a3-699ba431f552",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5bd14624-d8b9-406a-869c-1e775d05c031",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 144,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "74f5908c-5224-4b37-9608-8d983528266f",
                  "parentUUID": "5bd14624-d8b9-406a-869c-1e775d05c031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 138,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'DEP',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "78e83a14-05b0-4e07-bc70-92f32a1a7768",
                  "parentUUID": "5bd14624-d8b9-406a-869c-1e775d05c031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 139,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          _id: '6199531b94c23324c69ea65d',\n          blogId: 'Metal',\n          postHtml: '</>',\n          type: 'text',\n          state: 'published',\n          tags: ['deposit', 'hacking', 'morph'],\n          __v: 0,\n        },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "b34fc4c6-16f7-4d5f-a690-88148c794b36",
                  "parentUUID": "5bd14624-d8b9-406a-869c-1e775d05c031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 140,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'hazel',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('Mr. Hazel Schamberger');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "9909f5db-340a-45da-885e-eb1642674415",
                  "parentUUID": "5bd14624-d8b9-406a-869c-1e775d05c031",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 142,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '61b4df38206b4252a939a0bc',\n};\nsearch.autoCompleteSearchDash(wordName.userId)\n    .then((res)=>{\n      console.log(res);\n      expect(res.resultFollowedTag[0]).to.be.equal('matrix');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Object.autoCompleteSearchDash (Modules\\Search\\Search dashborad\\Controller\\control.js:55:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "9067348d-d50b-42e4-8536-0281578b7e30",
                  "parentUUID": "5bd14624-d8b9-406a-869c-1e775d05c031",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "74f5908c-5224-4b37-9608-8d983528266f",
                "78e83a14-05b0-4e07-bc70-92f32a1a7768",
                "b34fc4c6-16f7-4d5f-a690-88148c794b36",
                "9909f5db-340a-45da-885e-eb1642674415",
                "9067348d-d50b-42e4-8536-0281578b7e30"
              ],
              "pending": [],
              "skipped": [],
              "duration": 703,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "c50b6954-1a95-4f92-84a9-1fe8ef36433f",
          "title": "UserBlog Methodes testing",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8564251a-c2c1-46ce-be45-cfa21a6004de",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'reema2',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title, req.body.name,\n    req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( req.body.name);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:32:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "88c7460a-8fe3-40e1-b1d4-45232daa5763",
                  "parentUUID": "8564251a-c2c1-46ce-be45-cfa21a6004de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'nour22',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title,\n    req.body.name, req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:52:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "3183d619-fcde-4bfb-9e32-947577319621",
                  "parentUUID": "8564251a-c2c1-46ce-be45-cfa21a6004de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "88c7460a-8fe3-40e1-b1d4-45232daa5763",
                "3183d619-fcde-4bfb-9e32-947577319621"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "19f73ae4-649e-4865-8142-cc82b77fd1e4",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 290,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n     {\n       blogId: '61b51633be867ae625b47fc1',\n     },\n};\nuserFunctions.deleteBlog(req.params.userId, req.body.blogId).then((res)=>{\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:69:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "3563eddb-e487-42d2-9cf3-98adf241ee85",
                  "parentUUID": "19f73ae4-649e-4865-8142-cc82b77fd1e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "describe('Delete Blog Testing', ()=>{\n  const req={\n    params: {\n      userId: '6196d197a31552477d437404',\n    },\n    body:\n     {\n       blogId: '61b3b9e9ae2911b440a03a35c',\n     },\n  };\n  userFunctions.deleteBlog(req.params.userId, req.body.blogId)\n      .then((res)=>{\n        expect(res).to.be.eq(null);\n        done();\n      }).catch(done);\n});",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:87:37\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "034ffe90-ea49-4ebb-833c-0ba83adf10e6",
                  "parentUUID": "19f73ae4-649e-4865-8142-cc82b77fd1e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "3563eddb-e487-42d2-9cf3-98adf241ee85",
                "034ffe90-ea49-4ebb-833c-0ba83adf10e6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 297,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "80937cf1-a789-4613-964d-2d35fd48b762",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('nour');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:101:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "01418d71-2d01-4e2f-999a-8070c6809160",
                  "parentUUID": "80937cf1-a789-4613-964d-2d35fd48b762",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour123',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:113:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "d46b219d-9fb4-411f-a7ca-2ca40d0bb44d",
                  "parentUUID": "80937cf1-a789-4613-964d-2d35fd48b762",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "01418d71-2d01-4e2f-999a-8070c6809160",
                "d46b219d-9fb4-411f-a7ca-2ca40d0bb44d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4ba08d76-74b6-4f9d-9d8f-34ad8f72f49a",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 141,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:132:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "2703675a-87e2-4c4d-ba89-5ad575165220",
                  "parentUUID": "4ba08d76-74b6-4f9d-9d8f-34ad8f72f49a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 143,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to equal 'URL is not available'",
                    "estack": "AssertionError: expected null to equal 'URL is not available'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:151:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "b772459f-d20e-42f4-abda-f3b56d495edb",
                  "parentUUID": "4ba08d76-74b6-4f9d-9d8f-34ad8f72f49a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d19cefae-414e-4852-868f-6ba190370d85",
                  "parentUUID": "4ba08d76-74b6-4f9d-9d8f-34ad8f72f49a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d19cefae-414e-4852-868f-6ba190370d85"
              ],
              "failures": [
                "2703675a-87e2-4c4d-ba89-5ad575165220",
                "b772459f-d20e-42f4-abda-f3b56d495edb"
              ],
              "pending": [],
              "skipped": [],
              "duration": 424,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0634b781-90e7-4e3b-a231-02ab89e7afe1",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:182:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "1f060891-cad7-49fa-9576-821d45df0103",
                  "parentUUID": "0634b781-90e7-4e3b-a231-02ab89e7afe1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:197:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "0fd64191-b912-4086-b00e-88e54f2da16c",
                  "parentUUID": "0634b781-90e7-4e3b-a231-02ab89e7afe1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "1f060891-cad7-49fa-9576-821d45df0103",
                "0fd64191-b912-4086-b00e-88e54f2da16c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cb50b783-96fb-47e9-9ebb-c3318b3def2b",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:214:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "f6e390a8-051c-4e34-9f14-30b3643450c8",
                  "parentUUID": "cb50b783-96fb-47e9-9ebb-c3318b3def2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:229:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "d4e9bc1f-92db-4903-8f1c-4b0277cda991",
                  "parentUUID": "cb50b783-96fb-47e9-9ebb-c3318b3def2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "f6e390a8-051c-4e34-9f14-30b3643450c8",
                "d4e9bc1f-92db-4903-8f1c-4b0277cda991"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3c761345-fe97-4ae2-9652-10a8123d5207",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:246:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "eaca10f6-4fca-4c8a-8d56-dc154ccf3453",
                  "parentUUID": "3c761345-fe97-4ae2-9652-10a8123d5207",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:261:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "a97a5cd1-ba70-48b2-b537-18ae2454d47b",
                  "parentUUID": "3c761345-fe97-4ae2-9652-10a8123d5207",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "eaca10f6-4fca-4c8a-8d56-dc154ccf3453",
                "a97a5cd1-ba70-48b2-b537-18ae2454d47b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9cb0c377-8c46-4f4a-993e-67bdf0da6a7e",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 140,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:279:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "2ee44a7b-f73d-4b7d-94cf-00016f7c3889",
                  "parentUUID": "9cb0c377-8c46-4f4a-993e-67bdf0da6a7e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6d5353db-6f6a-446c-be7e-b416201dbfdb",
                  "parentUUID": "9cb0c377-8c46-4f4a-993e-67bdf0da6a7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d5353db-6f6a-446c-be7e-b416201dbfdb"
              ],
              "failures": [
                "2ee44a7b-f73d-4b7d-94cf-00016f7c3889"
              ],
              "pending": [],
              "skipped": [],
              "duration": 279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b40cd84e-06b6-4106-ba7b-8fc85602b733",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 141,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:313:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "fea84ab2-eb75-48a0-8857-feafd38418c0",
                  "parentUUID": "b40cd84e-06b6-4106-ba7b-8fc85602b733",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "fa712367-d050-4c1f-b6a1-925c53f1e363",
                  "parentUUID": "b40cd84e-06b6-4106-ba7b-8fc85602b733",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa712367-d050-4c1f-b6a1-925c53f1e363"
              ],
              "failures": [
                "fea84ab2-eb75-48a0-8857-feafd38418c0"
              ],
              "pending": [],
              "skipped": [],
              "duration": 289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "a9d843b0-d398-47df-bbc2-f5885cd71add",
          "title": "User APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "36e4ad99-dca5-40b6-8bc9-b9d9803fc449",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a615fee3-6a17-4af9-91be-4ad7b05828b8",
                  "parentUUID": "36e4ad99-dca5-40b6-8bc9-b9d9803fc449",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3a3e18aa-d99b-4e69-835d-43ee1523e957",
                  "parentUUID": "36e4ad99-dca5-40b6-8bc9-b9d9803fc449",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a615fee3-6a17-4af9-91be-4ad7b05828b8",
                "3a3e18aa-d99b-4e69-835d-43ee1523e957"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 303,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2ab83e45-2b3f-48bc-9f58-4398b3d5d1f5",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 139,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'Gail Marks';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected false to equal true",
                    "estack": "AssertionError: expected false to equal true\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js:80:30\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- false\n+ true\n"
                  },
                  "uuid": "7671e5f6-fa1f-4ca3-af5d-9f900af12521",
                  "parentUUID": "2ab83e45-2b3f-48bc-9f58-4398b3d5d1f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e7e7a1c0-175e-4d1f-a921-88c76f6a3c70",
                  "parentUUID": "2ab83e45-2b3f-48bc-9f58-4398b3d5d1f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7e7a1c0-175e-4d1f-a921-88c76f6a3c70"
              ],
              "failures": [
                "7671e5f6-fa1f-4ca3-af5d-9f900af12521"
              ],
              "pending": [],
              "skipped": [],
              "duration": 279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "7bdd1833-4bdc-4f15-8200-6dca16ea64d6",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "bf44088b-e4c4-4c4f-9fb3-c8fe38b5bf9e",
                  "parentUUID": "7bdd1833-4bdc-4f15-8200-6dca16ea64d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf44088b-e4c4-4c4f-9fb3-c8fe38b5bf9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 180,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "41c01ab6-fd00-4eed-96a3-44dbf739df99",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User APIs Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1577,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "25f38bb2-6faf-47ec-b9a8-0146ac24b3b2",
                  "parentUUID": "41c01ab6-fd00-4eed-96a3-44dbf739df99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25f38bb2-6faf-47ec-b9a8-0146ac24b3b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1577,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ca1a9b7e-cf70-47cc-9dcc-dc30939e34df",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 75,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "88a0f473-e76f-4e96-b9b7-90389cc79d02",
                  "parentUUID": "ca1a9b7e-cf70-47cc-9dcc-dc30939e34df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4b47305c-ad10-4fe9-8820-189b86b25c99",
                  "parentUUID": "ca1a9b7e-cf70-47cc-9dcc-dc30939e34df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "88a0f473-e76f-4e96-b9b7-90389cc79d02",
                "4b47305c-ad10-4fe9-8820-189b86b25c99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 139,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4b9ed6c6-385b-46aa-b4f9-c6c13ff4288b",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User APIs Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 181,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5bfbfa39-2d13-4f54-8568-ccfeebf79350",
                  "parentUUID": "4b9ed6c6-385b-46aa-b4f9-c6c13ff4288b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bfbfa39-2d13-4f54-8568-ccfeebf79350"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 181,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "eaa50179-7fc5-4a6e-a846-7ea76a5ed785",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User APIs Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 727,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst name = 'Game-2023';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1802a5e3-5774-4770-9053-ed876884a936",
                  "parentUUID": "eaa50179-7fc5-4a6e-a846-7ea76a5ed785",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1802a5e3-5774-4770-9053-ed876884a936"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 727,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "44534512-bb51-42e2-b987-bafc87e72bf0",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User APIs Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 1367,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2c878b3b-e5e6-4e8f-86ae-9e852d00c61b",
                  "parentUUID": "44534512-bb51-42e2-b987-bafc87e72bf0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c878b3b-e5e6-4e8f-86ae-9e852d00c61b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1367,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "78dd2c0b-c696-4f8f-8af6-2765a6085066",
              "title": "Check Post Id",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User APIs Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f4';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "66c3e01b-db1e-4f6f-b96a-359adfbae57a",
                  "parentUUID": "78dd2c0b-c696-4f8f-8af6-2765a6085066",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User APIs Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f0';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a291efb2-e727-447a-9086-35e985fbbae6",
                  "parentUUID": "78dd2c0b-c696-4f8f-8af6-2765a6085066",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66c3e01b-db1e-4f6f-b96a-359adfbae57a",
                "a291efb2-e727-447a-9086-35e985fbbae6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "707424cc-0aed-4632-ae78-cbebe66af0ff",
              "title": "get UserId From PostId ",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get UserId From PostId ",
                  "fullTitle": "User APIs get UserId From PostId  get UserId From PostId ",
                  "timedOut": false,
                  "duration": 437,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nuserServices.getUserIdFromPostId(postId).then((result) => {\n  expect(result).to.be.eq('61c9d749b33bf76a71baed86');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a027f208-b790-4999-aa96-50d822a89bbd",
                  "parentUUID": "707424cc-0aed-4632-ae78-cbebe66af0ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a027f208-b790-4999-aa96-50d822a89bbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 437,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d04c836b-e1ad-49e8-bd29-dbf8bc195b29",
              "title": "Create Notification",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Notification",
                  "fullTitle": "User APIs Create Notification It Should Create Notification",
                  "timedOut": false,
                  "duration": 1001,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nconst type = 'like';\nnotificationFunction.addNotification(postId, type).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "508d45f4-39a0-4873-92a1-74582756f76b",
                  "parentUUID": "d04c836b-e1ad-49e8-bd29-dbf8bc195b29",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "508d45f4-39a0-4873-92a1-74582756f76b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1001,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}