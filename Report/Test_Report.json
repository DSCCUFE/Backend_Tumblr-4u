{
  "stats": {
    "suites": 31,
    "tests": 44,
    "passes": 40,
    "pending": 0,
    "failures": 4,
    "start": "2021-12-11T22:56:27.871Z",
    "end": "2021-12-11T22:56:48.228Z",
    "duration": 20357,
    "testsRegistered": 44,
    "passPercent": 90.9090909090909,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "87a13b5a-39fd-4600-a699-2c6bc1ba12ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "394ec6d0-c0d0-4e7b-84b1-f7492d97dd02",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "62871eac-9b7c-4eab-b5d6-54b79cd26c27",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 4268,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e631aea5-4547-4b39-b8c9-678162c4c04a",
                  "parentUUID": "62871eac-9b7c-4eab-b5d6-54b79cd26c27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e631aea5-4547-4b39-b8c9-678162c4c04a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4268,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "591f5704-229a-4a95-ad68-2ac18ebf70d7",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8c33afcf-e918-4af9-b31a-2ad946833853",
                  "parentUUID": "591f5704-229a-4a95-ad68-2ac18ebf70d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c33afcf-e918-4af9-b31a-2ad946833853"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f3531d4e-b3e2-41e9-b21e-c275e2c6c44e",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 682,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "98b982a4-68f0-4de3-8554-a87b6b910e76",
                  "parentUUID": "f3531d4e-b3e2-41e9-b21e-c275e2c6c44e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98b982a4-68f0-4de3-8554-a87b6b910e76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 682,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c8cfe53f-fa6c-4d43-96a5-f7f0d151c0bd",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 333,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b50d9837c346ee39708965',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'\n    at C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:98:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Comment Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "fbb5188e-3ca6-45d5-b359-3dc6deeea4e8",
                  "parentUUID": "c8cfe53f-fa6c-4d43-96a5-f7f0d151c0bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "fbb5188e-3ca6-45d5-b359-3dc6deeea4e8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 333,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0e4eb6f5-4d1a-498b-9951-5a1a8bbe35e7",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 500,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('array');\n      expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "1a230b96-b91e-4f2c-b68f-ff3413c7fef4",
                  "parentUUID": "0e4eb6f5-4d1a-498b-9951-5a1a8bbe35e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a230b96-b91e-4f2c-b68f-ff3413c7fef4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 500,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "57cf2392-4327-48de-9633-17b29ecb2c94",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 348,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b51524807f8f7c61e5c14b',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'\n    at C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:137:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Reblog Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "d34b0546-6e18-4c98-a1cb-ac932f22d3a3",
                  "parentUUID": "57cf2392-4327-48de-9633-17b29ecb2c94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d34b0546-6e18-4c98-a1cb-ac932f22d3a3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 348,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "244d0bf4-8c13-4369-8c98-a624c3264b68",
              "title": "Function loopAndCheck",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const arr = [0, 1, 2];\nconst element = 1;\n// expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "1442dfa9-d7d9-4d8f-9863-de3bb3bb8ad8",
                  "parentUUID": "244d0bf4-8c13-4369-8c98-a624c3264b68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1442dfa9-d7d9-4d8f-9863-de3bb3bb8ad8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "221102f0-75db-45b3-af55-67fd7725d6fd",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {text: 'a', _id: a},\n  {text: 'shd', _id: b},\n  {text: 'akj', _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "ab9fecab-02ce-482c-9108-1a7a718f89a7",
                  "parentUUID": "221102f0-75db-45b3-af55-67fd7725d6fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab9fecab-02ce-482c-9108-1a7a718f89a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "559b2330-bdf5-4202-bf49-9e4d83c985fd",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 500,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "08756122-c119-4001-881b-8020b844987e",
                  "parentUUID": "559b2330-bdf5-4202-bf49-9e4d83c985fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08756122-c119-4001-881b-8020b844987e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 500,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ccfa69d5-c722-439a-839d-8137fd7ec9a9",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 343,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "819140de-0ff9-4d53-8fc0-c813fa4a5694",
                  "parentUUID": "ccfa69d5-c722-439a-839d-8137fd7ec9a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "819140de-0ff9-4d53-8fc0-c813fa4a5694"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 343,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "025e33ed-cfa6-4e24-b4c9-db27bfcfec3e",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 4353,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  },\n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a8d5b5d9-ae4c-49a9-b503-0b615d0bb11f",
                  "parentUUID": "025e33ed-cfa6-4e24-b4c9-db27bfcfec3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8d5b5d9-ae4c-49a9-b503-0b615d0bb11f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4353,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "713a9b61-ae12-42ec-94cd-0eaa78de131d",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6efe13d2-3137-4000-8258-cecaff42bae5",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b259a33b-fa66-4256-b06c-f7294001cc20",
                  "parentUUID": "6efe13d2-3137-4000-8258-cecaff42bae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'DEP',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "2a76f908-c8bc-4402-ac90-a7903b1e3b36",
                  "parentUUID": "6efe13d2-3137-4000-8258-cecaff42bae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          _id: '6199531b94c23324c69ea65d',\n          blogId: 'Metal',\n          postHtml: '</>',\n          type: 'text',\n          state: 'published',\n          tags: ['deposit', 'hacking', 'morph'],\n          __v: 0,\n        },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "492b382c-b68c-4b7a-90ef-7d9c5c41c600",
                  "parentUUID": "6efe13d2-3137-4000-8258-cecaff42bae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'hazel',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('Mr. Hazel Schamberger');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "28f1064b-f470-40d0-9adf-73cdc5f9181f",
                  "parentUUID": "6efe13d2-3137-4000-8258-cecaff42bae5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '61b4df38206b4252a939a0bc',\n};\nsearch.autoCompleteSearchDash(wordName.userId)\n    .then((res)=>{\n      console.log(res);\n      expect(res.resultFollowedTag[0]).to.be.equal('matrix');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b06051b7-d01d-47c7-af52-0d05acd024ff",
                  "parentUUID": "6efe13d2-3137-4000-8258-cecaff42bae5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b259a33b-fa66-4256-b06c-f7294001cc20",
                "2a76f908-c8bc-4402-ac90-a7903b1e3b36",
                "492b382c-b68c-4b7a-90ef-7d9c5c41c600",
                "28f1064b-f470-40d0-9adf-73cdc5f9181f",
                "b06051b7-d01d-47c7-af52-0d05acd024ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1417,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "daf9e692-1662-4128-ba01-af1c10d123f4",
          "title": "UserBlog Methodes testing",
          "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9dc3eab7-c710-4cd1-a7be-23e46e8e78ed",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 162,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'reema2',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title, req.body.name,\n    req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( req.body.name);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:32:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "64f07b5b-169a-43bd-94ad-2d50c02449db",
                  "parentUUID": "9dc3eab7-c710-4cd1-a7be-23e46e8e78ed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'nour22',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title,\n    req.body.name, req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "71302775-fbdb-499a-b6c7-07090405ad31",
                  "parentUUID": "9dc3eab7-c710-4cd1-a7be-23e46e8e78ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71302775-fbdb-499a-b6c7-07090405ad31"
              ],
              "failures": [
                "64f07b5b-169a-43bd-94ad-2d50c02449db"
              ],
              "pending": [],
              "skipped": [],
              "duration": 324,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "82f1d6aa-9cb6-4c21-852b-8c6cf00c5e21",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 157,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n     {\n       blogId: '61b51633be867ae625b47fc1',\n     },\n};\nuserFunctions.deleteBlog(req.params.userId, req.body.blogId).then((res)=>{\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js:69:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "52b9b759-8d97-42fc-aacf-484d0c91ccb6",
                  "parentUUID": "82f1d6aa-9cb6-4c21-852b-8c6cf00c5e21",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "describe('Delete Blog Testing', ()=>{\n  const req={\n    params: {\n      userId: '6196d197a31552477d437404',\n    },\n    body:\n     {\n       blogId: '61b3b9e9ae2911b440a03a35c',\n     },\n  };\n  userFunctions.deleteBlog(req.params.userId, req.body.blogId)\n      .then((res)=>{\n        expect(res).to.be.eq(null);\n        done();\n      }).catch(done);\n});",
                  "err": {},
                  "uuid": "a4b55d5a-2efd-4692-bbfa-a810104dd040",
                  "parentUUID": "82f1d6aa-9cb6-4c21-852b-8c6cf00c5e21",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4b55d5a-2efd-4692-bbfa-a810104dd040"
              ],
              "failures": [
                "52b9b759-8d97-42fc-aacf-484d0c91ccb6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e267e9fb-d1f7-4be1-ac83-132eceff2a63",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('nour');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "50a20749-86b1-475c-b8a1-357b5aa0bb1d",
                  "parentUUID": "e267e9fb-d1f7-4be1-ac83-132eceff2a63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour123',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d9896780-f181-4441-b2f0-c2bb18f62615",
                  "parentUUID": "e267e9fb-d1f7-4be1-ac83-132eceff2a63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50a20749-86b1-475c-b8a1-357b5aa0bb1d",
                "d9896780-f181-4441-b2f0-c2bb18f62615"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 309,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c617b33b-69ca-4590-ba4e-14650ccb83b0",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a18f24a9-1e78-4045-ba80-9c19a81461b5",
                  "parentUUID": "c617b33b-69ca-4590-ba4e-14650ccb83b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 316,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "87cf4f2e-6c4d-48db-a07d-0c9568507f02",
                  "parentUUID": "c617b33b-69ca-4590-ba4e-14650ccb83b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "93cdfaf0-8b34-4f73-9f44-f8e4e601a193",
                  "parentUUID": "c617b33b-69ca-4590-ba4e-14650ccb83b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a18f24a9-1e78-4045-ba80-9c19a81461b5",
                "87cf4f2e-6c4d-48db-a07d-0c9568507f02",
                "93cdfaf0-8b34-4f73-9f44-f8e4e601a193"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 636,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4d140246-5de8-425b-ba59-e765387c1cbb",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 324,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5d86b0bc-dd2d-47c3-bbb0-112909c407d5",
                  "parentUUID": "4d140246-5de8-425b-ba59-e765387c1cbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 324,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "56d9c16f-38bb-4582-8780-832434a90330",
                  "parentUUID": "4d140246-5de8-425b-ba59-e765387c1cbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d86b0bc-dd2d-47c3-bbb0-112909c407d5",
                "56d9c16f-38bb-4582-8780-832434a90330"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 648,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4b8def05-de3f-47b2-af3b-fd59abf82184",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 317,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ed3ca3a6-58dd-4012-9cc7-8cce427f9e18",
                  "parentUUID": "4b8def05-de3f-47b2-af3b-fd59abf82184",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 323,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5face606-5d1d-41c4-ba93-01e0c1425d8e",
                  "parentUUID": "4b8def05-de3f-47b2-af3b-fd59abf82184",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed3ca3a6-58dd-4012-9cc7-8cce427f9e18",
                "5face606-5d1d-41c4-ba93-01e0c1425d8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 640,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f294e2a6-78f9-4ca9-81b1-85b8ba62266b",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a7c70fc2-9bac-4a29-986b-95898166a509",
                  "parentUUID": "f294e2a6-78f9-4ca9-81b1-85b8ba62266b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 324,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7d3df887-971f-4df8-9b7b-101b15d2dc22",
                  "parentUUID": "f294e2a6-78f9-4ca9-81b1-85b8ba62266b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7c70fc2-9bac-4a29-986b-95898166a509",
                "7d3df887-971f-4df8-9b7b-101b15d2dc22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 642,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "64a1f62c-990e-4876-813c-8613e1489dda",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6dc84ef1-ba9e-4a01-b0ed-9a03f1b19f97",
                  "parentUUID": "64a1f62c-990e-4876-813c-8613e1489dda",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3ed8ea1e-4b9f-44e5-9b71-54fb22d50a03",
                  "parentUUID": "64a1f62c-990e-4876-813c-8613e1489dda",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dc84ef1-ba9e-4a01-b0ed-9a03f1b19f97",
                "3ed8ea1e-4b9f-44e5-9b71-54fb22d50a03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 482,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8dc3c177-c7e2-45dc-8a7e-ada974fc5ad3",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 316,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "97225126-0a92-4349-be6c-c25ea265d540",
                  "parentUUID": "8dc3c177-c7e2-45dc-8a7e-ada974fc5ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "39d0d7c9-5d68-40a6-aa15-e9f0b9190e93",
                  "parentUUID": "8dc3c177-c7e2-45dc-8a7e-ada974fc5ad3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97225126-0a92-4349-be6c-c25ea265d540",
                "39d0d7c9-5d68-40a6-aa15-e9f0b9190e93"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 476,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "c7bfb194-c71c-4df3-b861-5d69ed08429b",
          "title": "User APIs",
          "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "73f84ace-da71-4925-82da-0cdd389aaafa",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Ayman@gmail.com';\nuserServices.checkMail(email).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4785eed2-8eb7-4ec5-8c91-1f655dc0e387",
                  "parentUUID": "73f84ace-da71-4925-82da-0cdd389aaafa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "942f6699-d4ea-4e60-8c7c-1b9c9679f257",
                  "parentUUID": "73f84ace-da71-4925-82da-0cdd389aaafa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4785eed2-8eb7-4ec5-8c91-1f655dc0e387",
                "942f6699-d4ea-4e60-8c7c-1b9c9679f257"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "87b1f358-77db-4bc3-98c0-7e95307ba597",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'Gail Marks';\nuserServices.checkBlogName(blogName).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9f5623b0-0367-4b9f-a7e1-472b1e244949",
                  "parentUUID": "87b1f358-77db-4bc3-98c0-7e95307ba597",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'CMP2023';\nuserServices.checkBlogName(blogName).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4a071268-9b89-4af8-890d-fcc6e5e2471f",
                  "parentUUID": "87b1f358-77db-4bc3-98c0-7e95307ba597",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f5623b0-0367-4b9f-a7e1-472b1e244949",
                "4a071268-9b89-4af8-890d-fcc6e5e2471f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f935602d-5a0a-4fc8-88c5-b6472a2693ea",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result)=>{\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c0bfe3cc-f631-46fc-9e24-c8c5617e83c4",
                  "parentUUID": "f935602d-5a0a-4fc8-88c5-b6472a2693ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0bfe3cc-f631-46fc-9e24-c8c5617e83c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ef8391d7-fccb-4531-aad8-df68d3925a32",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User APIs Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1773,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token ='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result)=>{\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "743abd0a-b153-491a-8d57-62d24aa2fac6",
                  "parentUUID": "ef8391d7-fccb-4531-aad8-df68d3925a32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "743abd0a-b153-491a-8d57-62d24aa2fac6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1773,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4fd02c84-3dac-413c-a489-b1ba4a856802",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 56,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n'$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a7697210-e8f2-4c37-be24-b16cc2f61886",
                  "parentUUID": "4fd02c84-3dac-413c-a489-b1ba4a856802",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n'$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b966366a-a2df-4506-879b-4fa0ed3ccb43",
                  "parentUUID": "4fd02c84-3dac-413c-a489-b1ba4a856802",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7697210-e8f2-4c37-be24-b16cc2f61886",
                "b966366a-a2df-4506-879b-4fa0ed3ccb43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 86,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "94bd4acd-acfe-49d7-aa4c-17a85b37aed4",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP-2023\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User APIs Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result)=>{\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8d3734b1-2813-4d01-85cb-f5ad4d3cf5e4",
                  "parentUUID": "94bd4acd-acfe-49d7-aa4c-17a85b37aed4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d3734b1-2813-4d01-85cb-f5ad4d3cf5e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 170,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}