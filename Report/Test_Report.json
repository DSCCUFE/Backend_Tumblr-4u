{
  "stats": {
    "suites": 33,
    "tests": 46,
    "passes": 28,
    "pending": 0,
    "failures": 18,
    "start": "2021-12-22T19:55:09.050Z",
    "end": "2021-12-22T19:55:43.267Z",
    "duration": 34217,
    "testsRegistered": 46,
    "passPercent": 60.86956521739131,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ade726aa-b4c4-44bc-a1fb-b5d664fbc922",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfa83d4b-905b-4084-a7e4-3edd6bed2183",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f74e4cae-705e-4cca-8e0c-39993115d909",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 4135,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "cb2ab236-260f-40d2-bb66-977d08ec7760",
                  "parentUUID": "f74e4cae-705e-4cca-8e0c-39993115d909",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb2ab236-260f-40d2-bb66-977d08ec7760"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4135,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "70d8870b-7073-40bb-aa8f-01058f1e4f80",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e92c0c65-3222-422d-a38e-b5ca2e4010ec",
                  "parentUUID": "70d8870b-7073-40bb-aa8f-01058f1e4f80",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e92c0c65-3222-422d-a38e-b5ca2e4010ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 177,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5c822553-6ee4-4ad9-8649-e0e23279b436",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 738,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9b7cb033-2977-4d2b-86ad-b48faa7b6e9e",
                  "parentUUID": "5c822553-6ee4-4ad9-8649-e0e23279b436",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b7cb033-2977-4d2b-86ad-b48faa7b6e9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 738,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "553610e7-4a16-4e7a-a126-d1f8c86b1ca8",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 359,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b50d9837c346ee39708965',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js:98:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Comment Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "6a948a96-7a03-475c-bedf-5c33c787c2a2",
                  "parentUUID": "553610e7-4a16-4e7a-a126-d1f8c86b1ca8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6a948a96-7a03-475c-bedf-5c33c787c2a2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 359,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b0b508b9-2b8f-4428-baf1-950510fc564c",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 528,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('array');\n      expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "497fa335-6eb4-4429-9490-87d5ac169a3e",
                  "parentUUID": "b0b508b9-2b8f-4428-baf1-950510fc564c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "497fa335-6eb4-4429-9490-87d5ac169a3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 528,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1175aae6-85b4-4cd1-bf3a-835cf285a6dc",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 346,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b51524807f8f7c61e5c14b',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js:137:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Reblog Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "52125d7f-68c3-49bb-9ce4-653365f89884",
                  "parentUUID": "1175aae6-85b4-4cd1-bf3a-835cf285a6dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "52125d7f-68c3-49bb-9ce4-653365f89884"
              ],
              "pending": [],
              "skipped": [],
              "duration": 346,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "be44bf96-efae-4645-902f-8d30337d0aca",
              "title": "Function loopAndCheck",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const arr = [0, 1, 2];\nconst element = 1;\n// expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "07d713f0-78b9-42dd-a833-533d3b25ad11",
                  "parentUUID": "be44bf96-efae-4645-902f-8d30337d0aca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07d713f0-78b9-42dd-a833-533d3b25ad11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9aa3fcf7-bbd2-4ba0-9e33-4716b4512562",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {text: 'a', _id: a},\n  {text: 'shd', _id: b},\n  {text: 'akj', _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "d76a0c0e-d822-4958-884d-08ce39aaf5b3",
                  "parentUUID": "9aa3fcf7-bbd2-4ba0-9e33-4716b4512562",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d76a0c0e-d822-4958-884d-08ce39aaf5b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "35aae3d2-49d1-42c4-a70a-8695405d5879",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 747,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a1063c04-f295-4b0f-804a-26e4ec98742f",
                  "parentUUID": "35aae3d2-49d1-42c4-a70a-8695405d5879",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1063c04-f295-4b0f-804a-26e4ec98742f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 747,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "bd12353f-a2f8-446e-a1d9-7d9853af2fd8",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 1283,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Error in Get Notes Function' to equal 'Notes Got Successfully'",
                    "estack": "AssertionError: expected 'Error in Get Notes Function' to equal 'Notes Got Successfully'\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js:197:30\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Error in Get Notes Function\n+ Notes Got Successfully\n"
                  },
                  "uuid": "79f0d300-389c-4bb4-8ec7-5e958f249c06",
                  "parentUUID": "bd12353f-a2f8-446e-a1d9-7d9853af2fd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "79f0d300-389c-4bb4-8ec7-5e958f249c06"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1283,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "474bf9bf-fb5f-4ab8-bf18-894799583f33",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 10713,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  },\n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1236f71b-e533-4a5b-9aca-ca10fbca0a71",
                  "parentUUID": "474bf9bf-fb5f-4ab8-bf18-894799583f33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1236f71b-e533-4a5b-9aca-ca10fbca0a71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10713,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "548770a8-31d3-4c72-b348-fb08a39d9830",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5172cf74-e28d-4007-a003-0f6f26a04959",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 1061,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "3c8faffd-499d-4753-ba5b-8fe3094545cf",
                  "parentUUID": "5172cf74-e28d-4007-a003-0f6f26a04959",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 992,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'DEP',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "11f676cf-f8ea-4441-aede-b14d43b9a3cf",
                  "parentUUID": "5172cf74-e28d-4007-a003-0f6f26a04959",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 1031,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          _id: '6199531b94c23324c69ea65d',\n          blogId: 'Metal',\n          postHtml: '</>',\n          type: 'text',\n          state: 'published',\n          tags: ['deposit', 'hacking', 'morph'],\n          __v: 0,\n        },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "c67cd40c-c817-4339-aab1-be28e5eb04b7",
                  "parentUUID": "5172cf74-e28d-4007-a003-0f6f26a04959",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 1339,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'hazel',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('Mr. Hazel Schamberger');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "dc1dca9b-7a3c-447c-be95-eae0eb2ef7b9",
                  "parentUUID": "5172cf74-e28d-4007-a003-0f6f26a04959",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 820,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '61b4df38206b4252a939a0bc',\n};\nsearch.autoCompleteSearchDash(wordName.userId)\n    .then((res)=>{\n      console.log(res);\n      expect(res.resultFollowedTag[0]).to.be.equal('matrix');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 'matrix'",
                    "estack": "AssertionError: expected undefined to equal 'matrix'\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\searchTest.js:102:52\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "006f422b-8a28-4128-a15b-4c1cc5aebaab",
                  "parentUUID": "5172cf74-e28d-4007-a003-0f6f26a04959",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c8faffd-499d-4753-ba5b-8fe3094545cf",
                "11f676cf-f8ea-4441-aede-b14d43b9a3cf",
                "c67cd40c-c817-4339-aab1-be28e5eb04b7",
                "dc1dca9b-7a3c-447c-be95-eae0eb2ef7b9"
              ],
              "failures": [
                "006f422b-8a28-4128-a15b-4c1cc5aebaab"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5243,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "1c3ab926-f19f-444a-95f9-6641381ee959",
          "title": "UserBlog Methodes testing",
          "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c12ac485-4025-4df0-8c42-5a94758bbee7",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'reema2',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title, req.body.name,\n    req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( req.body.name);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:32:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "dba1af48-2828-4d0d-87f1-83a1571452ba",
                  "parentUUID": "c12ac485-4025-4df0-8c42-5a94758bbee7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'nour22',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title,\n    req.body.name, req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:52:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "0d6cf978-f1a6-49e2-83d5-ebddb6cf2d66",
                  "parentUUID": "c12ac485-4025-4df0-8c42-5a94758bbee7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "dba1af48-2828-4d0d-87f1-83a1571452ba",
                "0d6cf978-f1a6-49e2-83d5-ebddb6cf2d66"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "fded06ac-fcfb-4fa8-99dc-cfd58a5ef833",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 547,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n     {\n       blogId: '61b51633be867ae625b47fc1',\n     },\n};\nuserFunctions.deleteBlog(req.params.userId, req.body.blogId).then((res)=>{\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:69:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "79987923-0622-4066-92d7-cf776ba09525",
                  "parentUUID": "fded06ac-fcfb-4fa8-99dc-cfd58a5ef833",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "describe('Delete Blog Testing', ()=>{\n  const req={\n    params: {\n      userId: '6196d197a31552477d437404',\n    },\n    body:\n     {\n       blogId: '61b3b9e9ae2911b440a03a35c',\n     },\n  };\n  userFunctions.deleteBlog(req.params.userId, req.body.blogId)\n      .then((res)=>{\n        expect(res).to.be.eq(null);\n        done();\n      }).catch(done);\n});",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:87:37\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "aacf2be4-36d3-4733-825d-226d3d202619",
                  "parentUUID": "fded06ac-fcfb-4fa8-99dc-cfd58a5ef833",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "79987923-0622-4066-92d7-cf776ba09525",
                "aacf2be4-36d3-4733-825d-226d3d202619"
              ],
              "pending": [],
              "skipped": [],
              "duration": 551,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "18316089-8004-40d1-a00d-35aaf0a1adf4",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('nour');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:101:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "70ae4ad8-99d8-4c5f-839c-0b57b4d3fa5d",
                  "parentUUID": "18316089-8004-40d1-a00d-35aaf0a1adf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour123',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:113:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "5eae42c9-16e3-461a-a670-aa49779f2985",
                  "parentUUID": "18316089-8004-40d1-a00d-35aaf0a1adf4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "70ae4ad8-99d8-4c5f-839c-0b57b4d3fa5d",
                "5eae42c9-16e3-461a-a670-aa49779f2985"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "781e285e-1692-414b-af40-07d8574aa74f",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2adc1409-3578-4a11-b29f-59140ec32297",
                  "parentUUID": "781e285e-1692-414b-af40-07d8574aa74f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 343,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f281a621-26a6-4792-b1c8-c8c49859f173",
                  "parentUUID": "781e285e-1692-414b-af40-07d8574aa74f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 220,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "db6787fa-8661-4c50-9805-2c21416c8655",
                  "parentUUID": "781e285e-1692-414b-af40-07d8574aa74f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2adc1409-3578-4a11-b29f-59140ec32297",
                "f281a621-26a6-4792-b1c8-c8c49859f173",
                "db6787fa-8661-4c50-9805-2c21416c8655"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 837,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2ecf9e16-7059-498b-a44e-54634d0169e7",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:182:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "b423dcb4-05a3-40e8-b90c-126e499663e3",
                  "parentUUID": "2ecf9e16-7059-498b-a44e-54634d0169e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:197:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "c0057b64-b025-422b-ae8f-12256d53d88c",
                  "parentUUID": "2ecf9e16-7059-498b-a44e-54634d0169e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b423dcb4-05a3-40e8-b90c-126e499663e3",
                "c0057b64-b025-422b-ae8f-12256d53d88c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "70cec464-5c7e-464c-894a-5fd59b8e954f",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:214:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "f71818ce-6699-4367-bec1-29a185e74ae4",
                  "parentUUID": "70cec464-5c7e-464c-894a-5fd59b8e954f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:229:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "48133cd9-2f2f-4431-b321-df3610134260",
                  "parentUUID": "70cec464-5c7e-464c-894a-5fd59b8e954f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "f71818ce-6699-4367-bec1-29a185e74ae4",
                "48133cd9-2f2f-4431-b321-df3610134260"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d06eb895-eb22-45c3-b11f-ebd5fffcbd8e",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:246:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "6a2b3a06-52dd-4520-a207-4b1ba847745c",
                  "parentUUID": "d06eb895-eb22-45c3-b11f-ebd5fffcbd8e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:261:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "fd9f95da-38fd-4605-b415-cf54cde467be",
                  "parentUUID": "d06eb895-eb22-45c3-b11f-ebd5fffcbd8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6a2b3a06-52dd-4520-a207-4b1ba847745c",
                "fd9f95da-38fd-4605-b415-cf54cde467be"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c53371de-09ee-4ec5-b642-d7d43f75be36",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 180,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:279:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "6154b352-6f5e-46e8-bc17-d8804744a446",
                  "parentUUID": "c53371de-09ee-4ec5-b642-d7d43f75be36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9da032c6-f514-467c-8200-60414674055e",
                  "parentUUID": "c53371de-09ee-4ec5-b642-d7d43f75be36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9da032c6-f514-467c-8200-60414674055e"
              ],
              "failures": [
                "6154b352-6f5e-46e8-bc17-d8804744a446"
              ],
              "pending": [],
              "skipped": [],
              "duration": 414,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "23ca2a90-4f74-4ca2-a92f-31db41909fa4",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 201,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\test.js:313:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "64253b6b-0a6e-4d41-8174-215b8a18dfe6",
                  "parentUUID": "23ca2a90-4f74-4ca2-a92f-31db41909fa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 175,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "788ad506-2c1c-467e-9593-d20fc1a2466c",
                  "parentUUID": "23ca2a90-4f74-4ca2-a92f-31db41909fa4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "788ad506-2c1c-467e-9593-d20fc1a2466c"
              ],
              "failures": [
                "64253b6b-0a6e-4d41-8174-215b8a18dfe6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 376,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "9a5cc023-a193-4221-a3fd-7b21dab338f4",
          "title": "User APIs",
          "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "76778fcb-60ca-45ad-a5ec-f892d1e82b35",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 276,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "95675c3b-a640-4933-ac86-2799659ab815",
                  "parentUUID": "76778fcb-60ca-45ad-a5ec-f892d1e82b35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 238,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "10fdad05-7970-4587-aed1-7e770f685a69",
                  "parentUUID": "76778fcb-60ca-45ad-a5ec-f892d1e82b35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95675c3b-a640-4933-ac86-2799659ab815",
                "10fdad05-7970-4587-aed1-7e770f685a69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 514,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "fdbf01d6-db4b-4c9d-ae80-75f248a2a35e",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 250,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'Gail Marks';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0463c6c0-2241-4b06-89b3-d9bb9bd7bacc",
                  "parentUUID": "fdbf01d6-db4b-4c9d-ae80-75f248a2a35e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 225,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "84039694-92bb-4b5d-99fd-8c1bd1eb7f34",
                  "parentUUID": "fdbf01d6-db4b-4c9d-ae80-75f248a2a35e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0463c6c0-2241-4b06-89b3-d9bb9bd7bacc",
                "84039694-92bb-4b5d-99fd-8c1bd1eb7f34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 475,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "57260713-be1e-474e-b76a-ac8841ecb646",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 244,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "cc805f5a-b7b9-4c7f-a2cd-448e38659530",
                  "parentUUID": "57260713-be1e-474e-b76a-ac8841ecb646",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc805f5a-b7b9-4c7f-a2cd-448e38659530"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 244,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "22e4f855-1c47-4703-a5b9-b2edf8d4af2a",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User APIs Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 2531,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f8d1c46a-3ef1-4c59-b2fb-91eb0acbffcc",
                  "parentUUID": "22e4f855-1c47-4703-a5b9-b2edf8d4af2a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8d1c46a-3ef1-4c59-b2fb-91eb0acbffcc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2531,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "50ab7b17-f708-4f92-983a-9ccb0208e5fd",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "579998de-63ff-4f98-92b0-c1152fd1ee62",
                  "parentUUID": "50ab7b17-f708-4f92-983a-9ccb0208e5fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3d276e15-0f80-4059-82b5-a9e40d20d6e8",
                  "parentUUID": "50ab7b17-f708-4f92-983a-9ccb0208e5fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "579998de-63ff-4f98-92b0-c1152fd1ee62",
                "3d276e15-0f80-4059-82b5-a9e40d20d6e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 36,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9cb724c5-370e-4e0b-ae0d-48a654f014d2",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User APIs Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "37a242cf-6c0e-45a8-84b3-1e787891b120",
                  "parentUUID": "9cb724c5-370e-4e0b-ae0d-48a654f014d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37a242cf-6c0e-45a8-84b3-1e787891b120"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1c924cde-a5be-44e4-9e1e-8bf087ec1b94",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User APIs Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 861,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst name = 'Game-2023';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e3b2244b-3a5e-407c-a5d1-b63d8bdc584e",
                  "parentUUID": "1c924cde-a5be-44e4-9e1e-8bf087ec1b94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3b2244b-3a5e-407c-a5d1-b63d8bdc584e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 861,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e8ac0826-82ac-4f06-99e5-bcbe4fff9ab8",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\CMP\\Documents\\GitHub\\Backend_Tumblr-4u-develop\\Backend_Tumblr-4u-develop\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User APIs Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 2792,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6c60b489-dde9-4c63-aa4b-14bc1ad84c48",
                  "parentUUID": "e8ac0826-82ac-4f06-99e5-bcbe4fff9ab8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c60b489-dde9-4c63-aa4b-14bc1ad84c48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2792,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}