{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-11T15:22:24.751Z",
    "end": "2021-12-11T15:22:30.550Z",
    "duration": 5799,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9ae81f9b-e08b-47ea-bfbc-16f6479c5ccc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da690960-5e66-458c-a1cf-121a1229019f",
          "title": "Search APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "193dba98-b000-4c47-b7d5-1fe51c175999",
              "title": "Search Dashboard Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 3883,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'dep'};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  expect(res.resultHashTag[0]).to.be.equal('deposit');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9b4c79fe-2a1d-48d4-b0c4-5b661c751108",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 465,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'DEP'};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  expect(res.resultHashTag[0]).to.be.equal('deposit');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1291badc-c0b0-45cb-9b02-bf172b963c83",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 474,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'dep'};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  post=[\n    {\n      _id: '6199531b94c23324c69ea65d',\n      blogId: 'Metal',\n      postHtml: '</>',\n      type: 'text',\n      state: 'published',\n      tags: ['deposit', 'hacking', 'morph'],\n      __v: 0,\n    },\n  ];\n  expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d88d6df5-745b-4ca6-9989-14deedc96c81",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 461,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'hazel'};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  expect(res.resultBlogs[0].name).to.be.equal('Mr. Hazel Schamberger');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1e14b809-99d6-4078-a90c-17ddd3f67c3b",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 458,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'mat'};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  expect(res.resultFollowedTag[0].followedTags[0]).to.be.equal('matrix');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "911ee7a8-5bb9-4cce-80bb-c7b1a9777f3e",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get nothing when nothing is entered",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get nothing when nothing is entered",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: ''};\nsearch.autoCompleteSearchDash(wordName.wordName).then((res)=>{\n  console.log('res, nothing: ', res);\n  expect(res).to.be.empty;\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "21544f48-2ad3-4081-ad8d-7c79d20db56e",
                  "parentUUID": "193dba98-b000-4c47-b7d5-1fe51c175999",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b4c79fe-2a1d-48d4-b0c4-5b661c751108",
                "1291badc-c0b0-45cb-9b02-bf172b963c83",
                "d88d6df5-745b-4ca6-9989-14deedc96c81",
                "1e14b809-99d6-4078-a90c-17ddd3f67c3b",
                "911ee7a8-5bb9-4cce-80bb-c7b1a9777f3e",
                "21544f48-2ad3-4081-ad8d-7c79d20db56e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5745,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}