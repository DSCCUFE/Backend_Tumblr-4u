{
  "stats": {
    "suites": 31,
    "tests": 44,
    "passes": 44,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-11T21:37:06.723Z",
    "end": "2021-12-11T21:37:46.393Z",
    "duration": 39670,
    "testsRegistered": 44,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3a5a2f20-469f-41b2-a375-fb8fa2d3e3c5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce848f95-f39d-44ec-b3e0-a8ff75233d55",
          "title": "Post APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e93906aa-120e-421a-9aac-946cbb61da2c",
              "title": "Function createPost",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 6496,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: 'tumblr',\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "dd231a9c-d997-444d-ba3d-4cab7efb8eee",
                  "parentUUID": "e93906aa-120e-421a-9aac-946cbb61da2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd231a9c-d997-444d-ba3d-4cab7efb8eee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6496,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f5212be8-65cb-4e88-b7bb-ec5f6e052b53",
              "title": "Function showPost",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.showPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "79ef790d-183b-4fdb-b025-8aa01a359fe8",
                  "parentUUID": "f5212be8-65cb-4e88-b7bb-ec5f6e052b53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79ef790d-183b-4fdb-b025-8aa01a359fe8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 188,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "81b68237-c477-4acf-ad46-6ce823b16f43",
              "title": "Function makeComment",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 723,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "deb24db0-05eb-43a8-bd49-dccb225c0d56",
                  "parentUUID": "81b68237-c477-4acf-ad46-6ce823b16f43",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "deb24db0-05eb-43a8-bd49-dccb225c0d56"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 723,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cebe5964-4843-4059-b3c8-3dcaa1171f3b",
              "title": "Function removeComment",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    commentId: '61b50d9837c346ee39708965',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "38fe6174-2a76-42ce-9fb5-6df82d8a5ecb",
                  "parentUUID": "cebe5964-4843-4059-b3c8-3dcaa1171f3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38fe6174-2a76-42ce-9fb5-6df82d8a5ecb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 332,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ce176434-5157-40e6-8b82-70c9eb379ac9",
              "title": "Function reblogPost",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 752,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('array');\n      expect(ret[0]).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "519350cb-0357-4e0c-b914-616fb289a971",
                  "parentUUID": "ce176434-5157-40e6-8b82-70c9eb379ac9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "519350cb-0357-4e0c-b914-616fb289a971"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 752,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9a593602-e944-4b1e-8ee4-0479e8a8e642",
              "title": "Function removeReblog",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 337,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n    reblogId: '61b51524807f8f7c61e5c14b',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "5c8f182b-8f6b-4eb9-b315-9ce4aeb210c3",
                  "parentUUID": "9a593602-e944-4b1e-8ee4-0479e8a8e642",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c8f182b-8f6b-4eb9-b315-9ce4aeb210c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e92c317e-0ebd-4c40-a933-3e253f0add4a",
              "title": "Function loopAndCheck",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const arr = [0, 1, 2];\nconst element = 1;\n// expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostFunctions.loopAndCheck(arr, element).should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "f03166d0-3833-42e4-8de8-b2c54d508eab",
                  "parentUUID": "e92c317e-0ebd-4c40-a933-3e253f0add4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f03166d0-3833-42e4-8de8-b2c54d508eab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5e7ac1ed-af82-4a24-985d-fbb2d9182070",
              "title": "Function loopObjAndCheck",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {text: 'a', _id: a},\n  {text: 'shd', _id: b},\n  {text: 'akj', _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "654db818-1bbb-4f58-ba03-5869818365b2",
                  "parentUUID": "5e7ac1ed-af82-4a24-985d-fbb2d9182070",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "654db818-1bbb-4f58-ba03-5869818365b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9244a701-8830-472c-be75-06f8c90154d5",
              "title": "Function likePress",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 480,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '619957113df6b45019c42d06',\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1b4bc5b2-bddf-496b-8031-de986b107681",
                  "parentUUID": "9244a701-8830-472c-be75-06f8c90154d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b4bc5b2-bddf-496b-8031-de986b107681"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 480,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a8a179b4-0e63-4e95-9cf6-e00dce415b77",
              "title": "Function getNotes",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 333,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ae667d8b4d5620ce937992',\n  },\n};\npostFunctions.getNotes(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "15020807-0aa5-453e-a039-3b01228f2d06",
                  "parentUUID": "a8a179b4-0e63-4e95-9cf6-e00dce415b77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15020807-0aa5-453e-a039-3b01228f2d06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 333,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "26721581-839f-452b-bcf4-1b974e104d94",
              "title": "Function getDashboard",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 4180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    userId: '6196d197a31552477d437404',\n    blogId: '619957113df6b45019c42d06',\n  },\n};\npostFunctions.getDashboard(req.params.userId, req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('array');\n  expect(ret[0]).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e17aaff3-c76b-4c1d-8aa2-a7b312ac1c05",
                  "parentUUID": "26721581-839f-452b-bcf4-1b974e104d94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e17aaff3-c76b-4c1d-8aa2-a7b312ac1c05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4180,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "e338bc12-57f1-4876-a3f5-6e30d65f033b",
          "title": "Search APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
              "title": "Search Dashboard Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 319,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "5223bf21-a171-42af-855b-a3a3cc3c8bf3",
                  "parentUUID": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 313,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'DEP',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('deposit');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "b9150fff-13a6-421f-a9dc-e53f3b65bcd6",
                  "parentUUID": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'dep',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          _id: '6199531b94c23324c69ea65d',\n          blogId: 'Metal',\n          postHtml: '</>',\n          type: 'text',\n          state: 'published',\n          tags: ['deposit', 'hacking', 'morph'],\n          __v: 0,\n        },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "f631f885-0985-4c16-b26a-60a263068594",
                  "parentUUID": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '6196d197a31552477d437404',\n  wordName: 'hazel',\n};\nsearch.autoCompleteSearchDash(wordName.userId, wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('Mr. Hazel Schamberger');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "423cfc52-29f5-45c0-a3c4-c5bf1911508a",
                  "parentUUID": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userId: '61b4df38206b4252a939a0bc',\n};\nsearch.autoCompleteSearchDash(wordName.userId)\n    .then((res)=>{\n      console.log(res);\n      expect(res.resultFollowedTag[0]).to.be.equal('matrix');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "c40cbc01-a61b-4e82-bad6-f5c2f12b6503",
                  "parentUUID": "625f8133-bb68-400a-8bf7-a1a58d3dc24a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5223bf21-a171-42af-855b-a3a3cc3c8bf3",
                "b9150fff-13a6-421f-a9dc-e53f3b65bcd6",
                "f631f885-0985-4c16-b26a-60a263068594",
                "423cfc52-29f5-45c0-a3c4-c5bf1911508a",
                "c40cbc01-a61b-4e82-bad6-f5c2f12b6503"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1417,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "9fe3f733-2ed0-4d64-88e6-554d86a46e09",
          "title": "UserBlog Methodes testing",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "39a02c6d-304f-48e9-8acd-8eef9fb5131a",
              "title": "Create Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 509,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'reema2',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title, req.body.name,\n    req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( req.body.name);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2f7fd05e-1768-4cc4-aa16-dab889f55edc",
                  "parentUUID": "39a02c6d-304f-48e9-8acd-8eef9fb5131a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n   {\n     title: 'Engineering',\n     name: 'nour22',\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(req.params.userId, req.body.title,\n    req.body.name, req.body.privacy, 'password').then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "81653976-fd3e-4685-b3fa-1917f0c3ffa9",
                  "parentUUID": "39a02c6d-304f-48e9-8acd-8eef9fb5131a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f7fd05e-1768-4cc4-aa16-dab889f55edc",
                "81653976-fd3e-4685-b3fa-1917f0c3ffa9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 674,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "633b55ce-51ec-44ec-99b9-b4e6d422f9e2",
              "title": "Delete Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 16974,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body:\n     {\n       blogId: '61b51633be867ae625b47fc1',\n     },\n};\nuserFunctions.deleteBlog(req.params.userId, req.body.blogId).then((res)=>{\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "56717d3a-a9bb-43af-aaaf-ea215ffbb771",
                  "parentUUID": "633b55ce-51ec-44ec-99b9-b4e6d422f9e2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "describe('Delete Blog Testing', ()=>{\n  const req={\n    params: {\n      userId: '6196d197a31552477d437404',\n    },\n    body:\n     {\n       blogId: '61b3b9e9ae2911b440a03a35c',\n     },\n  };\n  userFunctions.deleteBlog(req.params.userId, req.body.blogId)\n      .then((res)=>{\n        expect(res).to.be.eq(null);\n        done();\n      }).catch(done);\n});",
                  "err": {},
                  "uuid": "77cedc41-6ea5-4305-ae18-932eebcc1466",
                  "parentUUID": "633b55ce-51ec-44ec-99b9-b4e6d422f9e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56717d3a-a9bb-43af-aaaf-ea215ffbb771",
                "77cedc41-6ea5-4305-ae18-932eebcc1466"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16979,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8d2241f5-a7dc-4c5b-a495-eb04ee6d54d0",
              "title": "Retrieve Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('nour');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "78a15cec-89ae-4167-97bc-0055a9866d23",
                  "parentUUID": "8d2241f5-a7dc-4c5b-a495-eb04ee6d54d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogName: 'nour123',\n  },\n};\nblogFunctions.retrieveBlog(req.params.blogName).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ca396327-b326-4c96-9dee-62075518c79f",
                  "parentUUID": "8d2241f5-a7dc-4c5b-a495-eb04ee6d54d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78a15cec-89ae-4167-97bc-0055a9866d23",
                "ca396327-b326-4c96-9dee-62075518c79f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 313,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d08d7b3d-0085-40ed-9f61-3f8b257c2d50",
              "title": "Edit Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "64cf2525-f686-4b6a-b057-f7b87e60ace1",
                  "parentUUID": "d08d7b3d-0085-40ed-9f61-3f8b257c2d50",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40beeb82b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3a576e94-4900-4742-915c-26ed3566c312",
                  "parentUUID": "d08d7b3d-0085-40ed-9f61-3f8b257c2d50",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 228,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9a09f95e-3bff-4590-ac79-c85d6ae2cd6c",
                  "parentUUID": "d08d7b3d-0085-40ed-9f61-3f8b257c2d50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64cf2525-f686-4b6a-b057-f7b87e60ace1",
                "3a576e94-4900-4742-915c-26ed3566c312",
                "9a09f95e-3bff-4590-ac79-c85d6ae2cd6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 713,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "92b82610-3d00-42b8-948b-e8dc5b925ffb",
              "title": "Follow Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 347,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c7036a62-56ca-4aec-a36c-541ad33534b8",
                  "parentUUID": "92b82610-3d00-42b8-948b-e8dc5b925ffb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.followBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9b4d812f-46ba-4319-b6a8-41fad6475c1a",
                  "parentUUID": "92b82610-3d00-42b8-948b-e8dc5b925ffb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7036a62-56ca-4aec-a36c-541ad33534b8",
                "9b4d812f-46ba-4319-b6a8-41fad6475c1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 656,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4bbb9b0b-fcba-474c-88bc-cc4f365784dd",
              "title": "Follow Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2833eaa6-a44a-4b83-93aa-0626619f66ae",
                  "parentUUID": "4bbb9b0b-fcba-474c-88bc-cc4f365784dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 315,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "72464f24-03fc-4570-8eca-7eb918202889",
                  "parentUUID": "4bbb9b0b-fcba-474c-88bc-cc4f365784dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2833eaa6-a44a-4b83-93aa-0626619f66ae",
                "72464f24-03fc-4570-8eca-7eb918202889"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 626,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "7f429baf-6984-490b-938c-e7dac5b2c4a7",
              "title": "Unfollow Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957113df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3d9fb87b-62d3-4955-9ccd-6358438ae989",
                  "parentUUID": "7f429baf-6984-490b-938c-e7dac5b2c4a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    userId: '6196d197a31552477d437404',\n  },\n  body: {\n    blogId: '619957913df6b45019c42d06',\n  },\n};\nuserFunctions.unfollowBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "bd9bccf1-03de-4c4b-a587-7eb359a4ae25",
                  "parentUUID": "7f429baf-6984-490b-938c-e7dac5b2c4a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d9fb87b-62d3-4955-9ccd-6358438ae989",
                "bd9bccf1-03de-4c4b-a587-7eb359a4ae25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 618,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "995d0e58-d67f-4736-bbfe-9c8ac4aa129c",
              "title": "Block Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 313,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "54a8510c-ec77-43b7-af0f-5474a4448935",
                  "parentUUID": "995d0e58-d67f-4736-bbfe-9c8ac4aa129c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    blockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.blockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "30cda76f-8c61-48f0-80da-ac9b33d75631",
                  "parentUUID": "995d0e58-d67f-4736-bbfe-9c8ac4aa129c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54a8510c-ec77-43b7-af0f-5474a4448935",
                "30cda76f-8c61-48f0-80da-ac9b33d75631"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 475,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f24dbed0-165c-45b8-bfad-364770a9da10",
              "title": "Unblock Blog Testing",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619957113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e677b6a2-62f3-4ec3-add5-ff60965f13b6",
                  "parentUUID": "f24dbed0-165c-45b8-bfad-364770a9da10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 169,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req={\n  params: {\n    blogId: '61b3724efad9ac6d6c719f58',\n  },\n  body: {\n    unblockedBlogId: '619938113df6b45019c42d06',\n  },\n};\nblogFunctions.unblockBlog(req).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6d072c27-e158-4b23-bec8-c3dbe8459d2c",
                  "parentUUID": "f24dbed0-165c-45b8-bfad-364770a9da10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e677b6a2-62f3-4ec3-add5-ff60965f13b6",
                "6d072c27-e158-4b23-bec8-c3dbe8459d2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "b742aef6-460a-414e-ac0b-d1f3b0ff3138",
          "title": "User APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c9e8badc-e212-44ad-bd8c-c62b40aaec9f",
              "title": "Check Mail Function",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Ayman@gmail.com';\nuserServices.checkMail(email).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5af027a4-fd89-418c-84e2-b1266256e204",
                  "parentUUID": "c9e8badc-e212-44ad-bd8c-c62b40aaec9f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7840bc25-6533-4d84-9501-35b8267b3122",
                  "parentUUID": "c9e8badc-e212-44ad-bd8c-c62b40aaec9f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5af027a4-fd89-418c-84e2-b1266256e204",
                "7840bc25-6533-4d84-9501-35b8267b3122"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 310,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "01e9f9d4-76dc-4112-b448-30b5b6d95123",
              "title": "Check blogName Function",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'Gail Marks';\nuserServices.checkBlogName(blogName).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "866b924f-d247-474e-b00d-29e99f35125f",
                  "parentUUID": "01e9f9d4-76dc-4112-b448-30b5b6d95123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'CMP2023';\nuserServices.checkBlogName(blogName).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f9061e19-d909-4bbc-86a2-0106f9348603",
                  "parentUUID": "01e9f9d4-76dc-4112-b448-30b5b6d95123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "866b924f-d247-474e-b00d-29e99f35125f",
                "f9061e19-d909-4bbc-86a2-0106f9348603"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 326,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3afe8cb9-a975-4556-a6a8-f63abca58473",
              "title": "Create User Function",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User APIs Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result)=>{\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8b3c567f-2980-4f68-9f7b-e864c1bcf328",
                  "parentUUID": "3afe8cb9-a975-4556-a6a8-f63abca58473",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b3c567f-2980-4f68-9f7b-e864c1bcf328"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 164,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e885341c-18e2-4594-ae5b-3f73a351e342",
              "title": "Send Verification Mail To User",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User APIs Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1560,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token ='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result)=>{\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9336b14c-1a47-45ac-8410-14f2b9f8951b",
                  "parentUUID": "e885341c-18e2-4594-ae5b-3f73a351e342",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9336b14c-1a47-45ac-8410-14f2b9f8951b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1560,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "db4fb554-e6db-49d9-9e9d-a1625eae19c3",
              "title": "Checks Input Password",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User APIs Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n'$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result)=>{\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "758e9ad3-5892-487e-8877-e7a4528df632",
                  "parentUUID": "db4fb554-e6db-49d9-9e9d-a1625eae19c3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User APIs Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n'$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result)=>{\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "09ce2340-608f-4784-a828-155294dabfae",
                  "parentUUID": "db4fb554-e6db-49d9-9e9d-a1625eae19c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "758e9ad3-5892-487e-8877-e7a4528df632",
                "09ce2340-608f-4784-a828-155294dabfae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 97,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a15a5d57-d5aa-4e5e-b0b7-7e5c975e870b",
              "title": "Create User Google Function",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\phase3\\main\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User APIs Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 161,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result)=>{\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ff35d2c3-759d-45c4-ab7d-dd50ff4432f1",
                  "parentUUID": "a15a5d57-d5aa-4e5e-b0b7-7e5c975e870b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff35d2c3-759d-45c4-ab7d-dd50ff4432f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}