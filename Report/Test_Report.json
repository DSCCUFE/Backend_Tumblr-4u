{
  "stats": {
    "suites": 49,
    "tests": 71,
    "passes": 59,
    "pending": 0,
    "failures": 12,
    "start": "2022-01-01T20:25:23.559Z",
    "end": "2022-01-01T20:27:28.462Z",
    "duration": 124903,
    "testsRegistered": 71,
    "passPercent": 83.09859154929578,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "67e2d88f-b219-48f1-9ded-e4ef31547f92",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f89cc51f-4974-4c00-9006-1aba91bde0c2",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1c0d1f65-33bb-4c61-8d6b-1a9bf84b7f63",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 5524,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0be30fed-1a87-41d2-a63b-793c0b941d71",
                  "parentUUID": "1c0d1f65-33bb-4c61-8d6b-1a9bf84b7f63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0be30fed-1a87-41d2-a63b-793c0b941d71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5524,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "09aabe0b-ec00-465c-8ac5-b26b88c784a3",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  url: '',\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.showPost(req.url,req.params.postId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "26420399-a438-4d34-98fa-ef28edc1ea99",
                  "parentUUID": "09aabe0b-ec00-465c-8ac5-b26b88c784a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26420399-a438-4d34-98fa-ef28edc1ea99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5d05354f-3a4b-4a81-81ef-059f9b5e333c",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 591,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "20ff7827-ee75-4da5-bf73-d907031511c1",
                  "parentUUID": "5d05354f-3a4b-4a81-81ef-059f9b5e333c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20ff7827-ee75-4da5-bf73-d907031511c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 591,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0e5a0532-6a30-4cfa-842c-8dec64215a61",
              "title": "Function removeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 330,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    commentId: '61d098b4c92d5ab7b4455652',\n  },\n};\npostFunctions.removeComment(req.params.postId, req.params.commentId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Comment Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'",
                    "estack": "AssertionError: expected 'Comment Not Found' to equal 'Comment Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:100:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Comment Not Found\n+ Comment Removed Successfully\n"
                  },
                  "uuid": "abfa2166-fd2a-444e-9d08-58669624480e",
                  "parentUUID": "0e5a0532-6a30-4cfa-842c-8dec64215a61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "abfa2166-fd2a-444e-9d08-58669624480e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 330,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "16394530-0b95-4f37-8f9a-b0dcbf3552b6",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 619,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "aaf32dd7-3064-4305-93f4-cdf063d4285c",
                  "parentUUID": "16394530-0b95-4f37-8f9a-b0dcbf3552b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaf32dd7-3064-4305-93f4-cdf063d4285c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 619,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "10430a8e-2374-4ba2-979d-3633032d38b3",
              "title": "Function removeReblog",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 337,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n    reblogId: '61d092fae53277ba394a109c',\n  },\n};\npostFunctions.removeReblog(req.params.postId, req.params.reblogId)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Reblog Removed Successfully');\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'",
                    "estack": "AssertionError: expected 'Reblog Not Found' to equal 'Reblog Removed Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:139:31\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Reblog Not Found\n+ Reblog Removed Successfully\n"
                  },
                  "uuid": "b39dac29-69f3-45ba-9aad-8f0eda0ade2b",
                  "parentUUID": "10430a8e-2374-4ba2-979d-3633032d38b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b39dac29-69f3-45ba-9aad-8f0eda0ade2b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "51b74683-8e09-49ac-8343-90deba7fe687",
              "title": "Function loopLikeAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopLikeAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = '61af36a793d7c3194ff42269';\nconst b = '61ae881aab9ea73f2282b03e';\nconst c = '61ae887d2676ed5d9b5d532f';\nconst arr = [\n  {isDeleted: false, blogId: a},\n  {isDeleted: false, blogId: b},\n  {isDeleted: false, blogId: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopLikeAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopLikeAndCheck(arr, element)[1].should.be.eq(0);\npostFunctions.loopLikeAndCheck(arr, element)[2].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "099603c2-9b6d-4668-a848-682d18b449be",
                  "parentUUID": "51b74683-8e09-49ac-8343-90deba7fe687",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "099603c2-9b6d-4668-a848-682d18b449be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d23cee87-8e77-4052-b508-1d181135e8c6",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {isDeleted: false, _id: a},\n  {isDeleted: false, _id: b},\n  {isDeleted: false, _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "d5967582-c701-4bd6-8fd0-5a51edcec9df",
                  "parentUUID": "d23cee87-8e77-4052-b508-1d181135e8c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5967582-c701-4bd6-8fd0-5a51edcec9df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d910e178-e93c-4e6b-9395-565e0da010b2",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 1651,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a0fe4be6-3b76-407b-a31c-1beeb02b290c",
                  "parentUUID": "d910e178-e93c-4e6b-9395-565e0da010b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0fe4be6-3b76-407b-a31c-1beeb02b290c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1651,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8119c9c7-4af8-42f5-8bfa-361f56c7dc39",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 168,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    notesId: '61ca5d92a8a4556c5b24f1f9',\n  },\n};\npostFunctions.getNotes(req.params.notesId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3430024d-7c97-4415-8d60-d41ae1bdb821",
                  "parentUUID": "8119c9c7-4af8-42f5-8bfa-361f56c7dc39",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3430024d-7c97-4415-8d60-d41ae1bdb821"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 168,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6a2df02e-39a3-4ee4-a9f9-f69ef4bd7340",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 39123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  decoded: {\n    email: 'ahmed.ayman.1420@gmail.com'\n  },\n};\npostFunctions.getDashboard(req.decoded.email).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "21458fa7-5dfb-462f-8f41-aaabbdfd7b7b",
                  "parentUUID": "6a2df02e-39a3-4ee4-a9f9-f69ef4bd7340",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21458fa7-5dfb-462f-8f41-aaabbdfd7b7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39123,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "7d2ac1fb-0fa6-4a06-bca3-3d991d193164",
              "title": "Function editPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Edit a Post Post",
                  "fullTitle": "Post APIs Function editPost It Should Edit a Post Post",
                  "timedOut": false,
                  "duration": 516,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n  body: {\n    postHtml: '</>',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.editPost(req.params.postId, req.body.postHtml, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Edited Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5af903f4-b6a0-4498-a976-9e644431a434",
                  "parentUUID": "7d2ac1fb-0fa6-4a06-bca3-3d991d193164",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5af903f4-b6a0-4498-a976-9e644431a434"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 516,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c2930165-01e4-4ed5-9078-a55327e84da2",
              "title": "Function reportPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Report a Post",
                  "fullTitle": "Post APIs Function reportPost It Should Report a Post",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n};\npostFunctions.reportPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Reported Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b3386c63-e516-408e-b144-c6b8d9ae7124",
                  "parentUUID": "c2930165-01e4-4ed5-9078-a55327e84da2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3386c63-e516-408e-b144-c6b8d9ae7124"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9c959862-4d67-4b9c-a672-02e2958b040c",
              "title": "Function deletePost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Delete a Post",
                  "fullTitle": "Post APIs Function deletePost It Should Delete a Post",
                  "timedOut": false,
                  "duration": 167,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61ce04ea704243e325d035cb',\n  },\n};\npostFunctions.deletePost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Deleted Successfully');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected 'Post Not Found' to equal 'Post Deleted Successfully'",
                    "estack": "AssertionError: expected 'Post Not Found' to equal 'Post Deleted Successfully'\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js:275:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": "- Post Not Found\n+ Post Deleted Successfully\n"
                  },
                  "uuid": "6a095d87-727f-4bf5-8627-3fff028d9d7b",
                  "parentUUID": "9c959862-4d67-4b9c-a672-02e2958b040c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6a095d87-727f-4bf5-8627-3fff028d9d7b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 167,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "51e42961-f68c-4eac-8086-bf121014f800",
              "title": "Function getBlogPosts",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Blog Posts",
                  "fullTitle": "Post APIs Function getBlogPosts It Should Blog Posts",
                  "timedOut": false,
                  "duration": 12983,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getBlogPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Blog Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "104290d0-eb3c-4147-96f5-8bcba4135ab0",
                  "parentUUID": "51e42961-f68c-4eac-8086-bf121014f800",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "104290d0-eb3c-4147-96f5-8bcba4135ab0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12983,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "474bf16a-af65-4d75-ac08-54af4f4e7b4d",
              "title": "Function getLikedPosts",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Liked Posts",
                  "fullTitle": "Post APIs Function getLikedPosts It Should Get Liked Posts",
                  "timedOut": false,
                  "duration": 1840,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getLikedPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Liked Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6f709a93-f7ad-4bc2-b3cd-81c308284130",
                  "parentUUID": "474bf16a-af65-4d75-ac08-54af4f4e7b4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f709a93-f7ad-4bc2-b3cd-81c308284130"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1840,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1d168fd2-8365-4274-ac31-18a614150c81",
              "title": "Function activityFeed",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Activity Feed",
                  "fullTitle": "Post APIs Function activityFeed It Should Get Activity Feed",
                  "timedOut": false,
                  "duration": 31705,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.activityFeed(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Activity Feed Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c6528733-17af-4770-b4c8-bba71466218f",
                  "parentUUID": "1d168fd2-8365-4274-ac31-18a614150c81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6528733-17af-4770-b4c8-bba71466218f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31705,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4a705fff-5054-4df7-a9d9-551b0a478440",
              "title": "Upload media APIs",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests uploading image on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading image on server, gets url",
                  "timedOut": false,
                  "duration": 37,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'image2022-1-1T03-59-05.770Z.jpg';\n    \npostFunctions.uploadAny(blobName, 'image/jpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "fad98309-5f26-4d30-9607-98ab36d01acf",
                  "parentUUID": "4a705fff-5054-4df7-a9d9-551b0a478440",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading video on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading video on server, gets url",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'video2022-01-01T15-23-27.384Z.mp4';\n    \npostFunctions.uploadAny(blobName, 'video/mp4')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "ea9e6f0a-4bd7-48d6-ae21-7ac470e70604",
                  "parentUUID": "4a705fff-5054-4df7-a9d9-551b0a478440",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading audio on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading audio on server, gets url",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n    \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "6050e432-ee31-48f1-87f2-a982e9111c40",
                  "parentUUID": "4a705fff-5054-4df7-a9d9-551b0a478440",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fad98309-5f26-4d30-9607-98ab36d01acf",
                "ea9e6f0a-4bd7-48d6-ae21-7ac470e70604",
                "6050e432-ee31-48f1-87f2-a982e9111c40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "beefb6d6-f636-4555-8f7c-e4d0ac484cbf",
              "title": "Random posts APIs",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests radar posts",
                  "fullTitle": "Post APIs Random posts APIs It tests radar posts",
                  "timedOut": false,
                  "duration": 2447,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "postFunctions.retrieveRandomPosts()\n        .then((res)=>{\n          expect(res.length).to.be.equal(10);\n          done();\n        }).catch(done);",
                  "err": {},
                  "uuid": "c4749ffc-b30d-4307-95ed-80d677861924",
                  "parentUUID": "beefb6d6-f636-4555-8f7c-e4d0ac484cbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests trending posts",
                  "fullTitle": "Post APIs Random posts APIs It tests trending posts",
                  "timedOut": false,
                  "duration": 3296,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "post=[\n  {\n    \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n    \"blogId\": '61c9d6b82569f9abb33ebe04',\n    \"postHtml\": '<img width=\"100%\" src=\"https://tumblrstorage.blob.core.windows.net/imagess/image2022-1-1T03-59-05.770Z.jpg]\" alt=\"\">',\n    \"type\": 'text',\n    \"state\": 'published',\n    \"tags\": [ 'edit', 'cmp', 'Trending' ],\n    \"notesId\": '61ca5d91a8a4556c5b24f1f3',\n    \"isDeleted\": false,\n    \"isReported\": false,\n    \"postUrl\": '/61ca5d91a8a4556c5b24f1f4/show_post',\n    \"__v\": 1\n  }\n]\npostFunctions.retrieveTrendingPosts()\n    .then((res)=>{\n      expect(res.trendingPostsLim[0].notesId).to.be.equal(post[0].notesId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "9ad179f2-c6f7-48f9-9945-981dd9fb7f78",
                  "parentUUID": "beefb6d6-f636-4555-8f7c-e4d0ac484cbf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4749ffc-b30d-4307-95ed-80d677861924",
                "9ad179f2-c6f7-48f9-9945-981dd9fb7f78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5743,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "6f741fa8-a57c-4389-88a7-af7ffb62d96d",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 663,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "53658161-08bb-4beb-9747-dc50a35546f6",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 488,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CM',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "45cfba6f-c7eb-4119-a51a-c3c234d5d6f6",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 333,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "833f1287-6576-48a9-921b-66444057a16c",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 363,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CMP',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('CMP-2023');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "92cfc7b5-4655-494b-a75f-da947364722e",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a user",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a user",
                  "timedOut": false,
                  "duration": 1590,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[2]).to.be.equal('Writing');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "5d16780d-853b-460d-ae4b-23b46d9e8f81",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get interests when no word is entered",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get interests when no word is entered",
                  "timedOut": false,
                  "duration": 1324,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[3]).to.be.equal('Sports');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "bb292092-b934-48c5-9525-33ec2df9425d",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has interested hashtags",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has interested hashtags",
                  "timedOut": false,
                  "duration": 1407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      // console.log('res.resultPostHashTag[0].blogId: ', res);\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "de3c8a03-e0fa-4d31-90b8-909ddf961713",
                  "parentUUID": "40ade1b7-e36d-4744-ade4-6b691d4c6d5b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53658161-08bb-4beb-9747-dc50a35546f6",
                "45cfba6f-c7eb-4119-a51a-c3c234d5d6f6",
                "833f1287-6576-48a9-921b-66444057a16c",
                "92cfc7b5-4655-494b-a75f-da947364722e",
                "5d16780d-853b-460d-ae4b-23b46d9e8f81",
                "bb292092-b934-48c5-9525-33ec2df9425d",
                "de3c8a03-e0fa-4d31-90b8-909ddf961713"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6168,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "9f61ff80-f375-49a5-bbee-2f867d9f282d",
          "title": "UserBlog Methodes Testing",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It gets checkout these blogs",
              "fullTitle": "UserBlog Methodes Testing It gets checkout these blogs",
              "timedOut": false,
              "duration": 3556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blogFunctions.retrieveRandomBlogs()\n    .then((res)=>{\n    expect(res.length).to.be.equal(10);\n    done();\n    }).catch(done);",
              "err": {},
              "uuid": "4915ed45-af05-47e6-9159-c6fbf531746d",
              "parentUUID": "9f61ff80-f375-49a5-bbee-2f867d9f282d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "129afaca-7679-4f1d-9db7-9d5117df3eb1",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new blog",
                  "fullTitle": "UserBlog Methodes Testing Create Blog Testing should create a new blog",
                  "timedOut": false,
                  "duration": 180,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n decoded: {\n    email:email,\n  },\n  body:\n   {\n     title: 'Engineering',\n     name:blogName ,\n     privacy: false,\n   },\n};\nuserFunctions.createBlog(func_params).then((res)=>{\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq( blogName);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js:44:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "e8c96e81-af6f-48fd-8e7d-9b922c55d39a",
                  "parentUUID": "129afaca-7679-4f1d-9db7-9d5117df3eb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes Testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email: email,\n   },\n   body:\n    {\n      title: 'Engineering',\n      name:blogName,\n      privacy: false,\n    },\n };\nuserFunctions.createBlog(func_params).then((res)=>{\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3de74815-7bf2-4490-8206-0a7e918483ce",
                  "parentUUID": "129afaca-7679-4f1d-9db7-9d5117df3eb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de74815-7bf2-4490-8206-0a7e918483ce"
              ],
              "failures": [
                "e8c96e81-af6f-48fd-8e7d-9b922c55d39a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 353,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e915da42-2594-4cf0-a55b-5630bb1cbe4d",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 156,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61c9e680b47e807b87e3dbe9').then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq('Diana');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "81ac6d38-4163-465c-818a-7faa294810a5",
                  "parentUUID": "e915da42-2594-4cf0-a55b-5630bb1cbe4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61b33c94c4bab40beeb82b6f').then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8902e21d-b354-4e03-bf4b-d70599937a0d",
                  "parentUUID": "e915da42-2594-4cf0-a55b-5630bb1cbe4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81ac6d38-4163-465c-818a-7faa294810a5",
                "8902e21d-b354-4e03-bf4b-d70599937a0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 314,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d0e2eac6-e1d1-4326-a124-1604010d62d2",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq( 'noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "4fb9fa1b-b0ce-4007-9522-578a27310b65",
                  "parentUUID": "d0e2eac6-e1d1-4326-a124-1604010d62d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 330,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    name: blogName,\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "750f06e2-4f87-4f72-9299-297bb198de05",
                  "parentUUID": "d0e2eac6-e1d1-4326-a124-1604010d62d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3f5d09d6-3553-4145-9f62-8a425bd2387d",
                  "parentUUID": "d0e2eac6-e1d1-4326-a124-1604010d62d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fb9fa1b-b0ce-4007-9522-578a27310b65",
                "750f06e2-4f87-4f72-9299-297bb198de05",
                "3f5d09d6-3553-4145-9f62-8a425bd2387d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 653,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2b67d733-4691-4910-aae0-12316917539d",
              "title": "Follow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the followed blog",
                  "fullTitle": "UserBlog Methodes Testing Follow Blog Testing should return object of the followed blog",
                  "timedOut": false,
                  "duration": 321,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc09'\n    },\n };\nuserFunctions.followBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an object",
                    "estack": "AssertionError: expected undefined to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js:147:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "91269f5a-8423-42b0-9700-f2c97538f5b2",
                  "parentUUID": "2b67d733-4691-4910-aae0-12316917539d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Follow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 323,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc00'\n    },\n };\nuserFunctions.followBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal null",
                    "estack": "AssertionError: expected undefined to equal null\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js:162:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "e7b4625c-6e30-4dde-9de3-a86fae9eb4c3",
                  "parentUUID": "2b67d733-4691-4910-aae0-12316917539d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "91269f5a-8423-42b0-9700-f2c97538f5b2",
                "e7b4625c-6e30-4dde-9de3-a86fae9eb4c3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 644,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "22e54105-5313-4d09-8933-7a5a45134848",
              "title": "Does Follow Testing Part 1",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the user if he/she follows this blog",
                  "fullTitle": "UserBlog Methodes Testing Does Follow Testing Part 1 should return object of the user if he/she follows this blog",
                  "timedOut": false,
                  "duration": 166,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const blogId='61c9e7b3b47e807b87e3dc09';\n   userFunctions.doesFollow(email,blogId).then((res) => {\n   expect(res).to.be.a('object');\n   done();\n }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js:172:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "eedbfd94-e24d-447f-8ecd-70f3497abbf0",
                  "parentUUID": "22e54105-5313-4d09-8933-7a5a45134848",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "eedbfd94-e24d-447f-8ecd-70f3497abbf0"
              ],
              "pending": [],
              "skipped": [],
              "duration": 166,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e63c23da-fccb-4af8-b617-33413f410581",
              "title": "Unfollow Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unfollowed blog",
                  "fullTitle": "UserBlog Methodes Testing Unfollow Blog Testing should return object of the unfollowed blog",
                  "timedOut": false,
                  "duration": 481,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n    email:email,\n  },\n  body: {\n    blogId:'61c9e7b3b47e807b87e3dc09'\n  },\n};\nuserFunctions.unfollowBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f7e45d57-97b5-4bc2-994f-5886a29652b0",
                  "parentUUID": "e63c23da-fccb-4af8-b617-33413f410581",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Unfollow Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 326,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params={\n  decoded: {\n     email:email,\n   },\n   body:\n    {\n     blogId:'61c9e7b3b47e807b87e3dc00'\n    },\n };\nuserFunctions.unfollowBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1bd22efc-3e81-452c-96a1-fc42d01d2221",
                  "parentUUID": "e63c23da-fccb-4af8-b617-33413f410581",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7e45d57-97b5-4bc2-994f-5886a29652b0",
                "1bd22efc-3e81-452c-96a1-fc42d01d2221"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 807,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "602b23a6-654f-4542-b965-1b32ff85e054",
              "title": "Does Follow Testing Part 2",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return null because the user does not follow this blog any more",
                  "fullTitle": "UserBlog Methodes Testing Does Follow Testing Part 2 should return null because the user does not follow this blog any more",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId='61c9e7b3b47e807b87e3dc09';\n userFunctions.doesFollow(email,blogId).then((res) => {\n   expect(res).to.be.a('null');\n   done();\n }).catch(done);",
                  "err": {},
                  "uuid": "8d73b963-fd82-464b-bbe7-7fd424c82fcd",
                  "parentUUID": "602b23a6-654f-4542-b965-1b32ff85e054",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d73b963-fd82-464b-bbe7-7fd424c82fcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "884ef6d7-9772-4678-b312-b89358d717de",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b47e807b87e3dbe9';\nblogFunctions.blockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "191a8157-1e4a-442d-ae82-6c0cf74e77e2",
                  "parentUUID": "884ef6d7-9772-4678-b312-b89358d717de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b4e807b887e3dbe9';\nblogFunctions.blockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f333b52a-d962-435f-9e21-cd7ed5acc18a",
                  "parentUUID": "884ef6d7-9772-4678-b312-b89358d717de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "191a8157-1e4a-442d-ae82-6c0cf74e77e2",
                "f333b52a-d962-435f-9e21-cd7ed5acc18a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 491,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5526544d-3858-4008-a252-2f3a49b32107",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 328,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b47e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d4a88adb-9299-4bb5-8866-f71c30d087de",
                  "parentUUID": "5526544d-3858-4008-a252-2f3a49b32107",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId= '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId='61c9e680b00e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId,blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "cd308fc8-44e2-460c-acb2-ff6c684a2add",
                  "parentUUID": "5526544d-3858-4008-a252-2f3a49b32107",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4a88adb-9299-4bb5-8866-f71c30d087de",
                "cd308fc8-44e2-460c-acb2-ff6c684a2add"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 485,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "47c93c62-5c3d-49d1-af17-d8d00115f1a7",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the blog",
                  "fullTitle": "UserBlog Methodes Testing Delete Blog Testing should delete the blog",
                  "timedOut": false,
                  "duration": 358,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteBlog(email, blogId)\n .then((res)=>{\n expect(res).to.be.a('object');\n done();\n      }).catch(done);",
                  "err": {
                    "message": "AssertionError: expected null to be an object",
                    "estack": "AssertionError: expected null to be an object\n    at C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js:266:27\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                    "diff": null
                  },
                  "uuid": "0e54ee02-eda0-41c9-b1a6-ddcec1ccac0b",
                  "parentUUID": "47c93c62-5c3d-49d1-af17-d8d00115f1a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes Testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 330,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteBlog(email, blogId)\n    .then((res)=>{\n      expect(res).to.be.eq(null);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "5251f043-0104-4654-bb0a-1014ee7fe247",
                  "parentUUID": "47c93c62-5c3d-49d1-af17-d8d00115f1a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5251f043-0104-4654-bb0a-1014ee7fe247"
              ],
              "failures": [
                "0e54ee02-eda0-41c9-b1a6-ddcec1ccac0b"
              ],
              "pending": [],
              "skipped": [],
              "duration": 688,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "4915ed45-af05-47e6-9159-c6fbf531746d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3556,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "e4ff274a-6d57-4966-b4df-fbfbac2a53ff",
          "title": "User Functions",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cc488199-6e1c-450c-99c1-9976098c315c",
              "title": "Retrieve User Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the user with the given id",
                  "fullTitle": "User Functions Retrieve User Testing should return the user with the given id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const userId='61c9e0215954b6332bc203f0';\n userFunctions.retrieveUser(userId).then((res) => {\n   expect(res).to.be.a('object');\n   done();\n }).catch(done);",
                  "err": {
                    "message": "ReferenceError: userFunctions is not defined",
                    "estack": "ReferenceError: userFunctions is not defined\n    at Context.<anonymous> (test\\userTest.js:56:7)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "13e2ea4d-37d8-4eab-aa63-fc5dee6c7e65",
                  "parentUUID": "cc488199-6e1c-450c-99c1-9976098c315c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as the user is not found",
                  "fullTitle": "User Functions Retrieve User Testing should return null as the user is not found",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const userId='61c9e0215994b6332bc203f0';\n userFunctions.retrieveUser(userId).then((res) => {\n   expect(res).to.be.a('null');\n   done();\n }).catch(done);",
                  "err": {
                    "message": "ReferenceError: userFunctions is not defined",
                    "estack": "ReferenceError: userFunctions is not defined\n    at Context.<anonymous> (test\\userTest.js:64:7)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "def965b6-1580-4ba2-a262-b37b9dcd2306",
                  "parentUUID": "cc488199-6e1c-450c-99c1-9976098c315c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "13e2ea4d-37d8-4eab-aa63-fc5dee6c7e65",
                "def965b6-1580-4ba2-a262-b37b9dcd2306"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0521571c-b831-4d39-a801-42a1b36a6a9c",
              "title": "Delete User Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the user and return its primary Blog after deletion",
                  "fullTitle": "User Functions Delete User Testing should delete the user and return its primary Blog after deletion",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteUser(userEmail)\n .then((res)=>{\n expect(res).to.be.a('object');\n done();\n      }).catch(done);",
                  "err": {
                    "message": "ReferenceError: userFunctions is not defined",
                    "estack": "ReferenceError: userFunctions is not defined\n    at Context.<anonymous> (test\\userTest.js:78:8)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "b3f2c822-2ffc-43de-9219-82832f0fd134",
                  "parentUUID": "0521571c-b831-4d39-a801-42a1b36a6a9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false because there is no user with the requested email",
                  "fullTitle": "User Functions Delete User Testing should return false because there is no user with the requested email",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteUser(userEmail)\n    .then((res)=>{\n      expect(res).to.be.eq(null);\n      done();\n    }).catch(done);",
                  "err": {
                    "message": "ReferenceError: userFunctions is not defined",
                    "estack": "ReferenceError: userFunctions is not defined\n    at Context.<anonymous> (test\\userTest.js:86:13)\n    at processImmediate (node:internal/timers:464:21)",
                    "diff": null
                  },
                  "uuid": "df193ba9-cd03-4c03-817a-ddb7c38dfd2d",
                  "parentUUID": "0521571c-b831-4d39-a801-42a1b36a6a9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b3f2c822-2ffc-43de-9219-82832f0fd134",
                "df193ba9-cd03-4c03-817a-ddb7c38dfd2d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8b3c0da4-0f17-4ecf-ab92-953fb64dd09c",
              "title": "Update user",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It sets interests of the user",
                  "fullTitle": "User Functions Update user It sets interests of the user",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst interests=[\n  \"flowers\",\n  \"math\",\n  \"nasa\",\n  \"education\"\n]\nuserFunc.getInterests(email, interests)\n.then((result) => {\n  expect(result.followedTags[0]).to.be.eq(interests[0]);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "70bab82b-ff63-486e-85a1-9042400c6a77",
                  "parentUUID": "8b3c0da4-0f17-4ecf-ab92-953fb64dd09c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It updates color theme of the user",
                  "fullTitle": "User Functions Update user It updates color theme of the user",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst colorNumb=3;\nuserFunc.updateColor(email, colorNumb).then((result) => {\n  console.log('result: ', result);\n  expect(result.bodyColor).to.be.eq(colorNumb);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "83cf9c5c-18bc-47e8-b127-59821c4605b1",
                  "parentUUID": "8b3c0da4-0f17-4ecf-ab92-953fb64dd09c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70bab82b-ff63-486e-85a1-9042400c6a77",
                "83cf9c5c-18bc-47e8-b127-59821c4605b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 332,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "430658ca-839a-43e8-aedf-77b998b5ce37",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c7ee2aa4-767f-44d2-ab7e-e92c5c417e9d",
                  "parentUUID": "430658ca-839a-43e8-aedf-77b998b5ce37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8a579ae8-d693-4d15-8162-ef041bcf8bb2",
                  "parentUUID": "430658ca-839a-43e8-aedf-77b998b5ce37",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7ee2aa4-767f-44d2-ab7e-e92c5c417e9d",
                "8a579ae8-d693-4d15-8162-ef041bcf8bb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 323,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "22f3c8fa-cb39-4e0f-99dd-db4d307a1d3e",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'CMP-2023';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0ed4e685-b854-4049-9a8f-8ff7b3b853db",
                  "parentUUID": "22f3c8fa-cb39-4e0f-99dd-db4d307a1d3e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "b345775c-7c25-457f-9d0b-ff32ffd60d9d",
                  "parentUUID": "22f3c8fa-cb39-4e0f-99dd-db4d307a1d3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ed4e685-b854-4049-9a8f-8ff7b3b853db",
                "b345775c-7c25-457f-9d0b-ff32ffd60d9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 327,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d9dd02fa-e2bf-40de-9d53-ea3c74638584",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User Functions Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 269,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f1962a01-d729-4ce9-bdd5-a1922ca5e7fa",
                  "parentUUID": "d9dd02fa-e2bf-40de-9d53-ea3c74638584",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1962a01-d729-4ce9-bdd5-a1922ca5e7fa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 269,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "9b64c940-1c73-4eeb-92d7-2b23c8701956",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User Functions Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1658,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1bfba255-ae70-4eee-997c-116afac251f3",
                  "parentUUID": "9b64c940-1c73-4eeb-92d7-2b23c8701956",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bfba255-ae70-4eee-997c-116afac251f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1658,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "77f2186b-22ac-404a-9f64-15f8cd0cc283",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a92ade6a-b09e-4c45-bd6d-f270d715df04",
                  "parentUUID": "77f2186b-22ac-404a-9f64-15f8cd0cc283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e2f3fd9a-455b-47d7-a2e4-553fa3d9f1bd",
                  "parentUUID": "77f2186b-22ac-404a-9f64-15f8cd0cc283",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a92ade6a-b09e-4c45-bd6d-f270d715df04",
                "e2f3fd9a-455b-47d7-a2e4-553fa3d9f1bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "663bc600-726c-4ac8-a5e1-27a2225841cb",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User Functions Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 238,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2b4cc583-7c45-4b33-b5c1-dc9b6333bf73",
                  "parentUUID": "663bc600-726c-4ac8-a5e1-27a2225841cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b4cc583-7c45-4b33-b5c1-dc9b6333bf73"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 238,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ba495a75-acce-408d-80d0-fb31fa6301df",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User Functions Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 902,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmedatcmp@gmail.com';\nconst name = 'Game-1';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "dd42349e-2e1b-4aa6-9a44-e91bd6e53017",
                  "parentUUID": "ba495a75-acce-408d-80d0-fb31fa6301df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd42349e-2e1b-4aa6-9a44-e91bd6e53017"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 902,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "381669f4-cca2-47c1-a9e3-be912305f761",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User Functions Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 1312,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "3c445f7b-7827-43bd-92cb-46c55ca331df",
                  "parentUUID": "381669f4-cca2-47c1-a9e3-be912305f761",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c445f7b-7827-43bd-92cb-46c55ca331df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1312,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "200f5602-8343-44b5-85fd-22f9deb411f9",
              "title": "Check Post Id",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 162,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f4';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "5dc4775d-c671-4398-893d-5af0b870d192",
                  "parentUUID": "200f5602-8343-44b5-85fd-22f9deb411f9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f0';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d876e112-f39f-4e60-a063-7cc8dad3db9f",
                  "parentUUID": "200f5602-8343-44b5-85fd-22f9deb411f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5dc4775d-c671-4398-893d-5af0b870d192",
                "d876e112-f39f-4e60-a063-7cc8dad3db9f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 319,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "db796c5f-3792-49a1-ab55-1171fc50fe08",
              "title": "get UserId From PostId ",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get UserId From PostId ",
                  "fullTitle": "User Functions get UserId From PostId  get UserId From PostId ",
                  "timedOut": false,
                  "duration": 512,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nuserServices.getUserIdFromPostId(postId).then((result) => {\n  expect(result).to.be.eq('61c9d749b33bf76a71baed86');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "35cb9801-5af0-4194-a13b-4e6e7225db80",
                  "parentUUID": "db796c5f-3792-49a1-ab55-1171fc50fe08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35cb9801-5af0-4194-a13b-4e6e7225db80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 512,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3e1f4539-f54d-4155-b522-6c0e39dfcfac",
              "title": "Create Notification",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Notification",
                  "fullTitle": "User Functions Create Notification It Should Create Notification",
                  "timedOut": false,
                  "duration": 1654,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nconst type = 'like';\nnotificationFunction.addNotification(postId, type).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "bd5835de-e370-4e98-9a3f-12d5ec243825",
                  "parentUUID": "3e1f4539-f54d-4155-b522-6c0e39dfcfac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd5835de-e370-4e98-9a3f-12d5ec243825"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1654,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "98eb0387-3deb-4f42-9d6e-aafce6fbca69",
              "title": "Create New Chat",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Chat Message",
                  "fullTitle": "User Functions Create New Chat It Should Create New Chat Message",
                  "timedOut": false,
                  "duration": 485,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "message = 'Test';\n      sendUserId = '61c9d749b33bf76a71baed86';\n      receiveUserId = '61c9e0215954b6332bc203f0';\n      sendBlogName = 'CMP-2023';\n      recieveBlogName = 'Engineer';\n      notificationFunction.addchat(message, sendUserId, receiveUserId, sendBlogName, recieveBlogName).then((result) => {\n        expect(result).to.be.eq('Created');\n        done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "6d59c897-2266-4847-ad8a-06d97c42a04f",
                  "parentUUID": "98eb0387-3deb-4f42-9d6e-aafce6fbca69",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d59c897-2266-4847-ad8a-06d97c42a04f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 485,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}