{
  "stats": {
    "suites": 10,
    "tests": 9,
    "passes": 7,
    "pending": 0,
    "failures": 2,
    "start": "2021-12-07T17:46:00.116Z",
    "end": "2021-12-07T17:46:05.464Z",
    "duration": 5348,
    "testsRegistered": 9,
    "passPercent": 77.77777777777779,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d594921-d2b9-4da9-9fad-e1bc1f9b8964",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "431ba9f6-b1b9-4b3f-bc07-445512123c99",
          "title": "Post APIs",
          "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "789f0379-7415-4bad-bc45-bf28e756e228",
              "title": "Function createPost Don't Post Blog Post",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Not Create New Post Because Blog Doesn't Exist",
                  "fullTitle": "Post APIs Function createPost Don't Post Blog Post It Should Not Create New Post Because Blog Doesn't Exist",
                  "timedOut": false,
                  "duration": 3378,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogPost = {\n  postHtml: '</>',\n  type: 'video',\n  state: 'published',\n  tags: 'engineering'\n};\nchai.request(server)\n    .post('/61968c974f161173940ea9ca/posts/create_post')  //no blog with this id\n    .send(blogPost)\n    .end((err, res) => {\n      res.should.have.status(400);\n      res.body.should.be.eq('Blog Not Found (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "0a21dcb3-e224-4692-ac7d-cd65d54d8de3",
                  "parentUUID": "789f0379-7415-4bad-bc45-bf28e756e228",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a21dcb3-e224-4692-ac7d-cd65d54d8de3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3378,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "4e0cfdd2-c9ee-41ce-90b4-bd9c94e1aad8",
              "title": "Function createPost Internal Server Error",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Not Create New Post Due To Server Error",
                  "fullTitle": "Post APIs Function createPost Internal Server Error It Should Not Create New Post Due To Server Error",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogPost = {\n  postHtml: '</>',\n  type: 'video',\n  state: 'published',\n  tags: 'engineering'\n};\n    \nchai.request(server)\n    .post('/1/posts/create_post')  //no blog with this id\n    .send(blogPost)\n    .end((err, res) => {\n      res.should.have.status(500);\n      res.body.should.be.eq('Error In Create Post Function (<:>)');\n      done();\n    });",
                  "err": {},
                  "uuid": "ab4a42ab-10b0-4089-a208-7ee0d5c0c5c3",
                  "parentUUID": "4e0cfdd2-c9ee-41ce-90b4-bd9c94e1aad8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab4a42ab-10b0-4089-a208-7ee0d5c0c5c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5e5b3e32-c851-4ca4-9d54-3054a50a3e0c",
              "title": "Function showPost",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get a Post and Show it",
                  "fullTitle": "Post APIs Function showPost It Should Get a Post and Show it",
                  "timedOut": false,
                  "duration": 146,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/posts/6196df230578db004e05d179/show_post') \n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.eq('</>');\n      done();\n    });",
                  "err": {},
                  "uuid": "152904f4-1712-4dbf-8204-d8b69df3d7e9",
                  "parentUUID": "5e5b3e32-c851-4ca4-9d54-3054a50a3e0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "152904f4-1712-4dbf-8204-d8b69df3d7e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "59f3d5bd-c0d8-4196-a13f-505d978fcd77",
              "title": "Function loopAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let arr = [0,1,2];\nlet element = 1;\n//expect(postControl.loopAndCheck(arr, element)).to.be.equal(1);\npostControl.loopAndCheck(arr, element).should.be.eq(1);\n    done();",
                  "err": {},
                  "uuid": "78300b33-7364-4389-9f9d-741b4ebc01b3",
                  "parentUUID": "59f3d5bd-c0d8-4196-a13f-505d978fcd77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78300b33-7364-4389-9f9d-741b4ebc01b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "bfcae8eb-52bd-4634-9571-c7d029ee00b4",
              "title": "Function loopObjAndCheck",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let a = mongoose.Types.ObjectId(\"61af36a793d7c3194ff42269\");\nlet b = mongoose.Types.ObjectId(\"61ae881aab9ea73f2282b03e\");\nlet c = mongoose.Types.ObjectId(\"61ae887d2676ed5d9b5d532f\");\nlet arr = [\n  {text: 'a',_id: a},\n  {text: 'shd',_id: b},\n  {text: 'akj',_id: c}\n];\nlet element = '61ae881aab9ea73f2282b03e';\nlet pos = 0;\npostControl.loopObjAndCheck(arr, element, pos).should.be.eq(1);\n    done();",
                  "err": {},
                  "uuid": "6f527e86-a708-4922-b0ac-86a598fa3d42",
                  "parentUUID": "bfcae8eb-52bd-4634-9571-c7d029ee00b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f527e86-a708-4922-b0ac-86a598fa3d42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "85f833ea-a326-42ca-9d96-64ddc5af7067",
              "title": "Function likePress",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 924,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .put('/61968c974f161173940ea9cb/61ae667d8b4d5620ce937992/like_press')\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.eq('Post Liked Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "4feae6a3-0a23-494f-9a5e-5e3521747083",
                  "parentUUID": "85f833ea-a326-42ca-9d96-64ddc5af7067",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4feae6a3-0a23-494f-9a5e-5e3521747083"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 924,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "01321bc6-d591-474d-bb8e-e2e4a96bc50a",
              "title": "Function removeComment",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Comment",
                  "fullTitle": "Post APIs Function removeComment It Should Remove a Comment",
                  "timedOut": false,
                  "duration": 296,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/61ae667d8b4d5620ce937992/61ae881aab9ea73f2282b03e/remove_comment')\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.eq('Comment Removed Successfully');\n      done();\n    });",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 400",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 400\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js:177:31\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1244:12)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21)",
                    "diff": "- 400\n+ 200\n"
                  },
                  "uuid": "eb7edcbd-bffd-42fa-b9b1-d1d52def96a8",
                  "parentUUID": "01321bc6-d591-474d-bb8e-e2e4a96bc50a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "eb7edcbd-bffd-42fa-b9b1-d1d52def96a8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 296,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "deff389a-7c57-4bb6-9c16-767167198517",
              "title": "Function removeReblog",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Remove a Reblog",
                  "fullTitle": "Post APIs Function removeReblog It Should Remove a Reblog",
                  "timedOut": false,
                  "duration": 291,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .delete('/61ae667d8b4d5620ce937992/61af961c981bc795d5535da0/remove_reblog')\n    .end((err, res) => {\n      res.should.have.status(200);\n      res.body.should.be.eq('Reblog Removed Successfully');\n      done();\n    });",
                  "err": {
                    "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 400",
                    "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 400\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js:189:31\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\node_modules\\superagent\\lib\\node\\index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1244:12)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21)",
                    "diff": "- 400\n+ 200\n"
                  },
                  "uuid": "1ab26f39-ebb9-458f-b30f-c02008d6b4bd",
                  "parentUUID": "deff389a-7c57-4bb6-9c16-767167198517",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "1ab26f39-ebb9-458f-b30f-c02008d6b4bd"
              ],
              "pending": [],
              "skipped": [],
              "duration": 291,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f5f3266d-bc32-4862-91b5-4eac829b0676",
              "title": "Function getNotes",
              "fullFile": "D:\\AbeerD\\College\\third year\\SW Engineering\\Backend_Tumblr-4u\\node.js-main\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Notes",
                  "timedOut": false,
                  "duration": 289,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/posts/61ae667d8b4d5620ce937992/notes')\n    .end((err, res) => {\n      res.should.have.status(200);\n      //res.body.should.be.eq('Reblog Removed Successfully');\n      done();\n    });",
                  "err": {},
                  "uuid": "959a3e9f-f39c-472f-b3c1-eb44dc22644a",
                  "parentUUID": "f5f3266d-bc32-4862-91b5-4eac829b0676",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "959a3e9f-f39c-472f-b3c1-eb44dc22644a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 289,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}