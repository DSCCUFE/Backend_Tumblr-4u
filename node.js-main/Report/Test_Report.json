{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-19T15:13:14.675Z",
    "end": "2021-11-19T15:13:15.110Z",
    "duration": 435,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4a284c9-2619-4088-a00d-f034c612bb15",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd320922-4bdc-4f33-a4a7-c4eb1ce72118",
          "title": "Search APIs",
          "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
          "file": "\\test\\search_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cc02aae2-58bf-4d5f-9c00-97d4789ecbd4",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
              "file": "\\test\\search_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'Ra'};\nchai.request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      res.body[0][0].should.be.eq('Rachel Ritchie');\n      done();\n    });",
                  "err": {},
                  "uuid": "07761ea3-73a1-4386-8c5a-39ab210f610d",
                  "parentUUID": "cc02aae2-58bf-4d5f-9c00-97d4789ecbd4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07761ea3-73a1-4386-8c5a-39ab210f610d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 177,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2cc7a29d-09a5-47b7-b2b7-568eafe174d4",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
              "file": "\\test\\search_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Search It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'RANK'};\nchai.request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      res.body[0][0].should.be.eq('Franklin Kemmer');\n      done();\n    });",
                  "err": {},
                  "uuid": "89e8fb6a-ae12-4868-aa66-127f9415d18d",
                  "parentUUID": "2cc7a29d-09a5-47b7-b2b7-568eafe174d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89e8fb6a-ae12-4868-aa66-127f9415d18d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 33,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a3935f8b-bdda-41d3-b855-9f0150b0a100",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
              "file": "\\test\\search_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 59,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'ana'};\nchai.request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      res.body[1][0].name.should.be.eq('Jana Parisian');\n      done();\n    });",
                  "err": {},
                  "uuid": "d13c7eda-5173-4a9e-9dc7-abcc755f7a7c",
                  "parentUUID": "a3935f8b-bdda-41d3-b855-9f0150b0a100",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d13c7eda-5173-4a9e-9dc7-abcc755f7a7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "68d2bd54-906e-46ec-9a67-fd5b8edf87cb",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
              "file": "\\test\\search_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get followed/interested tags by a blog",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get followed/interested tags by a blog",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: 'com'};\nchai.request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      res.body[2][0].followedTags[0].should.be.eq('compress');\n      done();\n    });",
                  "err": {},
                  "uuid": "396a9b6a-c1e5-412b-9d69-6ad04490e3eb",
                  "parentUUID": "68d2bd54-906e-46ec-9a67-fd5b8edf87cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "396a9b6a-c1e5-412b-9d69-6ad04490e3eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "13689d89-35ca-4724-889a-928a27c1d6cd",
              "title": "Search Dashboard Search",
              "fullFile": "D:\\faculty\\CMP3\\software engineering\\Backend_Tumblr-4u\\node.js-main\\test\\search_test.js",
              "file": "\\test\\search_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get nothing when nothing is entered",
                  "fullTitle": "Search APIs Search Dashboard Search It Should get nothing when nothing is entered",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={wordName: ''};\nchai.request(server)\n    .get('/autoCompleteSearchDash')\n    .send(wordName)\n    .end((err, res) => {\n      res.body.should.be.eq(',wordName, is not allowed to be empty');\n      done();\n    });",
                  "err": {},
                  "uuid": "8e497d6d-27a1-4303-8f54-445912b6f549",
                  "parentUUID": "13689d89-35ca-4724-889a-928a27c1d6cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e497d6d-27a1-4303-8f54-445912b6f549"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}